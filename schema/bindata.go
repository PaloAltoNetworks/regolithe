// Code generated by go-bindata.
// sources:
// gen.sh
// rego-abstract.in
// rego-abstract.json
// rego-attribute.in
// rego-info.json
// rego-param.in
// rego-shared-params.in
// rego-shared-params.json
// rego-spec.in
// rego-spec.json
// rego-type-mapping.json
// rego-validation-mapping.json
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _genSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc4\x20\x14\x84\xef\xfe\x8a\xd7\xb4\x60\x7b\x50\x7f\x40\xa0\x90\x42\x0e\x3d\x14\x4a\xb0\x67\x79\x1a\x6b\x6c\x1b\x15\xb5\xff\x7f\xd9\x6c\x58\xb2\x61\x2f\xcb\x1e\xdf\x0c\x33\xf3\xf1\x1e\x1f\x84\xf6\x41\x68\x2c\x13\x21\xc9\xe6\x3f\x60\xc9\x02\x2d\x42\xa9\x4e\xca\xe1\xfd\xed\x4b\xf6\x4a\x09\xda\x3c\x3d\x1b\xac\x90\xad\x8b\x0c\x6b\xcd\x5e\xff\x57\xcb\x7d\x78\x69\xa8\x70\x2d\x5d\x0d\x5d\x6a\x46\x53\xb9\x0f\xf0\xba\x93\x7e\x4a\x0c\xf7\x0c\x9c\x53\x9f\xdd\xd0\x7d\xf4\xb2\x1f\xf6\xa9\x84\x19\xe7\x3d\x52\x49\xd6\x6c\x70\x96\xf3\x0a\xca\x8d\xa5\x13\x66\x3b\x9e\xbc\xb2\x6d\xbf\xd0\x97\x19\x92\x67\x60\xdf\xc0\x8f\x5f\x1e\xb1\x22\x77\xb1\x25\x2e\xb2\xf5\x04\x96\x7e\x1d\x14\x33\xd9\x19\x81\x93\x43\x00\x00\x00\xff\xff\xfe\x7b\x84\xde\x8e\x01\x00\x00")

func genShBytes() ([]byte, error) {
	return bindataRead(
		_genSh,
		"gen.sh",
	)
}

func genSh() (*asset, error) {
	bytes, err := genShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen.sh", size: 398, mode: os.FileMode(493), modTime: time.Unix(1533220356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xbf\xaf\xda\x40\x0c\xde\xf3\x57\x58\xa1\x63\x20\x9d\x3a\xb0\x51\xb5\x03\x5b\x55\xd1\x39\x72\x72\x0e\x39\x14\xee\x22\xdb\xa8\x45\x15\xff\x7b\x75\xb9\x10\x92\xd0\xf7\x78\xe3\xf9\xfb\xe1\x4f\xfe\xee\x6f\x02\x00\x90\x7e\x92\xaa\xa1\x33\xa6\x5b\x48\x1b\xd5\x6e\x9b\xe7\x27\xf1\x6e\x1d\xa7\x1b\xcf\xc7\xdc\x30\xd6\xba\xfe\xfc\x25\x8f\xb3\x55\x9a\x45\xa5\x5a\x6d\x29\xe8\x76\xa5\x28\x63\xa5\x77\xc0\x90\x54\x6c\x3b\xb5\xde\xf5\xb0\x03\x1c\x18\x80\x6d\xeb\x7f\x0b\xa8\x07\x43\x55\x8b\x4c\x80\x20\xa4\xe0\x6b\x28\x51\x08\x50\x95\x6d\x79\x51\x12\x40\x67\x72\xcf\xc0\xd4\x62\x70\x12\xd0\x06\x15\x2a\x74\x50\x12\x30\x5d\x84\x0c\x58\xa7\x1e\xbc\x36\xc4\x20\x1d\x55\xb6\xb6\x55\x24\x8f\x19\xaf\x5d\x1f\xd1\x97\x27\x7a\x04\x44\x63\x6c\xa0\x61\xfb\x83\x7d\x47\xac\x96\x24\xdd\x42\x8d\xad\x50\x96\x44\x4e\x37\x45\xe2\xad\xa2\x76\x4c\x38\x9b\xc7\x5b\x32\xd5\x61\xdb\x2a\x37\x54\x5b\xd7\xef\x90\x7c\xa2\x18\xe9\xb7\xec\xe1\x68\x9d\xa1\x3f\x1f\xb7\xbb\xd3\x1f\x5e\xc9\xc4\x31\x9d\x50\xe7\xc1\xdf\x5c\x33\xf6\xb8\x1f\x18\xd9\x1c\x5f\xd4\xf9\xad\x7f\x96\x14\x0a\x21\x18\x5c\x43\x81\xe1\x19\x5a\xd8\x2c\x0d\xde\x3f\xf7\x3c\xcb\xd0\x17\x32\xe3\x75\xe9\x63\x95\xce\xcf\xf9\x5f\xea\x5e\x68\x67\x7a\x51\xb6\xee\x98\x3e\x91\x6e\xc9\xff\x5f\xd3\x1e\x17\x3f\xa3\x28\x76\x87\xc3\xcf\xfd\xd7\x5f\x87\xef\x45\xb1\x2c\x2b\xb9\x25\xff\x02\x00\x00\xff\xff\x2d\x2e\x3c\x87\x80\x03\x00\x00")

func regoAbstractInBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractIn,
		"rego-abstract.in",
	)
}

func regoAbstractIn() (*asset, error) {
	bytes, err := regoAbstractInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.in", size: 896, mode: os.FileMode(420), modTime: time.Unix(1554509540, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x0c\xdc\x02\x05\xde\x37\x69\xba\x97\x05\x9a\x5b\x80\xed\x21\x40\xbb\x5b\x2c\xf6\xd4\x20\x35\x46\xd2\xc8\x66\x4b\x91\xec\x90\x4a\xec\x5d\xe4\xbf\x2f\x48\x7d\x58\xf2\x97\x64\x4b\xb1\xbb\x3d\x34\xb6\x38\x33\xe4\x33\x33\x7c\x66\x28\xfa\x9f\x0b\x00\x80\xc9\x6b\x1b\xcf\x29\xc3\xc9\x0d\x4c\xe6\xce\x99\x9b\xeb\xeb\x6f\x56\xab\xab\xe2\xe9\x5b\xcd\xb3\xeb\x84\x31\x75\x57\xef\x7e\xbd\x2e\x9e\xbd\x9a\x5c\x16\x9a\x4e\x38\x49\x5e\xef\x36\xb2\x8e\x31\x76\xd5\x40\x42\x36\x66\x61\x9c\xd0\x2a\x0c\x2b\xc0\x52\x02\x50\x4a\xfd\x64\xc1\x69\x48\x28\x96\xc8\x04\x08\x96\x1c\xe8\x14\x22\xb4\x04\xe8\x1c\x8b\x28\x77\x64\x01\x55\x72\xad\x19\x98\x24\x7a\x4b\x16\xdc\x1c\x1d\xc4\xa8\x20\x22\x60\xca\x2d\x25\x20\x94\xd3\xa0\xdd\x9c\x18\xac\xa1\x58\xa4\x22\x2e\x84\xeb\x35\x2e\x4d\x58\xa2\x8e\xbe\xd1\x6a\x81\x98\x24\xc2\x8b\xa1\xfc\xcc\xda\x10\x3b\x41\x76\x72\x03\x29\x4a\x4b\x97\x17\x85\x8c\x69\x8e\x14\xbe\x2a\x74\xeb\x15\xb6\x9e\x17\xbe\x64\x4a\xfd\x6c\xaf\xae\x13\x4a\x85\x0a\x73\xd8\xeb\x86\x46\x2d\xfe\x7c\xb9\xb2\x28\x54\x42\x8b\xfe\xe6\x2a\xf1\x95\xad\x8b\x86\xc5\x49\x43\xb4\xbd\xf0\x9d\xd3\xd4\x71\xbc\x2b\x25\x2e\xdb\xe3\x6b\xe1\xfc\x2d\x7c\x8d\xc8\x07\x84\xa0\xb4\xea\x03\xe8\xbf\xfa\x28\xbc\x5d\x37\xb0\xdf\xdd\xed\xb5\x94\xf1\x42\x66\x5c\xae\xdb\x11\x8e\xb2\xcd\xf5\x77\xea\x75\xe8\xb6\xf4\xad\x63\xa1\x66\x93\x0d\xa1\xe7\x8b\xed\xdf\x9a\x71\xdc\x97\x19\x5b\xf3\x70\x97\x87\x3f\x0a\x1b\x76\xc4\x23\xb1\x15\x5a\x51\xd2\xd8\x16\x43\x9c\x6b\xd0\x39\x62\xf5\x79\x7b\x66\xd7\x62\x5f\x1f\xef\xdf\x5d\xbd\x7f\xf8\xff\xeb\x6e\x77\xed\x72\xf7\x3e\x54\x8d\x2d\x2e\x14\x20\x18\x64\x27\xe2\x5c\x22\x57\x80\xdf\xc2\x9d\x83\x27\x21\x25\xe4\x9e\x12\xa4\x6c\xea\xa4\xac\xb3\x90\x6a\x86\xe9\x51\xe8\xdc\x56\x5a\x81\x31\x00\x93\x04\x34\x83\x7e\x24\x7e\x62\xe1\x28\x88\x6a\x45\xb6\x22\x9c\x64\xdd\x83\xf5\x7a\xf7\xa7\x48\x77\x18\xf7\x81\xff\x93\x0c\x93\x25\xe5\xfc\x2a\x57\x70\xaa\x6d\xc3\xd5\x30\x25\x50\xd8\xde\xb5\xca\x60\x9c\xe9\x47\x2e\x98\x92\xc9\x0d\xdc\xef\x94\x0a\x92\x0a\x33\xda\x63\x69\x05\xaa\x43\xa6\x09\x67\xa7\xe4\xc3\x9e\x25\xf7\x4f\xd3\x96\xda\x0e\x16\xde\x3e\x85\xaf\x2d\x94\x4c\xe3\x39\x72\xb7\xf8\x06\xac\x10\xa5\x19\x2d\x4c\x51\x68\x10\x0a\x2e\x68\x04\x2b\xcb\xad\x83\xb9\x56\x9a\x7d\x01\x8b\x08\x1e\x51\x8a\xa4\xc3\x75\xd0\x87\x5e\x9a\xff\x9e\x3b\x42\xd1\x82\x39\xcd\xc8\x5a\x9c\xd1\x51\x70\x3f\x15\xba\x40\x0b\x23\x51\x28\x0f\xb6\x48\xc6\xe0\x85\x6a\xbf\x84\x5d\xda\x72\xed\xd9\x00\x6b\x11\xf7\x48\x84\x6d\x50\x6f\x0b\x1b\x3e\x62\xb9\x27\x11\xcd\x9b\xfb\x70\x69\x08\x3e\xa8\x3c\x3b\x04\xdf\x3e\x02\x6c\x29\x74\x93\xcb\x56\xfb\xa5\xff\xba\x27\x80\x06\xc1\x7b\xc5\xaf\xf7\xb7\x57\x5f\x7e\xb9\x7a\xff\x70\x8f\x57\x7f\xdf\x5e\x7d\xf1\x8c\xfe\xbf\xd7\xfb\x03\x01\x1b\x85\x6e\x63\xb4\x2b\x54\xb9\xd3\x33\x52\xc4\xe8\x02\x3b\x1d\x1e\xa8\xbf\xe6\x8d\x26\x10\x84\x85\x96\x49\x88\x96\x21\x45\x23\x8c\xbf\x93\x3a\x68\xeb\x45\x5a\x4b\xc2\x3d\xec\xd5\x07\x5f\xcc\x14\xfa\xcb\xa9\x56\x72\x39\x02\x3e\xdf\xcd\x7a\x53\x9e\x4c\x7c\x1b\x9c\xe4\x81\x72\xc2\x34\x04\x9e\xfa\xc2\x74\x27\xc7\x99\x50\x8a\xb9\x74\x53\xcd\x09\xf1\xd1\x38\xc3\x66\xab\x4a\x5c\x2b\xa8\xa1\x79\x47\x5f\x93\xc3\x3c\x10\xe6\xf1\xc8\xbf\x53\xaf\xdd\xf4\x22\x60\xc3\x72\x8f\x06\x5b\x41\xd9\x0e\xfa\x00\x50\xf7\x15\xa9\xac\xe0\x5d\xfa\xee\xdd\xd1\x8c\xd8\x7f\x54\xb9\x94\xc5\xdf\x2c\x2a\x9e\x54\xed\x48\xcd\x17\x0f\x03\x1d\x62\x98\xe2\xf1\xb6\x70\xc3\xde\xe9\x63\xdb\x5c\xda\xb1\x91\xad\x1f\x0d\x89\xeb\x28\xb5\x90\x16\x98\x19\x49\x03\x72\xf5\x43\x61\xa1\xcc\x53\x5f\x08\xff\xbb\x89\x4a\x0b\xa3\xed\x58\x59\x6a\xf2\x48\x8a\x58\x2e\xa1\xb2\x7a\x44\xae\xf6\x50\x29\x79\xc2\x6b\x39\xce\x69\x68\x3a\x38\x52\x76\xe3\xac\xbf\x67\xf2\x96\x0f\xfe\x30\xf8\x23\x27\x4f\xba\x65\x3a\x18\x14\xdc\x7e\xd1\x12\x98\x3a\x5a\x42\xac\x33\x23\x24\xf1\xc6\x01\x74\xeb\x3c\x6b\xe7\xa4\x41\x18\x53\x21\x1d\x31\x46\xf2\x78\x6e\x6e\x17\xdc\x0a\x95\xcf\xfd\xc2\xb8\xaf\x3c\x26\x67\x1f\xf6\x83\xba\xdb\x51\x28\x2a\xd5\x4c\x62\xa6\xa6\xbe\xf4\x8d\xd3\x31\x41\x69\xf2\x2c\xd5\x74\x46\xbe\x07\x1d\x01\x49\x78\x01\x30\xc7\x47\x02\x84\x55\x03\x58\x9a\x3f\x35\x2a\x91\x90\x72\x22\x15\xa3\x20\x6b\x34\x40\x08\x19\x0a\x05\x0d\xf3\x2f\xc3\x3a\xb9\x12\x3f\x72\xba\x2b\x0f\x21\x9e\x78\x06\xb9\x23\xc3\xc5\x54\x92\x9a\xb9\xf9\xd1\xee\xc8\x70\x21\xb2\x3c\x83\xc2\xcc\x66\x97\x58\x9d\xc8\x7a\x9f\x80\x6a\xb7\x54\x15\x68\x30\xc2\x61\x0d\x61\x05\x70\x47\x17\x5c\xe1\xab\xeb\xe5\xa9\x01\x0a\x35\x38\x84\x42\xfd\xd4\x21\x14\x6a\x68\x08\x4b\x80\x3f\x69\x08\xc3\xcb\xbd\x63\xb1\x79\xe5\xb3\xb7\xb3\x3a\x13\x6e\x4a\x99\x71\xc7\x95\xbe\xbb\x34\x50\xd9\xe5\x5a\x5c\xca\x22\x9f\xb0\x36\x86\x12\x10\x29\x84\x29\x40\x33\x14\x2d\xe9\x89\x8b\x47\x38\xdd\xbe\x50\x03\x53\x9f\x9c\xcf\xd6\xbf\x18\x16\x19\xf2\x72\xbc\xfe\xa5\xa8\x8d\x50\xda\x3d\x4b\x13\xc3\x84\xc9\x58\xef\x78\x84\x05\x6f\x2e\xbc\xe7\x39\x03\x90\xfa\xa6\x60\x14\x1c\xa5\xb5\x53\xc3\xb0\x14\x33\xb9\x71\x40\x14\xb6\xc2\x65\x91\x9d\xeb\x5c\x26\x81\x2b\x08\xa5\x83\x27\xe1\xe6\x10\x23\x1f\xc4\x83\x23\x01\x7c\xd1\xae\xd9\x9e\xa7\x6b\xb6\x4e\x8f\x96\x7b\xa5\xad\x97\x3e\x94\x0f\x6e\x8d\x6d\x1e\x95\x0b\x18\x56\x97\x33\x34\x26\xdc\xc8\x68\x30\x22\xfe\x1e\xc8\xfe\x69\x4e\x2a\xd4\xba\xa2\xed\xb0\xe1\x9d\xb1\xd3\xf0\x86\x16\x8e\x58\xa1\x7c\x73\xea\x02\xee\x18\x95\x15\xa4\x46\xda\x9b\x2b\x73\xa7\x4e\xd5\x41\x31\x0b\xe1\x68\x5e\x6d\x1f\x11\x86\x1e\x1a\xa4\xf2\xac\xf3\xca\xb7\x96\x3e\xec\xea\xa8\x7f\x0f\x1b\xc4\x53\xa9\xb1\x4f\x90\x82\x70\xff\x8d\x08\x35\xcc\x9e\xb2\x52\xd8\xde\xcb\xe8\xbc\xb4\x6f\x49\x3b\xd1\x79\x73\x5e\xcb\x56\xdb\xaf\xaf\x3c\x53\x7a\x80\xe8\xc7\x03\x30\x32\xa5\x9f\xd0\x74\x5f\xf3\x0d\x7b\xef\x1a\xee\xbd\x71\xf3\x37\x46\x3b\x15\xd6\xf6\xcc\xef\x25\xc7\x21\xc4\xb9\x75\x3a\x83\x95\xc1\xd5\xef\x3b\xa6\xcd\x87\x42\x92\x27\x3a\x34\x46\x2e\xfd\x87\xa3\x4f\x2d\x27\xba\xb0\xed\x54\xea\xb8\x67\xdd\x39\xba\x7d\x64\xf3\xe9\xce\x1f\x2c\x5d\x14\xff\x3f\x5f\xfc\x1b\x00\x00\xff\xff\xe8\x9c\x5b\x36\x00\x28\x00\x00")

func regoAbstractJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractJson,
		"rego-abstract.json",
	)
}

func regoAbstractJson() (*asset, error) {
	bytes, err := regoAbstractJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.json", size: 10240, mode: os.FileMode(420), modTime: time.Unix(1554517774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAttributeIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x51\x8f\xdb\x36\x0c\x7e\xef\xaf\x20\x82\x02\x05\xb6\x5e\xb1\x3d\xb6\x6f\x7d\xe8\x43\x81\x76\x1b\x86\x3d\xf5\x7a\x0d\x68\x9b\x4e\xb4\xca\x92\x8e\x92\x72\xc9\x86\xfb\xef\x83\x64\x3b\xb1\x73\x49\xec\xd8\xbe\xa4\xf3\xcb\x05\x36\x45\xe9\x23\xa9\x8f\x94\x78\xd0\x78\x66\x6e\x63\x68\xf6\x0e\x66\x3a\xf9\x9b\x52\x37\x7b\xfd\xa2\xf5\x35\x23\x9b\xb2\x30\x4e\x68\x15\x84\x3e\x09\xeb\x40\xe7\xb0\x22\xb6\x42\x2b\xca\x00\x9d\x63\x91\x78\x47\xf6\xcd\xfe\x58\xcc\x32\x11\x06\xa2\xfc\x83\xb5\x21\x76\x82\xec\xec\x1d\xe4\x28\x2d\xed\x89\x1a\x74\x8e\x58\xb5\xe4\xfe\x6d\x89\x44\xb1\x6f\xab\xdb\x5f\x6e\xde\xde\xfd\xfc\xf5\xe5\xc1\xef\x2d\x3c\xc8\x8c\x9b\xbd\x25\x75\xc1\xda\x81\x01\xa1\x00\xc1\x20\x3b\x91\x7a\x89\x5c\x23\x7e\x03\x1f\x1d\x3c\x08\x29\xc1\x5b\x02\x94\xb2\x39\x26\x67\x5d\x80\x5b\x12\x18\xa6\x95\xd0\xde\xd6\xa3\x2c\xa0\xca\x00\xb3\x0c\x34\x83\x5e\x11\x3f\xb0\x70\x14\x45\xb5\x22\x0b\x19\xa5\x12\x99\xb2\x7d\x13\x6e\xd7\x2b\x1c\x15\x87\x6d\xd2\xcf\x8f\xa7\xc0\xff\x49\x86\xc9\x92\x72\x61\x95\x3b\x38\xc1\x1e\x61\x81\x5c\x7f\xa6\x0c\x4a\xdd\xc7\x56\x19\x95\x33\xdd\x7b\xc1\x94\xcd\xde\xc1\xed\x51\xa9\x28\xa9\xb0\xa0\x13\x9a\x76\xa0\x3a\x64\x9a\x70\x8e\x4a\xde\x9d\x58\x72\xff\x38\x6d\x0d\x33\xa7\x83\xb5\x3d\x85\x94\xfa\x81\xb2\x79\xba\x44\xee\x16\x7f\x02\x2b\x7a\x69\x41\x6b\x03\x6e\x89\x0e\x10\xac\x63\xa1\x16\x0d\x67\x15\xde\x3a\x58\x6a\xa5\x19\x9c\x86\x84\x60\x85\x52\x64\x1d\xa6\x83\x66\xdc\x94\x2a\x8f\x5b\x30\x3c\x8f\x1d\xae\x68\xc1\x9c\x17\x64\x2d\x2e\x68\x10\xdc\xcf\xe5\x58\xa0\xb5\x91\x28\x54\x00\x5b\x06\x63\xb4\x42\xbd\x5f\xe2\x2e\x6d\x99\xf6\x6a\x80\xb5\x48\x7b\x04\xc2\x21\xa8\xef\x4b\x1d\xc1\x63\x3e\x90\x88\xe6\xa7\xfb\x70\x63\x08\x3e\x28\x5f\x9c\x83\xef\x14\x01\xb6\x06\x74\x93\xcb\x41\xfd\x95\xfd\xba\x27\x80\x06\xc3\x87\x81\xdf\x6e\xdf\xdf\x7c\xf9\xf5\xe6\xed\xdd\x2d\xde\xfc\xf3\xfe\xe6\x4b\xa0\xf4\x9f\xbe\xbe\x3c\xed\x89\xf0\x3c\x8e\xf3\x95\x77\x7a\x41\x8a\x18\x5d\xa4\xa7\xf3\x3d\xf5\xd7\x92\x1a\x7e\x11\x16\x5a\x2a\x21\xd9\xc4\x18\x4d\x30\xfd\x4e\xea\xac\xbd\x97\x68\x2d\x09\x4f\xd0\x57\x1f\x7c\x29\x13\x86\x95\xce\xb5\x92\x9b\x09\xf0\xa5\xa8\x20\xa8\x0a\x6c\x62\xc9\x41\xe6\x23\xe7\xc4\x69\x08\x02\xf7\xc5\xe9\x2e\x8e\x33\xa3\x1c\xbd\x74\x73\xcd\x19\xf1\x60\x9c\x71\xb7\xd5\x39\xae\xe5\x54\x6f\x43\x59\x13\x92\x72\x9c\x07\xe2\x3c\x01\xf9\x77\xea\xb5\x9d\x9e\x05\x6c\x5c\xee\x60\xb0\x35\x94\xc3\xa0\xcf\x00\x75\x5b\xb3\xca\x0e\xde\x6b\x98\x09\xe5\x68\x41\x1c\x7e\x2a\x2f\x65\xf9\xb7\x48\xca\x37\x75\x3d\xb2\x25\x8c\xbb\x91\x06\x31\x4c\xe9\x74\x5b\xb8\xa1\xef\xf2\xbe\x6d\x2e\x6d\xa8\x67\xb7\xaf\xc6\xf8\x75\x92\x64\x48\x6b\x2c\x8c\xa4\x11\xb1\xfa\xa1\xd4\x50\xc5\x69\xc8\x84\xff\xdf\x40\xa5\xb5\xd1\x76\xaa\x28\x35\x3e\x91\x22\x95\x1b\xa8\xb5\x0e\x88\xd5\x1e\x43\x2a\x9e\x08\xa3\x1c\x7b\x1a\x1b\x0e\x8e\x54\x3c\xfd\x0c\xb2\xc1\xef\x06\xef\x3d\x05\xd2\xad\xc2\xc1\xa0\x60\x5b\x16\xc0\x21\x35\x25\x54\x32\x75\xb2\x81\x54\x17\x46\x48\xe2\x27\x47\xd0\x83\xf3\xec\x1d\x94\x46\x61\xcc\x85\x74\xc4\x98\xc8\xe1\xdc\xdc\x4e\xb8\x35\xaa\x10\xfb\xa5\xf2\x90\x79\x8c\xe7\xe0\xf6\xb3\xca\xdb\x49\x28\x2a\xd7\x4c\x62\xa1\xe6\x21\xf5\x4d\x53\x31\x41\xa5\xf2\x2a\xd9\x74\x41\xa1\x08\x9d\x00\x49\xbc\x01\x58\xe2\x8a\x00\x61\x57\x00\x56\xea\x2f\x8d\x4a\x64\xa4\x9c\xc8\xc5\x24\xc8\x1a\x05\x10\x42\x81\x42\x41\x43\xfd\xf3\xb0\x8e\x57\xe2\xde\xd3\xc7\xea\x14\x12\x88\x67\x94\x39\x0a\x5c\xcf\x25\xa9\x85\x5b\x0e\x36\x47\x81\x6b\x51\xf8\x02\x4a\x35\x4f\xab\xc4\xfa\x48\xd6\xfb\x08\xb4\x35\x4b\x9d\x81\x46\x23\x1c\x57\x10\xd6\x00\x8f\x54\xc1\x35\xbe\x6d\xbe\xbc\x34\x40\xa1\x46\xbb\x50\xa8\x1f\xda\x85\x42\x8d\x75\x61\x05\xf0\x07\x75\x61\xbc\xdd\x1b\x8a\x2d\x0c\xbe\x7a\x39\xab\x0b\xe1\xe6\x54\x18\x37\x2c\xf5\x7d\xcc\x23\x95\xbd\xde\xf3\x4b\x95\xe4\x33\xd6\xc6\x50\x06\x22\x87\x38\x05\x68\x86\xb2\x24\xbd\x70\xf2\x88\xa7\xdb\x67\x2a\x60\xb6\x27\xe7\xab\xd5\x2f\x86\x45\x81\xbc\x99\xae\x7e\x29\x73\x23\x54\x7a\xaf\x52\xc4\x30\x61\x36\xd5\x1d\x8f\xb0\x10\xd4\xc5\x7b\x9e\x2b\x00\xd9\xb6\x0a\x26\xc1\x51\x69\xbb\x34\x0c\x4b\x29\x93\x9b\x06\x44\xa9\x2b\x76\x8b\xec\x52\x7b\x99\x45\xae\x20\x94\x0e\x1e\x84\x5b\x42\x8a\x7c\x16\x0f\x4e\x04\xf0\x59\xab\x66\x7b\x9d\xaa\xd9\x3a\x3d\x59\xec\x55\xba\x9e\xfb\x50\x3e\xba\x34\xb6\x3e\xa9\x16\x30\x2e\x2f\x17\x68\x4c\x6c\xc9\x68\x30\x22\xfd\x1e\xc9\xfe\x61\x49\x2a\xe6\xba\xb2\xec\xb0\xf1\xce\xd8\x69\x78\x45\x6b\x47\xac\x50\xbe\xba\x74\x02\x77\x8c\xca\x0a\x52\x13\xed\xcd\x9d\xba\x4b\x87\xea\x28\x9f\x45\x77\x34\x7b\xdb\x03\xdc\xd0\x63\x04\x29\x5f\x74\xf6\x7c\xb7\xd2\xe7\xf5\x8e\xfa\xd7\xb0\x51\x3c\x97\x1a\xfb\x38\x29\x0a\xf7\xdf\x88\xb0\x85\xd9\x53\x56\x0a\xdb\x7b\x19\x9d\x5d\xfb\x96\xb4\x13\x9d\xad\xf3\xad\x6c\xbd\xfd\xfa\xca\x33\xe5\x67\x88\x7e\x3a\x03\x23\x53\xfe\x19\x4d\x77\x9b\x6f\xdc\xbd\x6b\x6c\x7c\xc7\xce\xd4\xb0\x7b\xc7\xdf\x2a\x8e\x43\x48\xbd\x75\xba\x80\x9d\xc2\xdd\x3f\x78\xcc\x9b\x2f\x85\xa4\x40\x74\x68\x8c\xdc\x84\x1f\x83\x4f\x2d\x17\xea\xd8\x76\x0e\xea\xe8\xb3\x1e\xfd\x7a\xf8\xcb\xd3\xb7\xed\x37\x8f\x2f\xfe\x0b\x00\x00\xff\xff\x7e\x0d\x3a\x43\x90\x24\x00\x00")

func regoAttributeInBytes() ([]byte, error) {
	return bindataRead(
		_regoAttributeIn,
		"rego-attribute.in",
	)
}

func regoAttributeIn() (*asset, error) {
	bytes, err := regoAttributeInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-attribute.in", size: 9360, mode: os.FileMode(420), modTime: time.Unix(1547059967, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoInfoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xbd\x4e\xc3\x40\x0c\xc7\xf7\x3c\x85\x75\x30\xb6\x0d\x13\x43\x36\xc6\x0e\xa0\x4e\x2c\x88\xc1\x4d\x7c\xad\xab\x34\x77\xd8\x0e\x02\x55\x7d\x77\x74\xb9\xa6\x4a\x3f\x36\x96\x44\xf9\xd9\xff\x8f\xf8\x50\x00\x00\xb8\x47\xad\xb7\xb4\x47\x57\x81\xdb\x9a\xc5\xaa\x2c\x77\x1a\xba\x79\xa6\x8b\x20\x9b\xb2\x11\xf4\x36\x7f\x7a\x2e\x33\x7b\x70\xb3\xac\x34\xb6\x96\x92\x6e\xd9\xf9\x30\xc2\x86\xb4\x16\x8e\xc6\xa1\x4b\xa3\x57\x32\x04\xee\x7c\x90\x3d\x26\x06\xb8\x0e\xbd\x01\x82\x92\x41\xf0\xa0\x91\x6a\xf6\x5c\x0f\x43\x5d\x9c\xad\x7f\xe3\xe0\x1c\xd6\x3b\xaa\x6d\xa4\xd8\x34\x9c\xf6\xb0\x5d\x49\x88\x24\xc6\xa4\xae\x02\x8f\xad\xd2\x69\x45\xe8\xab\x67\xa1\xc6\x55\xf0\x31\x90\x81\x46\x21\xcf\x3f\x27\x9b\xbc\x17\x82\x4d\xbf\xbf\x49\x34\x55\x1e\xc8\xe7\xac\x28\x4e\xba\x49\xcc\xe1\xc6\x6f\xca\x2e\x6a\xab\x09\x77\x9b\x89\xff\xbd\xd3\xac\x06\x13\xb0\x00\xbd\x52\x7a\xd5\xd8\xb6\x80\x91\xd5\x9d\x75\xc7\xeb\xca\xff\x8b\x7c\xc3\x3d\xa5\xab\xdb\x96\x20\xd9\x5d\x9e\xff\x56\xec\xb1\x6f\x53\x66\xce\xbe\xdb\x6a\x3c\xdc\x4d\xb1\xab\xe8\xf7\xbc\x37\xa6\xbf\xac\x96\xd7\x71\xe3\x9f\x70\x67\xb4\x21\x99\xc4\x15\xf9\x79\x2c\xfe\x02\x00\x00\xff\xff\xb8\x06\xde\x01\xb3\x02\x00\x00")

func regoInfoJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoInfoJson,
		"rego-info.json",
	)
}

func regoInfoJson() (*asset, error) {
	bytes, err := regoInfoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-info.json", size: 691, mode: os.FileMode(420), modTime: time.Unix(1528494787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoParamIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xcb\x6e\xdc\x3a\x0c\xdd\xe7\x2b\x08\xaf\x83\xfb\x01\x59\x27\x8b\x0b\xb4\xc5\xa0\x0d\xba\x09\x82\x80\xb6\x39\x33\x2c\xf4\x70\x25\x39\x0f\x14\xf9\xf7\x42\xf6\x78\x62\x8d\x2d\x5b\xb6\x51\xb4\xde\x0c\x6c\x91\x47\xd4\xe1\x21\xc5\x81\xde\x93\x39\x76\x82\xb2\x1b\xc8\x76\x68\x50\x92\x23\x03\xdf\xc8\x65\xd7\x57\xa1\xd5\x5b\xd5\x18\xe9\xfc\x07\x15\x83\x55\x2c\x4b\x76\xac\x15\x8a\x9d\xd1\x15\x19\xc7\x64\xb3\x1b\xd8\xa3\xb0\x74\x61\x5a\xf5\x0d\x7e\x05\x6b\xcd\xba\xa1\x9f\x35\x1b\x2a\x47\x57\x23\x01\x5b\xf8\xda\x7a\x49\x52\xce\xc2\xdd\x6b\x65\xc8\x5a\xd6\xca\x5e\x04\x7a\xc6\x28\xc9\x16\x86\x2b\x1f\xb3\x47\xba\xa5\x3d\x2b\x82\x97\x23\x3a\x28\xb4\xcc\x59\xa1\x5f\xb2\xa0\xf7\x50\x7d\xec\x82\x86\xa0\x8b\xef\xbf\x18\x74\xc7\x14\x1a\x83\x6f\x31\x23\x76\x24\xc7\x09\x58\x84\x93\x88\xb5\x08\x6f\x01\x66\x80\x6b\x9d\x61\x75\xc8\x26\x1d\xde\xa3\xab\xe3\x2b\xc3\xaf\xef\xc3\xc0\x33\x52\xce\xc4\xf4\x04\x81\x62\x3e\xb1\x75\x3e\xa7\x1f\xca\x49\x16\x88\x7f\xcd\x09\xdc\x91\x40\x9c\x50\xf0\x19\x59\x60\x2e\xa8\xa7\x91\x3f\x2f\x8b\x81\xfa\xa7\xb4\x11\x3b\x06\x82\x65\x75\xe8\x47\x3e\x85\x32\x59\xfc\x81\x65\x7a\x23\x08\xdc\x7a\x45\xff\x30\x2d\x4c\x85\x92\xe6\xc4\xdb\x3f\xf4\x8c\x69\x73\xb2\xa8\xc9\xe3\x44\xc8\x33\x7d\x6c\x18\x74\x5a\x31\x0d\x9b\xf1\x97\xf9\x13\xc3\x48\xaa\xbd\x9b\x17\xa9\x17\xec\x39\xc9\x31\x75\x86\x31\x2c\x29\xe8\x05\xa9\x58\x4b\xc0\x6d\x72\x3a\x47\xb6\xcc\x7a\xde\x7f\x9f\x8e\x13\xd6\x3a\x1e\xee\xbd\xf3\x72\x02\xee\x8f\x04\x7e\xdf\xe0\x2e\x5b\x73\xf2\x04\x0f\x52\xb5\x9c\xad\xe1\xb3\x75\x32\x6e\x63\xcd\xca\xd1\x61\xb2\x4f\x05\xe6\x7b\xa1\x71\xaa\x55\x05\xc6\xb9\xd6\x82\x30\x45\x5e\x70\x3e\x66\xa2\x6d\x59\x1b\x4c\x94\x2e\xb4\x89\x97\x13\x1d\xa9\x7b\x1e\x37\xc9\x50\xd6\xc2\x71\x25\xd6\x4b\xf1\x73\x0b\xc0\x05\xbb\xb9\x51\x02\xa2\xe3\x96\x05\xbe\xa8\x47\x28\x50\x41\x4e\x60\x49\x39\xe8\x82\x04\xcf\x48\xf4\x5e\x0d\x23\x3d\x09\xb6\x4b\xe7\x26\x92\x50\x08\xfd\x42\xe5\x53\x71\xd4\x5c\x24\x74\x79\x88\x70\xb5\xd3\xd6\xb2\x20\xf8\x8e\xa2\xa6\xd8\xbc\x11\x80\x5c\xb0\xf5\x7f\xcb\x52\x53\xc3\x6c\xc1\x8b\xef\xba\x99\x41\x2c\xa0\x10\x2d\x83\x7e\x0f\x3f\x88\x3c\x27\x6f\xb2\x64\x1c\x84\x65\x23\x21\x2c\x6d\x9b\x30\x39\x1a\x42\xd2\x3d\xb3\xc7\x5a\xb8\xa7\xe6\xfc\x1b\x6e\x9a\x06\xa5\x4d\xd5\x3a\x5d\x37\xfe\x4d\x14\x83\xdb\xc6\xcb\x5d\x4b\x76\x8e\xca\x05\x09\x7a\xe8\x32\xd4\xeb\x52\xbd\x66\x08\x99\xaa\x85\x68\x7f\x65\xde\x7e\xe9\xc6\xb4\x33\xf9\xdb\xba\x05\xbd\xa2\xac\x04\x6d\xe4\xf6\xae\x45\x59\xcd\x6d\xe7\x3f\xce\xed\xbf\x45\xe8\xf6\x7f\x39\x57\xe1\xdb\xef\x00\x00\x00\xff\xff\x76\x36\xe8\x20\xb1\x0f\x00\x00")

func regoParamInBytes() ([]byte, error) {
	return bindataRead(
		_regoParamIn,
		"rego-param.in",
	)
}

func regoParamIn() (*asset, error) {
	bytes, err := regoParamInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-param.in", size: 4017, mode: os.FileMode(420), modTime: time.Unix(1533220356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x31\x6f\xc2\x30\x10\x85\x77\x7e\xc5\xc9\x74\xaa\x0a\xee\xd4\x81\x8d\x81\xb1\x12\xa2\xec\x91\xb1\x9f\x6b\xa3\x60\x5b\xe7\x5b\x50\x95\xff\x5e\x39\x29\x69\xd3\x2d\x79\xf7\xbd\x7b\xe7\xf7\xb5\x22\x22\x52\x4f\xd5\x06\xdc\x8c\xda\x91\x0a\x22\x65\xa7\xf5\xb5\xe6\xb4\x99\xd4\x6d\xe6\x4f\xed\xd8\x78\xd9\xbc\xbe\xe9\x49\x5b\xab\x97\xc9\x29\x51\x7a\x34\xdf\x47\x30\x0c\x47\x47\xc3\xe6\x06\x01\xd7\x07\xe1\x50\x2d\xc7\x22\x31\xa7\xc6\x9d\x03\xa8\xcc\x10\x39\xf8\x98\xe0\x28\x80\x41\xd6\x24\xba\x80\x18\x1e\x0c\x8b\x64\xe1\xe8\x72\xa7\x2c\x01\x4c\xb5\xc0\x46\x1f\xad\x69\x9b\xea\x76\x3e\xe0\x5e\xc6\xfc\x7c\xb9\xc2\xca\x43\x35\xce\xc5\xc6\x99\xfe\xc8\xb9\x80\x25\xa2\xaa\x1d\x79\xd3\x57\xfc\x20\xc5\x88\x80\xd3\x62\x3e\xd5\x31\x8e\xb7\xcf\x8b\xff\xa9\x26\x86\x6f\x59\x6b\x3d\x9e\x3d\x26\x54\xfd\xfb\x1a\x35\xe3\xc3\xf8\x35\xcc\x15\xcc\xf4\x32\xe4\x8f\xb5\xe9\x5d\x77\xdc\x9f\xf6\xef\x87\xf3\xe1\xd4\x75\xff\x77\xad\x86\xd5\x77\x00\x00\x00\xff\xff\xc9\x23\xe7\x9b\xae\x01\x00\x00")

func regoSharedParamsInBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsIn,
		"rego-shared-params.in",
	)
}

func regoSharedParamsIn() (*asset, error) {
	bytes, err := regoSharedParamsInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.in", size: 430, mode: os.FileMode(420), modTime: time.Unix(1533220356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x6f\xdc\x38\x0c\xbd\xcf\xaf\x20\x9c\x3d\x2d\x92\x99\x3d\xed\x21\xe7\xe4\x50\xa0\x2d\x82\x26\xe8\x25\x08\x02\xda\xa6\xc7\x0a\x64\xc9\x95\x38\xf9\x40\x31\xff\xbd\x90\x34\x76\xec\xf8\x7b\x06\x45\xdb\x4b\x63\xe9\x91\x22\x1f\x9f\x28\xce\xcf\x15\x00\x40\xf4\x8f\x4d\x72\x2a\x30\xba\x84\x28\x67\x2e\x2f\x37\x9b\x27\xab\xd5\x45\x58\x5d\x6b\xb3\xdd\xa4\x06\x33\xbe\xf8\xef\xff\x4d\x58\x3b\x8b\xce\x83\x25\x0b\x96\xe4\xec\x6e\x73\x34\x94\xc2\x0d\x1a\x2c\x88\xc9\xd8\x0a\x91\x92\x4d\x8c\x28\x59\x68\xe5\x70\x77\x39\x41\x59\x83\x20\xa5\x4c\x28\x4a\x21\x27\x43\x90\xa0\x82\x98\xc0\x50\x46\x86\x12\x52\x09\xa5\x10\xbf\x81\xe6\x9c\x0c\xd8\x92\x12\x91\x89\x04\x9d\x27\xbb\xae\x03\x78\x2b\xfd\xf9\x3a\x7e\xa2\x84\xab\x55\x4c\x53\xe1\x70\x28\x6f\x8c\x2e\xc9\xb0\x20\x1b\x5d\x42\x86\xd2\xd2\x01\x52\x22\x33\x19\xd5\xda\x0f\x74\xf8\xed\xf5\xbf\xad\xef\x40\x93\xa1\xcc\x9d\x75\xb6\xf1\x61\xfb\x13\xec\xe6\x3d\x9b\xa8\x86\xef\xfd\x5f\xfb\x9a\x82\x1a\xdd\x3e\xa4\x61\xda\x39\xac\x66\xb6\xa6\x14\x6e\xa9\x4a\xf0\x1d\xd5\x97\x7e\xbd\x3b\x4d\xc3\x7b\x28\xfd\x3c\xd4\xfb\x86\x7e\xec\x84\xa1\xb4\x77\x77\x20\x60\x0b\xdf\x82\x55\x41\x8a\x2d\x5c\xbf\x96\x86\xac\xf5\x34\x9c\xf7\xfb\xf8\x20\x96\x2b\xaf\x0e\x78\xc9\x91\x21\xd1\x45\x2c\x54\xa8\x3e\xe8\xac\x29\x22\x34\x4e\x34\x21\xbe\xf5\x90\xeb\x8a\x29\x34\x06\xdf\x86\x40\x82\xa9\xe8\x27\x60\x91\x9f\x99\xbe\x16\xf9\x5b\xe0\xb3\xe5\xd7\xb2\x11\x6a\x1b\x8d\x1a\xec\x07\x77\xfb\x77\xba\xab\xfb\x6e\xe0\x11\x29\x36\x43\x7a\x82\x96\x62\x3e\x0b\xcb\xae\xa6\x9d\xee\xd1\x31\xe9\x08\xc4\x7d\xc6\x04\x9c\x13\xc8\x83\x17\x7c\x46\x21\x31\x96\xcd\x46\xf3\xfb\x65\xd1\x51\xff\x98\x36\x86\xd2\x40\xb0\x42\x6d\x9b\x91\x8f\x79\x19\xbd\xfc\x2d\xe4\xfc\x46\xd0\x32\x6b\x5c\xfa\xfb\x71\x61\x2a\x2c\x68\x4a\xbc\xcd\xa4\x27\xa0\x3e\xb3\x41\xc8\xc3\x48\xc8\x13\x7d\xac\x1b\xf4\xbc\xcb\xd4\x6d\xc6\x5f\xa7\x33\x86\x9e\x52\x3b\x33\x27\x52\x6e\xbe\x83\x43\xea\x6c\xc7\xb0\xe4\x42\x2f\x28\xc5\xb1\x04\x5c\xcd\x2e\x67\xcf\x91\x51\xc3\xfa\xcf\xd3\x71\xf0\x75\x1c\x0f\x77\xce\x78\x39\x01\x6e\x10\x72\xe7\xb6\xde\xb2\x63\x32\x9f\x61\x41\x6a\x57\x4c\xde\xe1\x1a\x3d\xdb\xaf\x47\x0b\xc5\xb4\x1d\xed\x53\x2d\x78\x26\x35\x8e\xb5\xaa\x16\x38\xd6\x5a\x12\xce\x91\x17\xd4\x69\xce\xc4\xa6\x3b\x83\x33\xa5\x0b\xa1\xf0\xc5\x48\x47\xaa\xfe\x3d\x9c\x24\xc3\x62\x27\x59\x94\xf2\x78\x29\x7e\x09\x0e\x44\x22\x78\x6a\x94\x80\xc1\x71\xcb\x82\xf8\x70\x1f\xab\xc1\xdc\x92\x62\xa8\x82\x04\xc7\xc8\xe0\xbb\xda\x8e\xf4\x20\xd8\xaa\x9c\x27\x91\x84\x52\xea\x17\x4a\x1f\x93\x5c\x8b\x64\x46\x97\x87\x01\xae\x6e\xb4\xb5\x42\x12\x7c\x47\xb9\xa3\xa1\x79\xa3\xe5\xe4\x03\x5b\x9f\x02\x4b\xfe\x0e\x0b\x0b\x4e\x7c\xe7\x7e\x06\xb1\x80\x52\x06\x06\xdd\x19\x6e\x10\x79\x9e\x7d\xc8\x92\x71\x10\x96\x8d\x84\xb0\xb4\x6d\xc2\xe8\x68\x08\xb3\xde\x99\x0c\x77\x92\x1f\x7d\xfe\x27\xbc\x34\xde\x4b\x28\xd5\x71\xba\xf6\xf6\x3e\x8a\xce\x6b\xe3\xe4\xae\x0b\xc1\x4c\xe9\x82\x02\xdd\x57\x15\x6a\x74\xa9\x46\x33\x84\x48\xed\xa4\x0c\xff\x17\x71\x58\xa9\xc6\xb4\x9a\xfc\xd3\xba\x05\xbd\x62\x51\x4a\x3a\x91\xdb\xeb\xe0\xe5\x68\x6e\x2b\xfb\x7e\x6e\xff\x2e\x42\x4f\xff\x95\xb3\xea\xff\x3a\xfc\xdc\x5f\xed\x57\xbf\x02\x00\x00\xff\xff\xa9\xb8\x42\xf1\x51\x11\x00\x00")

func regoSharedParamsJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsJson,
		"rego-shared-params.json",
	)
}

func regoSharedParamsJson() (*asset, error) {
	bytes, err := regoSharedParamsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.json", size: 4433, mode: os.FileMode(420), modTime: time.Unix(1554517774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\x0c\xb4\xef\x31\x59\xbf\xa7\x1e\x72\x73\x9b\xa0\x0d\xd0\x6d\x03\xd7\x3d\x15\x0b\x63\x4c\x8e\x6c\x6e\x28\x51\x4b\x52\xc9\x1a\x0b\xff\xf7\x82\x94\x44\x49\xd6\x87\xa5\x6d\xd6\x45\x7a\x31\x2c\x92\x33\x7c\xf8\xcc\x17\x87\x5f\xaf\x00\x00\xa2\xff\x19\xb6\xa7\x04\xa3\x5b\x88\xf6\xd6\x66\xb7\x8b\xc5\x27\xa3\xd2\x9b\x62\xf4\xbd\xd2\xbb\x05\xd7\x18\xdb\x9b\xff\xff\xb0\x28\xc6\xde\x45\xd7\x85\xa4\x15\x56\x92\x93\xfb\x23\x23\x26\x62\xc1\xd0\x0a\x95\x56\xb3\x9c\x0c\xd3\x22\xf3\x43\xb7\x10\xad\x28\xd3\x64\x28\xb5\x06\x30\x05\xb5\xfd\x44\xcc\xc2\x8b\xb0\x7b\x40\x29\x41\xb8\x61\x6b\xb5\xd8\xe6\x96\xdc\x0a\x0e\x9a\xa4\xd7\x67\xc2\x76\x87\xcc\xef\x56\xc8\x56\xa3\xc8\xb9\x70\xcb\x50\x3e\x6a\x95\x91\xb6\x82\x4c\x74\x0b\x31\x4a\x43\xe5\x12\x4d\x9f\x73\xa1\x89\x47\xb7\xf0\x97\x1f\xf1\xa3\x89\xe2\x24\x23\xff\xfd\xb1\x5c\x98\x35\x35\x7c\xad\x97\xd6\xc8\x5a\xe3\x05\x7d\x9a\x62\x87\xea\xdd\x82\x53\x2c\x52\x8f\xc5\x2c\x1a\x12\x61\xf9\xf1\xba\xd6\x58\x1f\xae\xa3\xb0\x3a\x26\x6a\x8d\x87\xe8\xba\x3d\x79\x42\xea\xaf\xc2\x58\x50\x71\xcd\x15\x6c\xc9\xbe\x10\xa5\x60\xf7\x04\xba\xa2\x9c\x78\x45\xb8\x23\x56\xd9\x3d\x69\x50\x29\x99\xf7\xa7\xea\x85\xa5\xa4\x0b\x69\xe4\x9c\xd5\xc6\x51\x4b\xe0\xd8\x7b\xe6\x82\xf0\x89\x04\x36\xac\x73\xaa\x47\xa4\x9c\xbe\x4c\x37\x45\xb5\xfc\xaa\x8d\xee\x18\xdc\x34\x2c\x6d\x1b\x7d\x70\x9b\xe0\xf6\x0f\xe5\x8a\x71\x1b\xdd\xf9\xcf\x2d\x19\x6f\x93\x52\xab\x33\x9a\xfb\x34\x19\xb1\x8e\x15\xce\xbb\xf4\x34\x67\x19\xb1\xe6\x98\xdc\x19\xd9\x96\xbc\xb1\x5a\xa4\xbb\xa8\xb3\xe8\xf8\xed\xfe\x10\xe8\xfd\xe0\xe7\xc7\xc9\xfd\x45\x49\x6e\x60\x8b\x46\x30\x10\x69\xac\x74\xe2\xdd\xb1\xa2\xb7\x1b\x01\x1d\xb2\x7b\xb3\x4a\x98\x9d\x61\x8a\xde\x2c\x13\x66\x33\x64\x4f\xb8\xa3\x3e\xaa\x35\x19\xbb\x49\x31\x19\x9a\x54\xb9\x66\x34\xb8\x80\x52\x2b\xec\x61\x70\xba\xc9\x57\xcf\xf4\x4e\xab\x3c\x6b\x9b\xef\xe3\xc9\xb9\x06\x92\x62\x4d\x91\x14\x68\x06\x26\x3b\x10\x1a\x39\xab\x94\x03\xab\x6a\x33\x01\xfa\x88\x08\xb5\xe4\xd4\x5a\x41\xe7\x39\xff\x85\xf3\x3e\x0c\x53\xfc\x18\x3a\xbe\x0c\x6d\x2f\x0e\x9a\xf2\x8c\xa3\xa5\x61\x16\xc6\xf3\x27\xb2\x6e\x16\x1d\xda\x89\x93\xa4\x4b\xed\xd4\xb4\xdc\x34\xf3\xae\xf7\x04\x8d\xa1\xe9\x91\x18\x14\x9e\xcd\x2d\x67\xa2\x60\x2a\xd2\x9f\x30\x21\x79\xc3\xd0\x10\x87\x67\xd2\xa6\x85\xb6\x0c\xc9\xd7\x05\xf9\xc5\x52\xca\xe7\x47\xca\x16\x0d\xb5\xe3\x02\xec\x5e\x98\x93\xa1\x52\x3b\xbc\xa9\xa8\xe1\x8a\xe5\x09\xa5\x16\x67\xf9\xd8\x92\x3f\x63\xca\x88\x43\x4b\x1c\x62\xa5\x43\x51\x9d\x9e\x42\x66\x5b\xd0\xf4\xde\xdb\x86\xb0\xfe\x9e\xe1\xe7\x9c\xe0\x89\x0e\xf0\x8c\x32\x27\xc8\x50\x68\x77\x17\x40\x0b\x0c\x53\xd8\x12\xe4\xce\x03\xb7\x07\x60\x2a\xc9\x84\x24\xdd\xb9\x97\x75\x30\x97\xc5\x6a\x12\xe6\x1d\xd9\x4b\xe4\x8a\xaa\xc0\xcd\xc9\x13\x2e\xc2\xaa\x90\x2b\xe5\x2f\x94\x2f\x8a\xba\x37\x07\xab\x97\xa8\xd0\x61\x26\x5e\x15\x4e\xa6\xc5\xf3\x68\xf5\xe8\x01\xd4\x73\xbb\x17\x06\x4a\x4d\x67\xd1\x6d\x95\x92\x84\x13\x6d\xdb\xbe\x84\xcc\x01\x99\xc9\x5c\xa3\xbc\x4c\x7a\xad\xef\x51\x73\x10\xe6\xa9\x70\xf1\xe9\x5d\x31\x50\x2a\xd2\x9d\x07\xfa\x1d\x3c\x4f\x2b\x35\x12\x8f\xd3\xec\x8c\xcc\xb5\xcb\x45\x43\xe1\xf4\xcd\xcc\x78\xb3\x6c\xff\x8c\x52\xf0\x81\x5e\x75\x08\xf6\x6f\x65\x5c\x23\xb0\xdc\x58\x95\x40\xad\x04\x62\xad\x12\x0f\x7c\xd3\x1c\x14\x92\xdc\x45\x10\xb3\x4c\x1e\xdc\x9f\x9a\xfc\x37\x54\xcb\xc8\x22\xdb\xfb\x06\x60\x1a\x4d\x0f\x31\x58\x9d\xd3\xb5\x6b\x0a\x9d\xed\xca\x16\xb1\x2a\x03\x45\x8d\xf0\x95\xbe\x8e\xef\x6a\x93\x9a\x47\xcc\xc4\xb7\x1b\x7c\x42\x9b\x96\xa1\xc6\x84\x2c\xe9\x82\xc8\xcd\xe6\x71\xb9\x5a\x7e\xb8\x5f\xdf\xaf\x36\x9b\x5e\x81\x93\xd7\x92\xcd\x66\xb9\x5e\xaf\x1e\x7e\xfc\x73\x7d\x3f\x20\x10\x1e\x11\x86\x7b\xc1\x55\xb5\x64\xbc\x1d\x5c\x4a\xa9\x5e\x7c\x4b\xc1\x89\x49\xd4\x04\x18\xde\x46\xea\xa7\x91\x17\xd5\x0e\x98\xee\x3b\xc8\x85\x9a\xc2\x3a\x63\x9d\x76\x60\xf3\x5a\xb0\xf9\x99\x2f\x48\x14\x97\x0f\x34\x80\x20\x45\xfa\x54\xc5\x9e\x27\x2d\x24\x9c\xd7\xcc\x7f\x4c\xd3\x7f\xae\x4f\xba\xd0\x15\xeb\x3b\xb5\x98\x13\x72\xc0\x89\x8e\xf3\x71\x0a\x4b\x36\x21\x5c\x5b\xef\xc6\x45\xc1\x28\x76\x28\xfe\x57\xbb\xfe\x5b\xe1\xd9\x44\xfb\x8f\x9e\x48\x26\xf5\xd1\x5d\x0e\xef\x46\xdf\x6e\xfa\x08\xbd\xeb\x6b\xbc\xfb\x49\xec\x90\x39\x27\x88\xb9\xbb\x93\xb8\x8a\x35\x52\xec\xfa\xce\xe3\xa4\x44\x5f\x22\x1f\x3a\xd0\x9a\xa4\x34\x20\xda\x47\x29\xea\x60\x40\xf0\x9a\xb7\x9d\x9d\x54\x5b\x94\x9b\x93\x9a\x37\x7e\xbe\x9f\xbd\x0c\x3c\x06\x19\x58\x51\x4c\x9a\x52\xd6\x79\x1b\x1e\x3a\x66\x10\x70\xf9\xb7\xc0\x00\x35\x06\xf0\xe1\x4c\x1c\x44\xf1\xae\xdf\x80\xe7\x6f\x4e\x6f\xe7\x8a\x34\x85\xd7\xfe\x2c\xd6\x90\x9c\x9e\xc1\xae\x8a\xdf\xe3\xd5\xdf\x01\x00\x00\xff\xff\x83\xe3\xe0\xa0\xeb\x1a\x00\x00")

func regoSpecInBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecIn,
		"rego-spec.in",
	)
}

func regoSpecIn() (*asset, error) {
	bytes, err := regoSpecInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.in", size: 6891, mode: os.FileMode(420), modTime: time.Unix(1554509544, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1c\x5d\x6f\xdc\x36\xf2\x3d\xbf\x62\xb0\x0d\x50\xe0\xce\x8e\x7b\x2f\x07\x34\x6f\xc1\x25\xb8\x0b\xd0\xf4\x82\xb4\xb8\x87\x06\xae\x31\x2b\x8d\x76\x59\x53\xa4\x4a\x52\x6b\xfb\x8a\xfc\xf7\x03\x49\x51\x1f\xd6\x4a\xa2\x76\xb5\xeb\xf8\x50\x3f\x24\xb6\x44\x0e\xe7\xfb\x83\x1c\xea\x8f\x17\x00\x00\xab\x97\x3a\xd9\x52\x8e\xab\xd7\xb0\xda\x1a\x53\xbc\xbe\xba\xfa\x4d\x4b\x71\xe9\x9f\xbe\x92\x6a\x73\x95\x2a\xcc\xcc\xe5\x77\x7f\xbf\xf2\xcf\xbe\x59\x5d\xf8\x99\x86\x19\x4e\x76\xde\x4f\x05\x25\x2c\x63\x09\x1a\x26\x45\x78\x9b\x92\x4e\x14\x2b\xdc\xa3\xd7\xb0\xfa\x44\x85\x22\x4d\xc2\x68\x40\x01\x72\xfd\x1b\x25\x06\xee\x98\xd9\x02\x72\x0e\xcc\x3e\x36\x46\xb1\x75\x69\xc8\x8e\x48\x41\x11\x77\xf0\x74\xbd\xdc\x43\xe1\x56\xf3\x73\xc3\x53\x4c\x53\x66\x87\x21\xff\xa8\x64\x41\xca\x30\xd2\xab\xd7\x90\x21\xd7\x54\x0d\x51\xf4\x7b\xc9\x14\xa5\xab\xd7\xf0\xd9\x3d\x71\x4f\x73\x99\x12\x5f\xb9\xbf\xaf\xab\x81\x45\x1b\xc2\x1f\xcd\xd0\x06\xb3\xce\x73\xcf\x3e\x45\x99\xc5\xea\x9b\xab\x94\x32\x26\x1c\x2e\xfa\xaa\x35\xa3\x1e\xfe\xe5\xa2\x81\xd8\x10\xd7\x03\x18\xc8\x44\xa5\xf0\x61\x75\xd1\x7d\xf9\x88\xa9\x3f\x30\x6d\x40\x66\x0d\xaf\x60\x4d\xe6\x8e\x48\x80\xd9\x12\xa8\xc0\x72\x4a\x03\xc3\x2d\x63\xa5\xd9\x92\x02\x29\x48\xbf\x7a\x0c\x9e\x19\xca\xfb\x28\x8d\xd0\x19\x16\x5e\x75\x26\x7c\xd9\x4b\xb3\x67\x78\x24\x03\x5b\xd2\x79\x0c\x87\x89\x94\xee\xe3\x45\x11\x86\xbf\xe8\x62\xf7\xa5\x56\xd3\x7a\x68\x57\xe8\x83\xcb\xd4\x6a\xff\xbe\x1a\x31\x2e\xa3\xb7\xee\xcf\x35\x69\x27\x93\x0a\xaa\x15\x9a\xfd\x53\x17\x94\xf4\xa4\x30\xad\xd2\x71\xca\x32\x22\xcd\xb1\x79\x13\x73\x3b\xf3\xb5\x51\x4c\x6c\x56\xbd\x41\x5f\x0e\xd7\x87\x9a\xbd\x1f\xdc\xfb\x71\xe6\xfe\x4b\xf2\x54\xc3\x1a\x35\x4b\x80\x89\x4c\xaa\xdc\xa9\x63\x60\x6f\xdf\x02\x7a\xcc\xde\xeb\x55\xea\xb7\x33\x44\xb1\xd7\xcb\xd4\x6f\x0b\x4c\x6e\x71\x43\xfb\x58\xad\x48\x9b\x1b\x81\xf9\xd0\x4b\x59\xaa\x84\x06\x07\x90\x30\xcc\x3c\x0c\xbe\x6e\xf3\x6b\xcf\xeb\x8d\x92\x65\xd1\x15\xdf\xf5\x23\xba\x06\x9c\x62\xc3\x22\xce\x50\x0f\xbc\xec\xa1\xd0\xf2\x59\xd5\x3c\x30\xb2\x11\x13\xa0\xb3\x88\x3a\x96\x3c\x96\x56\x0d\x73\x4a\x7f\x61\x5a\x87\x21\x46\x8f\xa1\xa7\xcb\xd0\xd5\xe2\x1a\x52\x59\xa4\x68\x68\x98\x0b\xe3\xfe\x13\x93\xbe\x17\x1d\x5a\x29\x25\x4e\xe7\x5a\xa9\x2d\xb9\x38\xf1\xfe\xbc\x25\x68\x3d\x8a\xb7\xc4\x1a\xe0\xa4\x6f\x99\xb0\x82\x58\x4c\xff\x81\x39\xf1\xcb\x04\x35\xa5\xb0\x23\xa5\x3b\xd8\x56\x26\xb9\x2c\x92\xf7\x86\x44\x3a\xdf\x52\xd6\xa8\xa9\x6b\x17\x60\xb6\x4c\x3f\x7a\x54\x41\x87\x67\x65\x35\xa9\x4c\xca\x9c\x84\xc1\x59\x3a\xf6\x26\xdd\xa1\x48\x28\x85\xce\x74\xc8\xa4\xaa\x83\x6a\xbc\x0b\x99\x2d\x41\xbd\x37\x6f\x1b\xc2\xf5\xdf\x05\xfe\x5e\x12\xdc\xd2\x03\xec\x90\x97\x04\x05\x32\x65\x73\x01\x34\x90\xa0\x80\x35\x41\x69\x35\x70\xfd\x00\x89\xcc\x0b\xc6\x49\xf5\xf2\xb2\x1e\xce\x55\xb0\x8a\xc2\x79\x43\xe6\x1c\xbe\x22\x04\xb8\x39\x7e\xc2\x5a\x58\x30\xb9\x6a\xfe\x99\xfc\x85\x8f\x7b\x73\x70\x75\x33\x02\x76\x58\xb0\x45\xd1\x29\x14\xdb\x8d\x46\x8f\x3d\x08\xed\xc9\xee\x99\x86\x0a\xd2\x24\x76\x6b\x29\x39\x61\xa4\x6c\xbb\x49\xc8\x1c\x24\x0b\x5e\x2a\xe4\xe7\x71\xaf\x4d\x1e\x35\x07\xc3\x52\x30\x6b\x9f\x4e\x15\x6b\x96\x32\xb1\x71\x88\x9e\x40\xf3\x94\x94\x23\xf6\x18\x27\x67\x4c\x6c\xb9\xec\x0b\x0a\x0b\x6f\xa6\xc7\x9b\x25\xfb\x1d\x72\x96\x0e\xd4\xaa\x43\x68\xff\x58\xd9\x35\x42\x52\x6a\x23\x73\x68\x80\x40\xa6\x64\xee\x10\xbf\x69\x3f\x64\x9c\x6c\x22\x88\x45\xc1\x1f\xec\x2f\x0d\xf3\x9f\x51\x2c\x23\x83\xc9\xd6\x15\x00\x71\x6c\x7a\x9f\x81\x51\x25\x5d\xd8\xa2\xd0\xca\xae\x2a\x11\x43\x18\xf0\x31\xc2\x45\xfa\xc6\xbe\xc3\x22\x0d\x1f\xb1\x60\x87\x0b\x3c\xa2\x4c\x2b\x50\x61\x4e\x86\xd4\x58\x29\xfc\x31\x0c\x82\x9f\xa8\x57\x44\x2d\x56\x62\x4d\x95\x22\xad\x12\x6c\xa8\x6e\xed\x21\xac\xe1\x93\x9f\x95\xbb\xbd\xa9\x77\xf7\xd6\xda\x74\x6b\xdf\xa9\x07\xa3\x57\xdf\x67\x4c\x10\xdc\xb9\x80\x2e\xf3\x35\x13\xd5\x56\x8c\xcc\xa0\xe1\x1d\xa0\xb2\xa6\xec\xf1\x3b\x5b\x82\x36\x06\x27\x12\xd6\x2c\x78\x33\x60\x42\xac\xf1\x85\x9f\xbe\x11\x8e\xbf\x89\x33\x5a\x12\x46\x0d\xe9\x13\x74\x34\x26\x64\xe3\x8d\xe6\x44\x2b\x88\xdf\x00\x72\xd6\xca\x43\xf5\xbb\x43\xc6\x71\xcd\xa9\xa5\x23\xa7\x57\x8b\x9e\xf6\x8f\xe9\xc6\x10\x19\x08\x9a\x89\x4d\x1b\xf3\x31\x28\xa3\xc6\xdf\x19\x19\xef\x08\x3a\xd3\x46\xf7\x5d\x3a\x23\x07\xf6\x48\x06\x89\x9e\x18\xea\x28\x1b\x1c\x72\x3d\x82\xf2\x84\x1f\xeb\x23\x1d\x67\x4c\x7d\x67\xfc\xe3\x34\xc5\x30\x12\xbf\x7d\x5e\x5e\x01\x1b\xd2\xce\x2e\x0e\x73\x0c\x7a\x86\x28\x0e\x65\xc0\xdb\x68\x71\xee\x59\x72\xf5\xb6\xbf\x8f\xf1\x74\xec\xa8\x60\x1d\xc6\x87\x9f\xed\xe4\xf9\x0c\xb0\xf9\xa7\x5d\xb7\x13\xcb\x0e\xa1\x3c\x62\x06\x89\x32\x9f\xb4\xe1\x7a\x74\x34\x5c\xf0\x7b\xf9\x86\x36\xa3\x7e\xaa\x33\x3c\xe3\x12\xc7\x5c\x55\x67\x70\x48\xae\x22\x87\x3b\x32\x23\xc7\xa6\xa5\xc2\x48\xd5\x05\x2f\xf8\x7c\xc4\x23\x85\x9f\xeb\xa3\xd4\x30\x2f\xb9\x61\x05\x3f\x5c\x15\x3f\x78\x00\x2c\x61\x66\x2a\x95\x80\xc1\x74\x4b\x03\x7b\x64\x8f\x61\x33\xc5\x6d\x23\x07\x24\xc1\x72\x64\x30\xae\x76\x31\x9d\xca\x95\xdb\x3f\x53\x4c\x42\xce\xe5\x1d\xa5\x37\xc9\x56\xb2\x24\xc2\xcb\xc3\x00\xaf\x3e\x4a\xad\x6d\x69\xf4\x1f\xe4\x65\xef\xa0\x69\x2f\x90\x3d\x25\x46\xb0\x61\xa6\xc1\x2a\xdf\x85\xcb\x41\xb4\x3b\x76\x75\x1c\xb4\x6b\xd8\x44\x64\x17\xbd\xc8\x9c\x74\x10\xe6\xa5\x84\x30\xd7\x6d\xc2\x68\x6a\x08\x51\x71\x26\xc3\x92\x9b\x1b\x47\xff\x11\x91\xc6\x41\xf1\xa2\x3a\x4c\xaf\xdd\x7c\xbf\x49\xf8\x38\xda\x58\x75\x97\x39\x33\x86\xd2\x19\x02\xfa\x1c\x24\xd4\xf2\x52\x2d\x67\x08\x2b\x51\x72\xee\xff\xcf\xd7\xfe\x49\x48\xd3\x6a\xe6\x1f\xe7\x2d\xe8\x1e\xf3\x82\xd3\x91\xbc\x7d\xe7\xa1\x1c\xcc\xdb\x30\x7f\x3f\x6f\xbf\x2e\x86\x1e\x5f\xe5\x44\xd4\xf4\x63\x0d\x0d\xe3\xd5\xfa\xc0\x11\x45\xb5\xc1\x47\x69\xab\x8b\xe3\x98\x73\xed\x02\x8d\x21\x25\x3e\x4e\x14\xfc\xbf\xee\x3e\x7f\x77\xf9\xfd\xf5\x5f\x5f\x4e\x9f\x54\x8f\xd6\x4e\x43\x47\x94\x4d\x47\x0a\x13\x80\x56\x65\x0c\x4b\x4a\x8e\x2a\x10\xfc\x0a\xde\x1b\xb8\x63\x9c\x43\xa9\xc9\xb9\xd4\xd6\x9c\x7a\x8b\xa6\x50\xb4\x63\xb2\xd4\x61\x96\x6f\x70\xc1\x34\x05\xa9\x40\xee\x48\xdd\x29\x66\x7c\x7d\x28\x6d\x6c\x4b\x29\xe1\x38\xb6\x4f\x30\x63\x0b\x60\xba\xee\x1a\x6d\xd4\xa9\xc9\x99\xbf\x31\x0f\xcb\x57\x67\x66\x3a\x8d\xed\x90\x73\x50\x75\x76\x60\x1d\x3a\xa7\xa8\x6b\xf2\x03\xdc\xb3\xad\x36\x49\x96\x93\xd2\x86\xee\x0b\xbf\x45\x88\xe0\x5d\x4b\x4b\x58\x79\xa9\x0d\x6c\xa5\x90\x0a\x8c\xb4\x69\x91\xdb\x6c\x3d\x77\xc9\xd2\x21\xf3\x26\x27\xad\xc7\x4e\x88\xc6\xc8\xfd\xe0\xe7\x02\xdd\x17\x1c\x99\x08\xfb\xf3\xca\x73\x21\xd8\x8b\xb3\xd2\x0e\x6b\x9f\x8c\xe0\x19\x79\xdf\xe3\xc3\x4d\x0f\xa3\x4a\xc7\xdc\xa1\x66\xcf\x0e\x6d\x3a\xf7\x2e\xae\x90\x38\x77\xb2\x16\x59\xaa\x54\x0e\xde\x4e\xfc\xf5\xf3\x9b\xcb\x5f\xfe\x76\xf9\xfd\xf5\x67\xbc\xfc\xef\x9b\xcb\x5f\xac\x47\xff\xcb\xcb\x53\x67\x7d\x58\x1a\xb9\x21\x41\x0a\xcd\xc8\x86\x71\x67\xca\x9e\xe2\xb8\x11\x0b\xd3\xd0\x01\x09\xeb\x07\xa7\xa2\x6b\x4c\x6e\x49\xcc\x32\xbd\x45\x4a\x90\x44\x91\xab\x1d\x6f\xa4\xe0\x0f\x0b\xd0\x67\xcb\x2b\x0b\xca\xd7\x58\x06\xd2\xd2\xb9\x1c\xb7\x0c\x81\x75\x7d\xb1\xa5\xea\xb2\x74\x86\xec\x5d\xaa\x94\xd4\xc1\x74\x76\x32\xc3\x8e\x50\xdd\xe1\x3c\xda\x98\xec\xf3\x73\xb7\x8e\xa5\xfc\x96\xa2\xac\xe9\x24\xc4\xce\x48\xa7\xf7\xb6\xe7\xec\x29\x35\x6a\xa2\xbf\xae\x74\x78\x92\x21\x85\xa2\x64\x39\x13\x6e\xc1\x3b\xbf\x6c\x67\x6e\x77\xc6\x35\x5e\x1d\x22\xd7\x45\x62\xe1\x01\xa5\xdf\x68\xd9\x16\xba\x7b\x9e\xa7\xa2\xd2\x7d\x21\xf5\x52\x5a\x5a\x94\x6b\xce\x12\xfe\x00\x01\xea\x01\xba\x1a\x55\x45\x3b\x3f\x61\x67\x19\x55\x4e\xec\x2c\x4e\x33\x60\xb2\x75\xea\xd1\xe2\x27\x6b\xa3\xea\xac\x33\xd5\x52\x35\x87\xc6\x8c\x71\x43\x0a\xd7\xb1\xbb\xa3\x93\x01\x37\x50\x65\x75\xdf\x03\xb7\x91\xa7\x28\x95\x15\xfb\xac\xec\x76\x11\x17\x95\x49\x45\x6c\x23\x6e\x6c\xe8\x5b\x26\x63\x82\x0a\xe4\x93\x44\xd3\x0d\xd9\x1c\x74\x01\x4a\xdc\x06\xc0\x16\x77\x04\x08\x4d\x02\x58\x81\x3f\x37\x55\x2c\x25\x61\x58\xc6\x16\xa1\xac\x95\x00\x21\xe4\xc8\x04\xb4\xc0\x9f\xc6\xeb\xf8\x86\xac\xf7\x55\x11\x62\x1d\xcf\x71\xe7\x15\x78\x7f\xc3\x49\x6c\xcc\xf6\x60\x76\xe4\x78\xcf\xf2\x32\x07\x0f\xa6\x9f\x25\x86\x8a\x2c\xfe\xac\x2b\xb0\x25\x44\xa0\xa3\x29\x3c\x2e\x21\x0c\x04\x0e\x64\xc1\x81\xbe\xf8\x53\xb4\x85\x09\x64\xe2\x68\x11\x32\xf1\x55\x8b\x90\x89\x63\x45\x58\x11\xf8\x95\x8a\x30\xbe\x8b\x61\xa2\x4d\xf8\xc9\xd2\x59\x99\x33\x73\x43\x79\x61\x0e\x0b\x7d\x75\xaf\x9f\xd9\x17\xe4\x53\x25\x8b\x82\x52\x60\x19\xb8\x25\x40\x2a\xf0\x29\xe9\x99\x83\x87\xab\x6e\x4f\x94\xc0\xd4\x95\xf3\x93\xe5\x2f\x85\x62\x39\xaa\x87\xe5\xf2\x17\x1f\x1b\xa1\x82\xfb\x24\x49\x8c\x22\x4c\x97\xda\xe3\x61\x1a\x2c\x38\xb7\xcf\xf3\x04\x84\x4c\x34\x6f\xce\xa4\xa3\x82\x76\x6e\x32\x34\x25\x6a\xe4\xc6\xc5\x2c\x22\x3c\x2c\x77\x58\xa4\xb7\xb2\xe4\xa9\xf3\x15\x84\xbc\xba\x39\x9d\xa0\x9a\xe5\x07\x17\x22\xf0\xa4\x59\xb3\x7e\x9a\xac\x59\x1b\xb9\x98\xee\x55\xb0\x4e\x5d\x94\x1f\x9d\x1a\xeb\x72\x1d\xdf\x54\x36\x12\x97\x73\x2c\x0a\x77\x22\x23\xa1\x60\xc9\xad\x73\xf6\x77\xdb\xea\x12\x7a\x68\x3d\xd1\x64\xec\x80\x6f\xe9\xde\x90\x12\xc8\xbf\x3d\x7b\xff\x9c\x42\xa1\x19\x89\x85\x6c\xb3\x01\x77\x6e\x55\x3d\x4a\x66\xa1\x9b\xef\x98\x3c\xea\xcf\x66\xbe\x30\x7c\x4e\x33\x1f\x67\x3a\x1a\x8d\xc9\x43\xfb\xce\x68\xd7\xf6\x17\x8b\x71\x65\x7e\xb1\xe3\x15\x65\x33\x86\xfe\x30\x83\x46\x45\xd9\x07\x2c\x4e\xdd\xae\x18\x73\x7d\xa9\x33\xe1\x24\x57\x99\x0e\xb2\xb6\x67\xd2\x5d\x37\xf8\x76\xc9\x86\xa5\xfa\x3b\x23\xc3\x57\x90\x3e\x85\x21\xe3\x1d\x4b\xee\x78\xdd\x7d\x75\xa0\xea\x1a\x00\xac\x3f\x9f\xd2\x7c\x3d\xe5\x4e\x76\xef\xd4\xf5\x9b\x99\xce\xf4\xdd\x88\xe6\x52\x63\xe7\xdd\xf5\xc5\x8b\x2e\x94\xe9\xab\x51\x73\x2f\x47\xd6\x33\x5a\x3b\x80\x9c\x89\xdb\xa0\xd3\x8e\x69\x75\x13\xd0\x92\x57\x24\xfd\x99\xf2\xff\xd7\xa7\x14\xce\x74\x0b\xfb\x44\x5f\xa1\x98\x61\xa1\x15\x8c\x69\x3b\x85\x37\x49\x84\xb9\x76\x3e\x2d\xe5\x1d\xb1\x5f\xc1\xff\x1e\x56\x7d\x2a\xf3\x1c\x6c\x36\x9b\xfb\x15\x95\xa8\x4f\x6d\xf4\x79\x38\x7d\xbf\x25\xe2\x4e\xcb\x10\x13\x7b\xcc\x9c\x63\xc4\x11\x27\xf3\x7b\xe9\xb1\xb3\xd8\x58\x2b\x49\x2f\xab\x25\xce\xeb\xeb\x00\xb5\x27\x8f\x39\xcb\x3f\xec\x42\xf4\x86\xcb\x35\xf2\x9b\x91\x6b\xb1\x7d\xfa\xfe\xe9\xe6\x40\xe7\xd2\x69\x46\x8a\x44\x32\xb8\x0b\xd6\x6f\xf8\xab\x26\x58\xff\xeb\x71\x68\x5f\x2f\x75\xe6\xec\x3b\xe0\x5c\x46\xd2\x7a\x65\x33\x92\xe7\x73\x8b\x3a\x86\xaf\xfb\xbd\x58\x6b\x66\xbc\x07\x7b\xe1\xff\xfd\xf2\xe2\x7f\x01\x00\x00\xff\xff\xa9\x44\x58\xa5\x0e\x4f\x00\x00")

func regoSpecJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecJson,
		"rego-spec.json",
	)
}

func regoSpecJson() (*asset, error) {
	bytes, err := regoSpecJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.json", size: 20238, mode: os.FileMode(420), modTime: time.Unix(1554517774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoTypeMappingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x6e\x9b\x40\x10\xc6\xef\x7e\x8a\x11\xa9\x54\xa9\x6a\x4c\x4f\x3d\xf8\x5e\xa9\x97\x4a\x3d\xf4\x56\xf5\x30\x66\x07\x98\x64\xd9\xdd\xce\x0e\x49\x69\xc5\xbb\x57\x0b\x36\x0e\x98\xd8\x91\xa2\xf8\x04\xf3\x87\x99\xfd\x7d\x9f\xf7\xdf\x06\x00\x20\x7b\x17\x8b\x9a\x1a\xcc\x76\x90\xd5\xaa\x61\x97\xe7\x77\xd1\xbb\xdb\x31\xba\xf5\x52\xe5\x46\xb0\xd4\xdb\x4f\x9f\xf3\x31\x76\x93\x7d\x1c\x3b\x95\xd5\x52\xea\xfb\xd1\x05\x82\x6f\x18\x02\xbb\x2a\x1e\xb3\x86\x62\x21\x1c\x94\xbd\x1b\x6a\x6a\x8e\x50\xb2\x25\xe0\x08\x6d\x24\x03\xea\xa1\xc1\x00\xf4\x47\x49\x1c\x5a\xd0\x2e\x50\x4c\x51\x8b\xae\x6a\xb1\x22\x88\x81\x0a\x2e\xb9\x88\xdb\x69\x64\x17\x86\x89\x7e\x7f\x47\x85\x1e\xa3\x68\x0c\xa7\x39\x68\xbf\x8b\x0f\x24\xca\x14\xb3\x1d\x94\x68\x23\x1d\x4a\x02\x6a\x1a\x33\xcb\x8f\x00\x86\xf4\xf6\xc3\xec\x7d\x04\x23\x54\xa6\x59\x37\xb9\xa1\x92\xdd\x30\x21\xe6\xc3\x06\x53\x61\x3f\x3c\xf5\xd3\x91\xa7\xba\xf9\xe7\x0f\x6b\x2f\x06\xcc\xf8\x1d\xce\x32\x25\xd7\xf0\xdd\x53\xf7\x94\x9e\x0a\xba\x68\x31\x95\x00\xba\x39\xc8\xf7\x11\x62\xbb\x4f\x4f\x50\x8a\x6f\x00\x27\x98\x43\xfd\x76\x39\x6e\x15\xec\x94\xbd\x0e\x78\x2a\xbd\x0c\xfa\x12\xf0\x2b\xe0\x9b\xd1\x5f\xd9\x59\x4f\xbf\x59\x7f\xeb\x4f\x9b\x65\xc7\xe6\xe7\x35\x38\xd8\xf7\xaa\x0c\x04\x05\x2a\x55\x5e\x4e\x52\xec\x3b\xa8\xc8\x91\xa0\x7a\x89\xc0\x0e\xbc\x18\x92\xa7\x0a\xd1\xd2\xe5\xec\x52\xb6\x26\x16\xf0\x8f\x0e\xb8\x09\x96\x1a\x72\xfa\xc6\xe2\x08\xfd\x6e\x59\xc8\x64\x3b\xf8\x79\xae\xc9\xdc\xda\xe9\xf7\x6b\x29\xee\x15\x55\x57\x7d\x7e\x89\xe5\x04\xc8\x0c\x60\x96\x27\x3f\x23\x10\x55\xd6\x3d\x70\xde\x97\x25\xe7\xbc\x78\x99\xaf\xfe\x31\x09\x36\xb8\x0d\x2d\xff\xa5\xa4\xce\x1b\xec\xd4\x04\x2f\x2f\xdf\xea\xcb\x03\x39\x6d\xd1\xc2\x49\x63\x18\x3f\x01\x5e\x20\x60\x71\x9f\xae\x49\xad\x51\x21\x88\x7f\x60\x93\x2e\xd0\x57\xef\xfd\xdc\xff\x69\xbc\xeb\x36\xfd\xe6\x7f\x00\x00\x00\xff\xff\x9a\x8a\x83\x1c\x3a\x06\x00\x00")

func regoTypeMappingJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoTypeMappingJson,
		"rego-type-mapping.json",
	)
}

func regoTypeMappingJson() (*asset, error) {
	bytes, err := regoTypeMappingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-type-mapping.json", size: 1594, mode: os.FileMode(420), modTime: time.Unix(1533249759, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoValidationMappingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x8e\xd3\x30\x10\xc6\xef\x7d\x8a\x51\x16\x09\x09\xed\x36\x9c\x38\xf4\xce\x11\xc4\x61\xc5\x05\x71\x98\xc6\xe3\xd4\xbb\xfe\xc7\x78\x52\xa8\x50\xde\x1d\x39\x69\x9d\x4d\xda\x6e\x11\x12\xa7\x3a\xfe\x66\x3c\xe3\xdf\x37\xf5\xef\x15\x00\x40\xf5\x26\x35\x3b\x72\x58\x6d\xa0\xda\x89\xc4\x4d\x5d\x3f\xa5\xe0\x1f\xc6\xdd\x75\xe0\xb6\x56\x8c\x5a\x1e\xde\x7f\xa8\xc7\xbd\xbb\xea\x7e\xcc\x14\x23\x96\x72\xde\x57\xb4\x46\xa1\x98\xe0\xe1\x13\xc6\x68\x7c\x7b\x0a\x51\x94\x1a\x36\x31\x4b\x39\xf0\x71\x67\x12\x68\x63\x09\x4c\x82\x2e\x91\x02\x09\xe0\x30\xc2\x7e\x3a\x41\x77\xbe\xc9\x8b\x94\x35\x8b\xbe\xed\xb0\x25\x48\x91\x1a\xa3\x4d\x93\xd6\xa5\xfa\x21\x0e\xc5\xc3\xf6\x89\x1a\x39\xed\xa2\x52\x26\x67\xa3\xfd\xc2\x21\x12\x8b\xa1\x54\x6d\x40\xa3\x4d\x74\x0c\x89\x28\x42\xec\x67\xfa\xc8\x62\x90\xd7\xef\x66\xdf\x23\x23\x26\x9d\x6b\xdd\xd5\x8a\xb4\xf1\x43\x85\x54\x0f\x1d\x94\xc0\x7e\x58\xf5\xe5\xe2\x25\x6e\x7e\xfc\xb1\xed\x45\x81\x82\xf2\x31\xcb\xf7\x73\xf1\x12\xc4\x67\x3a\xbc\x64\x28\x8c\x3e\xd9\x11\x20\x7a\xa0\x5f\xf9\x86\x68\x21\x57\x7b\x9b\x20\x75\xdb\xbc\x02\xcd\xc1\x01\x16\x98\x43\xfc\x7a\x59\xee\x22\xd8\xa2\xde\x06\x5c\x42\x5f\x07\xfd\x1a\xf0\x1b\xe0\xdd\x71\xc8\xce\x72\xfa\xd5\xe5\xaf\x7e\xea\xac\x3a\x25\x5f\xf7\x60\x3e\xc3\xd7\x6d\x20\x68\x50\xa8\x0d\x3c\x59\xb1\x3d\x40\x4b\x9e\x18\x25\x70\x02\xe3\x21\xb0\x22\x7e\xe9\x10\xcd\xcd\xc9\x41\x59\xdd\x91\x61\x08\x3f\x3d\x18\x17\x2d\x39\xf2\xf2\x9f\xcd\x61\xfa\xd1\x19\x26\x55\x6d\xe0\xdb\xb9\x27\x1e\x1d\xcd\xf1\x7e\x5f\x9a\x7b\xc3\xd5\xe1\x84\xab\xbe\x2e\x58\x7e\x46\x47\x10\x74\xc6\x50\xfe\xff\x19\x5a\x83\xd6\xe6\xdf\x48\xac\x03\xbb\x41\x9f\x9e\x8a\x25\x9c\x33\x48\x49\xf8\xf2\x98\x9c\xe7\x55\xc6\xc5\xc0\xf2\xd7\x1d\x7f\xdc\x93\x97\x0e\x2d\x4c\xc8\x61\x3c\x02\x02\x43\xc4\xe6\x39\xbf\x5a\xb2\x43\x81\xc8\x61\x6f\x14\xa5\x45\xf7\xe5\xa2\xff\x7e\x8d\x6b\xd3\x3e\xbe\x44\xab\x7e\xf5\x27\x00\x00\xff\xff\x75\x74\x59\xb0\xe3\x05\x00\x00")

func regoValidationMappingJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoValidationMappingJson,
		"rego-validation-mapping.json",
	)
}

func regoValidationMappingJson() (*asset, error) {
	bytes, err := regoValidationMappingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-validation-mapping.json", size: 1507, mode: os.FileMode(420), modTime: time.Unix(1533249759, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gen.sh": genSh,
	"rego-abstract.in": regoAbstractIn,
	"rego-abstract.json": regoAbstractJson,
	"rego-attribute.in": regoAttributeIn,
	"rego-info.json": regoInfoJson,
	"rego-param.in": regoParamIn,
	"rego-shared-params.in": regoSharedParamsIn,
	"rego-shared-params.json": regoSharedParamsJson,
	"rego-spec.in": regoSpecIn,
	"rego-spec.json": regoSpecJson,
	"rego-type-mapping.json": regoTypeMappingJson,
	"rego-validation-mapping.json": regoValidationMappingJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gen.sh": &bintree{genSh, map[string]*bintree{}},
	"rego-abstract.in": &bintree{regoAbstractIn, map[string]*bintree{}},
	"rego-abstract.json": &bintree{regoAbstractJson, map[string]*bintree{}},
	"rego-attribute.in": &bintree{regoAttributeIn, map[string]*bintree{}},
	"rego-info.json": &bintree{regoInfoJson, map[string]*bintree{}},
	"rego-param.in": &bintree{regoParamIn, map[string]*bintree{}},
	"rego-shared-params.in": &bintree{regoSharedParamsIn, map[string]*bintree{}},
	"rego-shared-params.json": &bintree{regoSharedParamsJson, map[string]*bintree{}},
	"rego-spec.in": &bintree{regoSpecIn, map[string]*bintree{}},
	"rego-spec.json": &bintree{regoSpecJson, map[string]*bintree{}},
	"rego-type-mapping.json": &bintree{regoTypeMappingJson, map[string]*bintree{}},
	"rego-validation-mapping.json": &bintree{regoValidationMappingJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

