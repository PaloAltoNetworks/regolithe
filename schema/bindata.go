// Code generated by go-bindata.
// sources:
// gen.sh
// rego-abstract.in
// rego-abstract.json
// rego-attribute.in
// rego-info.json
// rego-param.in
// rego-shared-params.in
// rego-shared-params.json
// rego-spec.in
// rego-spec.json
// rego-type-mapping.json
// rego-validation-mapping.json
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _genSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc4\x20\x14\x84\xef\xfe\x8a\xd7\xb4\x60\x7b\x50\x7f\x40\xa0\x90\x42\x0e\x3d\x14\x4a\xb0\x67\x79\x1a\x6b\x6c\x1b\x15\xb5\xff\x7f\xd9\x6c\x58\xb2\x61\x2f\xcb\x1e\xdf\x0c\x33\xf3\xf1\x1e\x1f\x84\xf6\x41\x68\x2c\x13\x21\xc9\xe6\x3f\x60\xc9\x02\x2d\x42\xa9\x4e\xca\xe1\xfd\xed\x4b\xf6\x4a\x09\xda\x3c\x3d\x1b\xac\x90\xad\x8b\x0c\x6b\xcd\x5e\xff\x57\xcb\x7d\x78\x69\xa8\x70\x2d\x5d\x0d\x5d\x6a\x46\x53\xb9\x0f\xf0\xba\x93\x7e\x4a\x0c\xf7\x0c\x9c\x53\x9f\xdd\xd0\x7d\xf4\xb2\x1f\xf6\xa9\x84\x19\xe7\x3d\x52\x49\xd6\x6c\x70\x96\xf3\x0a\xca\x8d\xa5\x13\x66\x3b\x9e\xbc\xb2\x6d\xbf\xd0\x97\x19\x92\x67\x60\xdf\xc0\x8f\x5f\x1e\xb1\x22\x77\xb1\x25\x2e\xb2\xf5\x04\x96\x7e\x1d\x14\x33\xd9\x19\x81\x93\x43\x00\x00\x00\xff\xff\xfe\x7b\x84\xde\x8e\x01\x00\x00")

func genShBytes() ([]byte, error) {
	return bindataRead(
		_genSh,
		"gen.sh",
	)
}

func genSh() (*asset, error) {
	bytes, err := genShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen.sh", size: 398, mode: os.FileMode(493), modTime: time.Unix(1533220356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x2a\x47\x79\x87\xa9\x28\xd2\x1d\x12\x05\x1d\x42\xa1\x8e\x36\xf6\x9a\xf8\x64\x6c\x6b\x77\x4f\x08\xa1\xfc\x3b\x4a\x0c\xe1\xa0\xa0\xb3\x76\xde\x78\x46\xf3\xd1\x00\x00\xb4\x57\x62\x27\x7a\xc5\xb6\x83\x76\x52\x2d\x9d\x31\x27\xc9\xe9\x50\xaf\xd7\x99\x5f\x8c\x63\xf4\x7a\xb8\xb9\x35\xf5\xb6\x6b\xf7\xd5\xa9\x41\x23\x2d\xbe\xe3\x28\xca\x68\xf5\x5b\x70\x24\x96\x43\xd1\x90\xd3\x2a\x27\xc0\x2f\x02\x30\xc6\xfc\x26\xa0\x19\x1c\xd9\x88\x4c\x80\x20\xa4\x90\x3d\x8c\x28\x04\xa8\xca\x61\x3c\x2b\x09\x60\x72\x26\x33\x30\x45\x5c\x7e\x12\xd0\x09\x15\x2c\x26\x18\x09\x98\xce\x42\x0e\x42\xd2\x0c\x59\x27\x62\x90\x42\x36\xf8\x60\x2b\xbc\x75\x7c\x2f\x6b\xc5\x3c\x9e\xe8\xa7\x20\x3a\x17\x16\x0c\xe3\x23\xe7\x42\xac\x81\xa4\xed\xc0\x63\x14\xda\x37\x95\x29\x97\x4a\xdd\xaa\x7a\xb7\x86\xbf\xee\x75\x4b\x26\xbf\xa4\xed\x8c\x23\x1f\xd2\x9a\x21\xe6\xc2\xb1\xe1\xf3\xfa\x9a\xb7\xc1\x36\xfa\xdf\xb0\x61\x38\xf6\xfd\xd3\xc3\xdd\x73\x7f\x3f\x0c\x7f\xff\x6a\xe6\xe6\x33\x00\x00\xff\xff\x33\x37\x6b\x77\xd3\x01\x00\x00")

func regoAbstractInBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractIn,
		"rego-abstract.in",
	)
}

func regoAbstractIn() (*asset, error) {
	bytes, err := regoAbstractInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.in", size: 467, mode: os.FileMode(420), modTime: time.Unix(1528494787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\x38\xb8\x05\x0a\x6c\x71\xdd\xbd\x0c\x68\xde\xf2\xd0\x87\x02\xc3\x50\x0c\x7b\x6a\x90\x1a\x27\xf1\x64\xb1\xa5\x48\xf6\x48\x25\xf6\x86\x7e\xf7\x81\xd4\x1f\xcb\x89\x6d\x29\x96\xe2\x74\x4f\x4d\xc9\xbb\xe3\xfd\xee\x3f\x45\xff\x7b\x01\x00\x30\x7b\xed\xd2\x9c\x0a\x9c\x5d\xc1\x2c\xf7\xde\x5e\x2d\x16\x5f\x9d\xd1\xf3\x6a\xf5\xad\xe1\xd5\x42\x30\x66\x7e\xfe\xee\xf7\x45\xb5\xf6\x6a\x76\x59\x71\x7a\xe9\x15\x05\xbe\xeb\xc4\x79\xc6\xd4\x37\x1b\x82\x5c\xca\xd2\x7a\x69\x74\xdc\xd6\x80\x35\x05\xa0\x52\xe6\xde\x81\x37\x20\x28\x55\xc8\x04\x08\x8e\x3c\x98\x0c\x12\x74\x04\xe8\x3d\xcb\xa4\xf4\xe4\x00\xb5\x58\x18\x06\x26\x85\x41\x92\x03\x9f\xa3\x87\x14\x35\x24\x04\x4c\xa5\x23\x01\x52\x7b\x03\xc6\xe7\xc4\xe0\x2c\xa5\x32\x93\x69\x45\xdc\xea\xb8\xb1\x51\x45\x93\x7c\xa5\xad\x82\x28\x84\x0c\x64\xa8\x3e\xb1\xb1\xc4\x5e\x92\x9b\x5d\x41\x86\xca\xd1\xe5\x45\x45\x63\xbb\x3b\x95\xad\x2a\xde\x56\xc3\x9d\xf5\xca\x96\x4c\x59\x38\xed\xd5\x42\x50\x26\x75\x3c\xc3\x2d\x3a\x1c\x2d\xf9\x8f\xf8\xd7\x8f\xd6\x60\x2d\xf5\xf0\xc3\xf6\x42\x6b\x77\x1f\xf8\xe0\x0f\xe9\xa2\x91\xef\x88\x9d\x34\x9a\x44\xc7\xd2\x6f\x1f\xf2\x1e\x37\xcf\x0e\xa9\x45\xef\x89\xf5\xa7\xfd\xc6\x6a\xc9\xbe\xdc\xdd\xbc\x9b\xbf\xbf\xfd\xf5\xf5\xde\xed\x1d\x38\xc8\x8c\x9b\x07\x1a\xf5\xa1\xea\x44\x8d\xd4\x80\x60\x91\xbd\x4c\x4b\x85\xdc\x00\x7e\x0b\x1f\x3d\xdc\x4b\xa5\xa0\x0c\x51\xa6\x54\x97\x27\x63\x53\x80\xcf\x09\x2c\xd3\x9d\x34\xa5\x6b\xb8\x62\x10\x02\x0a\x01\x86\xc1\xdc\x11\xdf\xb3\xf4\x14\x49\x8d\x26\xd7\xc4\xb0\x78\x68\xc1\x56\x5f\xe9\xa9\xd8\x6f\x92\x61\x6e\x3c\x06\xfe\x2f\xb2\x4c\x8e\xb4\x0f\x5a\x6e\xe1\x04\x7b\x04\x05\xb9\xd9\x26\x01\x95\xec\x43\x5a\x46\xe1\x4c\xdf\x4b\xc9\x24\x66\x57\x70\x73\x90\x2a\x52\x6a\x2c\xe8\x88\xa4\x2d\xa8\x1e\x9a\x2e\x9c\x83\x94\xb7\x47\x54\x1e\x1e\xa6\x3b\x6c\x07\x12\x7b\xff\x11\xa1\x5c\x91\x58\xa6\x39\x72\x3f\xf9\x23\x58\xd1\x4b\x2b\x5a\xdb\xaa\x76\x21\x38\xcf\x52\xaf\x3a\xce\x2a\x4a\xe7\x21\x37\xda\x70\xa8\x89\x09\xc1\x1d\x2a\x29\x7a\x4c\x07\xdd\xb8\xa9\x44\x1e\xb6\x20\x6c\xeb\xcc\x00\x98\x46\xa6\x03\xec\xb2\x0f\xe8\x75\x25\x23\x00\x28\x43\x4e\x19\x7e\x1c\x96\x1b\x4b\xf0\x41\x97\xc5\x53\xf0\x1d\xab\x07\x3b\x0c\xfd\xb9\xb6\x57\x7e\x6d\xbf\xfe\x03\xa0\x53\xef\x02\xe3\x97\x9b\xeb\xf9\xe7\xdf\xe6\xef\x6f\x6f\x70\xfe\xcf\xf5\xfc\x73\x28\x70\xbf\xbc\x3e\xee\x08\x68\x4b\xff\xc1\xdd\x3e\x57\x95\xde\xac\x48\x13\xa3\x8f\xc9\xfa\x74\x47\xfd\x9d\x77\xda\x2c\x48\x07\x3b\x22\x21\xd9\xc4\xf2\x91\x60\xfa\x8d\xf4\x93\x22\x31\x31\x46\x11\x1e\x49\xe6\x21\xf8\x52\xa6\xd8\xc1\x97\x46\xab\xcd\x04\xf8\xc2\xbc\x10\x44\x85\xdc\x0a\x83\x86\x28\x63\x06\xc6\x63\x08\x42\x25\x88\xc7\x9d\x1d\xa7\xa0\x0c\x4b\xe5\x97\x86\x05\xf1\xc9\x38\x63\xb2\x35\x15\x7f\xc7\xa9\x71\x3c\xc2\xd0\xa2\xe2\x39\x10\xcf\x09\xc8\xbf\xd1\xa0\x6c\x7a\x16\xb0\x51\xdd\x93\xc1\x36\x50\xf6\x83\x7e\x02\xa8\x9b\xa6\xa8\x6c\xe1\x5d\xc2\x4c\x6a\x4f\x2b\xe2\xf0\xa7\x2e\x95\xaa\xfe\x2d\x92\x6a\xa5\xe9\xce\x6d\xbd\xb8\x1d\x69\x10\xcb\x94\x4e\x97\xc2\x1d\x79\xe7\xf7\x6d\x57\xb5\x53\x3d\xdb\x2e\x8d\xf1\xeb\x24\xbd\x90\xd6\x58\x58\x45\x23\x62\xf5\x43\x25\xa1\x8e\xd3\xd0\x08\xff\xbf\x81\x4a\x6b\x6b\xdc\x54\x51\x6a\xcb\x44\xc9\x54\x6d\xa0\x91\x7a\x42\xac\x0e\x60\xa9\xeb\x44\xe0\xf2\x5c\xd2\xb8\x70\xc8\xa4\xf2\xc4\x98\xa8\xd3\xeb\xd6\x6e\x33\x4a\xa8\xaa\xcd\x21\x2e\x2a\xe1\xa1\x2a\xdb\x92\x83\x49\xdc\xd9\xd3\x37\x33\x4c\x72\xa5\x97\xa1\x2d\x4c\x33\x4d\x40\x2d\xf2\x45\x3a\xcd\x8a\xc2\x7c\x36\x01\x92\x78\x57\xcc\xf1\x8e\x00\x61\x3b\x1c\xd5\xe2\xcf\x8d\x4a\x0a\xd2\x5e\x66\x72\x12\x64\x9d\xe1\x00\xa1\x40\xa9\xa1\x23\xfe\x79\x32\xb2\xd4\xf2\x7b\x49\x1f\xeb\x01\x3d\x24\xe5\x38\x73\x68\x41\xeb\x89\x2d\xa1\xa1\x92\x7a\x6e\xd7\x16\xb8\x5e\x2a\xd2\x2b\x9f\x9f\x0c\xa8\xc0\xb5\x2c\xca\x02\x2a\x31\x8f\xa7\xc1\xe6\xe6\x35\xf8\xa6\xd3\x22\x6c\x3a\xcd\x68\x84\xe3\x06\xbf\x06\xe0\x81\x69\xb7\xc1\xd7\xf6\xc5\x73\x03\x94\x7a\xb4\x0b\xa5\xfe\xa9\x5d\x28\xf5\x58\x17\xd6\x00\x7f\x52\x17\xc6\x6f\x5a\xa7\x62\x0b\xcc\x2f\x3e\xb6\x9a\x42\xfa\x25\x15\xd6\x9f\xd6\xc6\x3f\x66\xb1\x2c\x5f\x3e\xf0\x4b\x3d\xb0\x08\x36\xd6\x92\x00\x99\x41\x3c\x02\x0c\x43\x35\x7a\x9e\xb9\x5a\xc6\x5b\xec\x33\x0d\x63\xed\x0d\xf9\xc5\x66\x31\xcb\xb2\x40\xde\x4c\x37\x8b\x55\xdd\x0d\x6a\xb9\x2f\x32\x90\x31\xa1\x98\xea\x5b\x8e\x74\x10\xc4\xc5\xef\x39\x2f\x00\xa4\xfd\x40\x3e\x09\x8e\x5a\xda\xb9\x61\x38\x4a\x99\xfc\x34\x20\x2a\x59\xf1\x8d\xc4\xe5\xa6\x54\x22\xd6\x0a\x42\xe5\xe1\x5e\xfa\x1c\x52\xe4\x27\xd5\xc1\x89\x00\x3e\xeb\x0d\xc0\xbd\xcc\x0d\xc0\x79\x33\x59\xec\xd5\xb2\x9e\xfb\xf2\x3d\x7a\xcc\x77\x65\x52\x2b\x30\xae\x2f\x17\x68\x6d\xa8\xeb\xde\x80\x95\xe9\xb7\x58\xec\xef\x73\xd2\xb1\xd7\x55\x63\x87\x8b\xdf\x86\xbd\x81\x37\xb4\xf6\xc4\x1a\xd5\x9b\x73\x37\x70\xcf\xa8\x9d\x24\x3d\x51\x6e\x6e\xc5\x9d\x3b\x54\x47\xf9\x2c\xba\xa3\xfb\xa2\x7b\x82\x1b\x06\x70\x90\x2e\x8b\xde\x97\xce\x96\xfa\x69\x4f\x44\xc3\x67\xd8\x48\x9e\x29\x83\x43\x9c\x14\x89\x87\x27\x22\xb4\x30\x07\xd2\x2a\xe9\x06\xab\xd1\xfb\x56\xbd\x43\xed\x65\xef\x83\x71\x4b\xdb\xa4\x5f\xff\x33\xda\xb8\xef\x9a\xf1\x99\x15\x1f\xff\xe2\xe2\x20\xc3\x83\x58\xfd\xb3\xae\x2d\x08\x69\xe9\xbc\x29\x60\x2b\x70\xfb\x73\x82\x65\x77\x51\x2a\x0a\x05\x06\xad\x55\x9b\xf0\xc7\xc9\xb7\x85\x33\x3d\x88\xf6\x32\xf5\xbc\x63\x1e\xdc\xdd\xbf\xf3\x78\x75\x77\x65\xfb\xbf\xfa\xa7\x33\x17\x3f\x2e\xfe\x0b\x00\x00\xff\xff\xdb\xdf\x15\x0d\xc2\x24\x00\x00")

func regoAbstractJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractJson,
		"rego-abstract.json",
	)
}

func regoAbstractJson() (*asset, error) {
	bytes, err := regoAbstractJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.json", size: 9410, mode: os.FileMode(420), modTime: time.Unix(1533241780, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAttributeIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xcd\x6e\xe3\x36\x10\xbe\xef\x53\x0c\x8c\x05\x16\x68\x93\x45\x7b\xdc\xdc\x72\xd8\x43\x80\xa2\x28\x8a\x9e\x36\x9b\x35\xc6\xe2\xd8\x66\x43\x91\xdc\x21\xe9\xd8\x2d\xf2\xee\x05\x29\xc9\x96\x12\xdb\x92\x2d\x45\xde\xea\x12\x43\x1a\x7e\xe4\xc7\xf9\x25\x27\x50\x7b\x26\x7e\x63\x69\x72\x03\x13\x33\xfb\x9b\x32\x3f\xb9\x7a\xd7\xf8\x2a\xc8\x65\x2c\xad\x97\x46\x47\xa1\xdf\xa4\xf3\x60\xe6\xb0\x22\x76\xd2\x68\x12\x80\xde\xb3\x9c\x05\x4f\xee\xe3\xcb\xb1\x28\x84\x8c\x03\x51\xfd\xc1\xc6\x12\x7b\x49\x6e\x72\x03\x73\x54\x8e\x5e\x88\x5a\xf4\x9e\x58\x37\xe4\xfe\x6d\x88\x24\xb1\x6f\xab\xfb\x5f\xae\x3f\x3d\xfc\xfc\xf5\xfd\xde\xef\x0d\x3e\xc8\x8c\x9b\x17\x4b\x6a\xa3\xb5\x23\x03\x52\x03\x82\x45\xf6\x32\x0b\x0a\xb9\x62\xfc\x11\xee\x3c\x3c\x49\xa5\x20\x38\x02\x54\xaa\x3e\x66\xce\x26\x07\xbf\x24\xb0\x4c\x2b\x69\x82\xab\x46\x39\x40\x2d\x00\x85\x00\xc3\x60\x56\xc4\x4f\x2c\x3d\x25\x51\xa3\xc9\x81\xa0\x4c\x21\x93\x78\xb9\x85\xdb\xf5\x4a\x4f\xf9\xfe\x3d\xe9\xa6\xc7\x63\xe4\xff\x24\xcb\xe4\x48\xfb\xb8\xca\x1d\x9d\xb8\x1f\x71\x81\x5c\x7d\x26\x01\x05\xf6\xa1\x55\x26\x70\xa6\xef\x41\x32\x89\xc9\x0d\xdc\x1f\x94\x4a\x92\x1a\x73\x3a\x82\xb4\x23\xd5\x22\x53\xa7\x73\x50\xf2\xe1\xc8\x92\xbb\xdb\x69\x63\x98\x3d\x6e\xac\xcd\x29\x94\x32\x4f\x24\xa6\xd9\x12\xb9\x5d\xfc\x15\xad\xa4\xa5\x05\xad\x2d\xf8\x25\x7a\x40\x70\x9e\xa5\x5e\xd4\x94\x95\x07\xe7\x61\x69\xb4\x61\xf0\x06\x66\x04\x2b\x54\x52\xb4\x6c\x1d\xd4\xed\xa6\x80\x3c\xbc\x83\xf1\x79\x6e\x51\xc5\x8e\xa6\x91\x59\x87\x7d\xd9\x47\xf4\xb6\xc0\x88\x04\x42\xf4\x29\xc3\xaf\xcd\x72\x63\x09\x3e\xeb\x90\x9f\xc2\xef\x58\x3c\x68\x0c\x68\xf7\xb5\xbd\xf8\xe5\xfe\xb5\x4f\x00\xb5\x80\x17\x07\x7e\xbb\xbf\xbd\xfe\xf2\xeb\xf5\xa7\x87\x7b\xbc\xfe\xe7\xf6\xfa\x4b\x8c\x70\x3f\x7d\x7d\x7f\x5c\x13\xf1\x79\xee\xa7\xab\xe0\xcd\x82\x34\x31\xfa\xe4\xad\xa7\x6b\xea\xaf\x25\xd5\xf4\x22\x1d\x34\x20\x61\xb6\x49\xf1\x63\x86\xd9\x23\xe9\x93\x4c\x71\x66\x8c\x22\x3c\xe2\xcd\x5d\xf8\x65\x4c\x18\x57\x3a\x35\x5a\x6d\x06\xe0\x97\xa1\x86\x08\x15\x9d\xcb\x91\x07\x11\x92\x0b\xa6\x69\x08\x62\x28\x48\xd3\x8d\xce\x53\xd0\x1c\x83\xf2\x53\xc3\x82\xf8\x6c\x9e\xc9\xdb\xaa\x90\xdf\x50\x6a\x70\x31\xcb\xc7\x1c\x95\xe6\x81\x34\x4f\x64\xfe\x48\x9d\xdc\xe9\x4d\xc8\xa6\xe5\x9e\x4d\xb6\xa2\xb2\x9f\xf4\x09\xa4\xee\xab\xa8\xb2\xa3\x77\x05\x13\xa9\x3d\x2d\x88\xe3\x4f\x1d\x94\x2a\xfe\xe6\xb3\xe2\x4d\x95\x9e\xb7\x01\xe3\xa1\xe7\x86\x58\xa6\x6c\x38\x17\xae\xe1\x8d\xaf\xdb\xfa\xd2\xce\xd5\xec\xf6\x55\x1f\xbd\x0e\x92\x0c\x69\x8d\xb9\x55\xd4\xc3\x56\x3f\x17\x08\xa5\x9d\xc6\x4c\xf8\xff\x35\x54\x5a\x5b\xe3\x86\xb2\x52\x1b\x66\x4a\x66\x6a\x03\x15\xea\x19\xb6\xda\x61\x48\x19\x27\xe2\x28\xcf\x81\xfa\x99\xc3\x5c\x2a\x4f\x8c\x33\x75\x7e\xdc\x6a\x26\xa3\x19\x15\xb1\x39\xda\x45\x01\x1e\xa3\xb2\x0d\x1c\xb7\xc4\x8d\xee\xbe\x73\xc3\x24\x17\x7a\x1a\xd3\xc2\x30\xd5\x04\x94\x90\x17\xc9\x34\x0b\x8a\x05\xda\x00\x4c\xd2\x61\x71\x89\x2b\x02\x84\x5d\x71\x54\xc2\x8f\xcd\x4a\x0a\xd2\x5e\xce\xe5\x20\xcc\x6a\xc5\x01\x42\x8e\x52\x43\x0d\xfe\x6d\x3c\x32\x68\xf9\x3d\xd0\x5d\x59\xa1\x47\xa7\xec\xb7\x1d\x5a\xd0\x7a\xe0\x9d\xd0\x50\xa0\x8e\xad\xda\x1c\xd7\x53\x45\x7a\xe1\x97\x67\x13\xca\x71\x2d\xf3\x90\x43\x01\xf3\xba\x1a\xac\x8e\x5e\x9d\x8f\x3a\x5b\x86\x55\xa6\xe9\xcd\xb0\x5f\xe1\x57\x11\x3c\x50\xed\x56\xfc\xb6\x79\x71\x6c\x82\x52\xf7\x56\xa1\xd4\x3f\xb4\x0a\xa5\xee\xab\xc2\x92\xe0\x0f\xaa\xc2\x74\xa9\x75\x2e\xb7\x38\xf8\xe2\x65\xab\xc9\xa5\x9f\x52\x6e\xfd\x79\x69\xfc\x6e\x9e\xc2\xf2\xd5\x0b\xbd\x94\x05\x8b\x60\x63\x2d\x09\x90\x73\x48\x53\x80\x61\x28\x4a\xcf\x91\xa3\x65\x3a\xc5\xbe\x51\x31\xb6\x3d\x21\x5f\xac\x16\xb3\x2c\x73\xe4\xcd\x70\xb5\x58\x91\xdd\xa0\xc4\xbd\x48\x41\xc6\x84\x62\xa8\xbb\x1c\xe9\x20\xc2\xa5\xfb\x9c\x0b\x10\xd9\xde\x90\x0f\xc2\xa3\x44\x1b\x9b\x86\xa3\x8c\xc9\x0f\x43\xa2\xc0\x4a\x4d\x12\xb7\x34\x41\x89\x14\x2b\x08\x95\x87\x27\xe9\x97\x90\x21\x9f\x14\x07\x07\x22\xf8\xa6\x27\x00\x77\x99\x13\x80\xf3\x66\x30\xdb\x2b\xb1\xde\xfa\xf0\xdd\xbb\xcc\x77\x61\x56\x2e\xa0\x5f\x5e\xce\xd1\xda\x18\xd7\xbd\x01\x2b\xb3\xc7\x14\xec\x9f\x96\xa4\x53\xae\x2b\xca\x0e\x97\xee\x86\xbd\x81\x0f\xb4\xf6\xc4\x1a\xd5\x87\xb1\x13\xb8\x67\xd4\x4e\x92\x1e\xc8\x37\x77\x70\x63\x9b\x6a\x2f\x9d\x25\x75\xd4\x5b\xba\x67\xa8\xa1\xc3\x08\xd2\x21\x6f\x6d\x75\x6e\xa5\x4f\xeb\x11\x75\xaf\x61\x93\xf8\x5c\x19\xec\xa2\xa4\x24\xdc\xdd\x11\x61\x4b\xb3\xa3\xac\x92\xae\xf3\x32\x5a\x9b\xd5\x0d\x69\x2f\x5b\x3b\xc6\x5b\xd9\xca\xfd\xda\xdb\x68\xfd\xee\x35\x53\x9f\x35\x75\x7e\xce\x6b\x77\xfe\x5e\xc6\x16\x84\x2c\x38\x6f\x72\xd8\x01\xee\xfe\x9f\x60\x5a\x7f\x29\x15\xc5\x00\x83\xd6\xaa\x4d\xfc\x71\xf6\x69\x61\xa4\x8e\x68\xeb\xa0\x96\x3e\xe6\xc1\xaf\xfb\xbf\xbc\x7e\xdb\x7c\xf3\xfc\xee\xbf\x00\x00\x00\xff\xff\x72\x5e\x56\xbe\xff\x22\x00\x00")

func regoAttributeInBytes() ([]byte, error) {
	return bindataRead(
		_regoAttributeIn,
		"rego-attribute.in",
	)
}

func regoAttributeIn() (*asset, error) {
	bytes, err := regoAttributeInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-attribute.in", size: 8959, mode: os.FileMode(420), modTime: time.Unix(1533236243, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoInfoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xbd\x4e\xc3\x40\x0c\xc7\xf7\x3c\x85\x75\x30\xb6\x0d\x13\x43\x36\xc6\x0e\xa0\x4e\x2c\x88\xc1\x4d\x7c\xad\xab\x34\x77\xd8\x0e\x02\x55\x7d\x77\x74\xb9\xa6\x4a\x3f\x36\x96\x44\xf9\xd9\xff\x8f\xf8\x50\x00\x00\xb8\x47\xad\xb7\xb4\x47\x57\x81\xdb\x9a\xc5\xaa\x2c\x77\x1a\xba\x79\xa6\x8b\x20\x9b\xb2\x11\xf4\x36\x7f\x7a\x2e\x33\x7b\x70\xb3\xac\x34\xb6\x96\x92\x6e\xd9\xf9\x30\xc2\x86\xb4\x16\x8e\xc6\xa1\x4b\xa3\x57\x32\x04\xee\x7c\x90\x3d\x26\x06\xb8\x0e\xbd\x01\x82\x92\x41\xf0\xa0\x91\x6a\xf6\x5c\x0f\x43\x5d\x9c\xad\x7f\xe3\xe0\x1c\xd6\x3b\xaa\x6d\xa4\xd8\x34\x9c\xf6\xb0\x5d\x49\x88\x24\xc6\xa4\xae\x02\x8f\xad\xd2\x69\x45\xe8\xab\x67\xa1\xc6\x55\xf0\x31\x90\x81\x46\x21\xcf\x3f\x27\x9b\xbc\x17\x82\x4d\xbf\xbf\x49\x34\x55\x1e\xc8\xe7\xac\x28\x4e\xba\x49\xcc\xe1\xc6\x6f\xca\x2e\x6a\xab\x09\x77\x9b\x89\xff\xbd\xd3\xac\x06\x13\xb0\x00\xbd\x52\x7a\xd5\xd8\xb6\x80\x91\xd5\x9d\x75\xc7\xeb\xca\xff\x8b\x7c\xc3\x3d\xa5\xab\xdb\x96\x20\xd9\x5d\x9e\xff\x56\xec\xb1\x6f\x53\x66\xce\xbe\xdb\x6a\x3c\xdc\x4d\xb1\xab\xe8\xf7\xbc\x37\xa6\xbf\xac\x96\xd7\x71\xe3\x9f\x70\x67\xb4\x21\x99\xc4\x15\xf9\x79\x2c\xfe\x02\x00\x00\xff\xff\xb8\x06\xde\x01\xb3\x02\x00\x00")

func regoInfoJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoInfoJson,
		"rego-info.json",
	)
}

func regoInfoJson() (*asset, error) {
	bytes, err := regoInfoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-info.json", size: 691, mode: os.FileMode(420), modTime: time.Unix(1528494787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoParamIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xcb\x6e\xdc\x3a\x0c\xdd\xe7\x2b\x08\xaf\x83\xfb\x01\x59\x27\x8b\x0b\xb4\xc5\xa0\x0d\xba\x09\x82\x80\xb6\x39\x33\x2c\xf4\x70\x25\x39\x0f\x14\xf9\xf7\x42\xf6\x78\x62\x8d\x2d\x5b\xb6\x51\xb4\xde\x0c\x6c\x91\x47\xd4\xe1\x21\xc5\x81\xde\x93\x39\x76\x82\xb2\x1b\xc8\x76\x68\x50\x92\x23\x03\xdf\xc8\x65\xd7\x57\xa1\xd5\x5b\xd5\x18\xe9\xfc\x07\x15\x83\x55\x2c\x4b\x76\xac\x15\x8a\x9d\xd1\x15\x19\xc7\x64\xb3\x1b\xd8\xa3\xb0\x74\x61\x5a\xf5\x0d\x7e\x05\x6b\xcd\xba\xa1\x9f\x35\x1b\x2a\x47\x57\x23\x01\x5b\xf8\xda\x7a\x49\x52\xce\xc2\xdd\x6b\x65\xc8\x5a\xd6\xca\x5e\x04\x7a\xc6\x28\xc9\x16\x86\x2b\x1f\xb3\x47\xba\xa5\x3d\x2b\x82\x97\x23\x3a\x28\xb4\xcc\x59\xa1\x5f\xb2\xa0\xf7\x50\x7d\xec\x82\x86\xa0\x8b\xef\xbf\x18\x74\xc7\x14\x1a\x83\x6f\x31\x23\x76\x24\xc7\x09\x58\x84\x93\x88\xb5\x08\x6f\x01\x66\x80\x6b\x9d\x61\x75\xc8\x26\x1d\xde\xa3\xab\xe3\x2b\xc3\xaf\xef\xc3\xc0\x33\x52\xce\xc4\xf4\x04\x81\x62\x3e\xb1\x75\x3e\xa7\x1f\xca\x49\x16\x88\x7f\xcd\x09\xdc\x91\x40\x9c\x50\xf0\x19\x59\x60\x2e\xa8\xa7\x91\x3f\x2f\x8b\x81\xfa\xa7\xb4\x11\x3b\x06\x82\x65\x75\xe8\x47\x3e\x85\x32\x59\xfc\x81\x65\x7a\x23\x08\xdc\x7a\x45\xff\x30\x2d\x4c\x85\x92\xe6\xc4\xdb\x3f\xf4\x8c\x69\x73\xb2\xa8\xc9\xe3\x44\xc8\x33\x7d\x6c\x18\x74\x5a\x31\x0d\x9b\xf1\x97\xf9\x13\xc3\x48\xaa\xbd\x9b\x17\xa9\x17\xec\x39\xc9\x31\x75\x86\x31\x2c\x29\xe8\x05\xa9\x58\x4b\xc0\x6d\x72\x3a\x47\xb6\xcc\x7a\xde\x7f\x9f\x8e\x13\xd6\x3a\x1e\xee\xbd\xf3\x72\x02\xee\x8f\x04\x7e\xdf\xe0\x2e\x5b\x73\xf2\x04\x0f\x52\xb5\x9c\xad\xe1\xb3\x75\x32\x6e\x63\xcd\xca\xd1\x61\xb2\x4f\x05\xe6\x7b\xa1\x71\xaa\x55\x05\xc6\xb9\xd6\x82\x30\x45\x5e\x70\x3e\x66\xa2\x6d\x59\x1b\x4c\x94\x2e\xb4\x89\x97\x13\x1d\xa9\x7b\x1e\x37\xc9\x50\xd6\xc2\x71\x25\xd6\x4b\xf1\x73\x0b\xc0\x05\xbb\xb9\x51\x02\xa2\xe3\x96\x05\xbe\xa8\x47\x28\x50\x41\x4e\x60\x49\x39\xe8\x82\x04\xcf\x48\xf4\x5e\x0d\x23\x3d\x09\xb6\x4b\xe7\x26\x92\x50\x08\xfd\x42\xe5\x53\x71\xd4\x5c\x24\x74\x79\x88\x70\xb5\xd3\xd6\xb2\x20\xf8\x8e\xa2\xa6\xd8\xbc\x11\x80\x5c\xb0\xf5\x7f\xcb\x52\x53\xc3\x6c\xc1\x8b\xef\xba\x99\x41\x2c\xa0\x10\x2d\x83\x7e\x0f\x3f\x88\x3c\x27\x6f\xb2\x64\x1c\x84\x65\x23\x21\x2c\x6d\x9b\x30\x39\x1a\x42\xd2\x3d\xb3\xc7\x5a\xb8\xa7\xe6\xfc\x1b\x6e\x9a\x06\xa5\x4d\xd5\x3a\x5d\x37\xfe\x4d\x14\x83\xdb\xc6\xcb\x5d\x4b\x76\x8e\xca\x05\x09\x7a\xe8\x32\xd4\xeb\x52\xbd\x66\x08\x99\xaa\x85\x68\x7f\x65\xde\x7e\xe9\xc6\xb4\x33\xf9\xdb\xba\x05\xbd\xa2\xac\x04\x6d\xe4\xf6\xae\x45\x59\xcd\x6d\xe7\x3f\xce\xed\xbf\x45\xe8\xf6\x7f\x39\x57\xe1\xdb\xef\x00\x00\x00\xff\xff\x76\x36\xe8\x20\xb1\x0f\x00\x00")

func regoParamInBytes() ([]byte, error) {
	return bindataRead(
		_regoParamIn,
		"rego-param.in",
	)
}

func regoParamIn() (*asset, error) {
	bytes, err := regoParamInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-param.in", size: 4017, mode: os.FileMode(420), modTime: time.Unix(1533220356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x31\x6f\xc2\x30\x10\x85\x77\x7e\xc5\xc9\x74\xaa\x0a\xee\xd4\x81\x8d\x81\xb1\x12\xa2\xec\x91\xb1\x9f\x6b\xa3\x60\x5b\xe7\x5b\x50\x95\xff\x5e\x39\x29\x69\xd3\x2d\x79\xf7\xbd\x7b\xe7\xf7\xb5\x22\x22\x52\x4f\xd5\x06\xdc\x8c\xda\x91\x0a\x22\x65\xa7\xf5\xb5\xe6\xb4\x99\xd4\x6d\xe6\x4f\xed\xd8\x78\xd9\xbc\xbe\xe9\x49\x5b\xab\x97\xc9\x29\x51\x7a\x34\xdf\x47\x30\x0c\x47\x47\xc3\xe6\x06\x01\xd7\x07\xe1\x50\x2d\xc7\x22\x31\xa7\xc6\x9d\x03\xa8\xcc\x10\x39\xf8\x98\xe0\x28\x80\x41\xd6\x24\xba\x80\x18\x1e\x0c\x8b\x64\xe1\xe8\x72\xa7\x2c\x01\x4c\xb5\xc0\x46\x1f\xad\x69\x9b\xea\x76\x3e\xe0\x5e\xc6\xfc\x7c\xb9\xc2\xca\x43\x35\xce\xc5\xc6\x99\xfe\xc8\xb9\x80\x25\xa2\xaa\x1d\x79\xd3\x57\xfc\x20\xc5\x88\x80\xd3\x62\x3e\xd5\x31\x8e\xb7\xcf\x8b\xff\xa9\x26\x86\x6f\x59\x6b\x3d\x9e\x3d\x26\x54\xfd\xfb\x1a\x35\xe3\xc3\xf8\x35\xcc\x15\xcc\xf4\x32\xe4\x8f\xb5\xe9\x5d\x77\xdc\x9f\xf6\xef\x87\xf3\xe1\xd4\x75\xff\x77\xad\x86\xd5\x77\x00\x00\x00\xff\xff\xc9\x23\xe7\x9b\xae\x01\x00\x00")

func regoSharedParamsInBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsIn,
		"rego-shared-params.in",
	)
}

func regoSharedParamsIn() (*asset, error) {
	bytes, err := regoSharedParamsInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.in", size: 430, mode: os.FileMode(420), modTime: time.Unix(1533220356, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x6f\xdc\x38\x0c\xbd\xcf\xaf\x20\x9c\x3d\x2d\x92\x99\x3d\xed\x21\xe7\xe4\x50\xa0\x2d\x82\x26\xe8\x25\x08\x02\xda\xa6\xc7\x0a\x64\xc9\x95\x38\xf9\x40\x31\xff\xbd\x90\x34\x76\xec\xf8\x7b\x06\x45\xdb\x4b\x63\xe9\x91\x22\x1f\x9f\x28\xce\xcf\x15\x00\x40\xf4\x8f\x4d\x72\x2a\x30\xba\x84\x28\x67\x2e\x2f\x37\x9b\x27\xab\xd5\x45\x58\x5d\x6b\xb3\xdd\xa4\x06\x33\xbe\xf8\xef\xff\x4d\x58\x3b\x8b\xce\x83\x25\x0b\x96\xe4\xec\x6e\x73\x34\x94\xc2\x0d\x1a\x2c\x88\xc9\xd8\x0a\x91\x92\x4d\x8c\x28\x59\x68\xe5\x70\x77\x39\x41\x59\x83\x20\xa5\x4c\x28\x4a\x21\x27\x43\x90\xa0\x82\x98\xc0\x50\x46\x86\x12\x52\x09\xa5\x10\xbf\x81\xe6\x9c\x0c\xd8\x92\x12\x91\x89\x04\x9d\x27\xbb\xae\x03\x78\x2b\xfd\xf9\x3a\x7e\xa2\x84\xab\x55\x4c\x53\xe1\x70\x28\x6f\x8c\x2e\xc9\xb0\x20\x1b\x5d\x42\x86\xd2\xd2\x01\x52\x22\x33\x19\xd5\xda\x0f\x74\xf8\xed\xf5\xbf\xad\xef\x40\x93\xa1\xcc\x9d\x75\xb6\xf1\x61\xfb\x13\xec\xe6\x3d\x9b\xa8\x86\xef\xfd\x5f\xfb\x9a\x82\x1a\xdd\x3e\xa4\x61\xda\x39\xac\x66\xb6\xa6\x14\x6e\xa9\x4a\xf0\x1d\xd5\x97\x7e\xbd\x3b\x4d\xc3\x7b\x28\xfd\x3c\xd4\xfb\x86\x7e\xec\x84\xa1\xb4\x77\x77\x20\x60\x0b\xdf\x82\x55\x41\x8a\x2d\x5c\xbf\x96\x86\xac\xf5\x34\x9c\xf7\xfb\xf8\x20\x96\x2b\xaf\x0e\x78\xc9\x91\x21\xd1\x45\x2c\x54\xa8\x3e\xe8\xac\x29\x22\x34\x4e\x34\x21\xbe\xf5\x90\xeb\x8a\x29\x34\x06\xdf\x86\x40\x82\xa9\xe8\x27\x60\x91\x9f\x99\xbe\x16\xf9\x5b\xe0\xb3\xe5\xd7\xb2\x11\x6a\x1b\x8d\x1a\xec\x07\x77\xfb\x77\xba\xab\xfb\x6e\xe0\x11\x29\x36\x43\x7a\x82\x96\x62\x3e\x0b\xcb\xae\xa6\x9d\xee\xd1\x31\xe9\x08\xc4\x7d\xc6\x04\x9c\x13\xc8\x83\x17\x7c\x46\x21\x31\x96\xcd\x46\xf3\xfb\x65\xd1\x51\xff\x98\x36\x86\xd2\x40\xb0\x42\x6d\x9b\x91\x8f\x79\x19\xbd\xfc\x2d\xe4\xfc\x46\xd0\x32\x6b\x5c\xfa\xfb\x71\x61\x2a\x2c\x68\x4a\xbc\xcd\xa4\x27\xa0\x3e\xb3\x41\xc8\xc3\x48\xc8\x13\x7d\xac\x1b\xf4\xbc\xcb\xd4\x6d\xc6\x5f\xa7\x33\x86\x9e\x52\x3b\x33\x27\x52\x6e\xbe\x83\x43\xea\x6c\xc7\xb0\xe4\x42\x2f\x28\xc5\xb1\x04\x5c\xcd\x2e\x67\xcf\x91\x51\xc3\xfa\xcf\xd3\x71\xf0\x75\x1c\x0f\x77\xce\x78\x39\x01\x6e\x10\x72\xe7\xb6\xde\xb2\x63\x32\x9f\x61\x41\x6a\x57\x4c\xde\xe1\x1a\x3d\xdb\xaf\x47\x0b\xc5\xb4\x1d\xed\x53\x2d\x78\x26\x35\x8e\xb5\xaa\x16\x38\xd6\x5a\x12\xce\x91\x17\xd4\x69\xce\xc4\xa6\x3b\x83\x33\xa5\x0b\xa1\xf0\xc5\x48\x47\xaa\xfe\x3d\x9c\x24\xc3\x62\x27\x59\x94\xf2\x78\x29\x7e\x09\x0e\x44\x22\x78\x6a\x94\x80\xc1\x71\xcb\x82\xf8\x70\x1f\xab\xc1\xdc\x92\x62\xa8\x82\x04\xc7\xc8\xe0\xbb\xda\x8e\xf4\x20\xd8\xaa\x9c\x27\x91\x84\x52\xea\x17\x4a\x1f\x93\x5c\x8b\x64\x46\x97\x87\x01\xae\x6e\xb4\xb5\x42\x12\x7c\x47\xb9\xa3\xa1\x79\xa3\xe5\xe4\x03\x5b\x9f\x02\x4b\xfe\x0e\x0b\x0b\x4e\x7c\xe7\x7e\x06\xb1\x80\x52\x06\x06\xdd\x19\x6e\x10\x79\x9e\x7d\xc8\x92\x71\x10\x96\x8d\x84\xb0\xb4\x6d\xc2\xe8\x68\x08\xb3\xde\x99\x0c\x77\x92\x1f\x7d\xfe\x27\xbc\x34\xde\x4b\x28\xd5\x71\xba\xf6\xf6\x3e\x8a\xce\x6b\xe3\xe4\xae\x0b\xc1\x4c\xe9\x82\x02\xdd\x57\x15\x6a\x74\xa9\x46\x33\x84\x48\xed\xa4\x0c\xff\x17\x71\x58\xa9\xc6\xb4\x9a\xfc\xd3\xba\x05\xbd\x62\x51\x4a\x3a\x91\xdb\xeb\xe0\xe5\x68\x6e\x2b\xfb\x7e\x6e\xff\x2e\x42\x4f\xff\x95\xb3\xea\xff\x3a\xfc\xdc\x5f\xed\x57\xbf\x02\x00\x00\xff\xff\xa9\xb8\x42\xf1\x51\x11\x00\x00")

func regoSharedParamsJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsJson,
		"rego-shared-params.json",
	)
}

func regoSharedParamsJson() (*asset, error) {
	bytes, err := regoSharedParamsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.json", size: 4433, mode: os.FileMode(420), modTime: time.Unix(1533241780, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\xcd\x8e\xe3\x36\x0c\xbe\xcf\x53\x10\xde\x1e\x67\x36\x3d\xf5\x90\x5b\xda\x1d\xb4\x05\xba\xc5\x20\x4d\x4f\xc5\xc2\x60\x24\x3a\xd1\xae\x6c\x79\x25\x79\xd2\x60\x91\x77\x2f\xe4\x1f\xf9\xdf\xb1\xd1\xd9\x74\xba\x97\x41\x86\x22\x29\xea\x23\x3f\x8a\xf2\x97\x3b\x00\x80\xe0\x3b\xc3\x8e\x14\x63\xb0\x86\xe0\x68\x6d\xba\x5e\xad\x3e\x1a\x95\x3c\x14\xd2\xb7\x4a\x1f\x56\x5c\x63\x64\x1f\xbe\xff\x61\x55\xc8\xde\x04\xf7\x85\xa5\x15\x56\x92\xb3\xfb\x23\x25\x26\x22\xc1\xd0\x0a\x95\x54\xab\x9c\x0c\xd3\x22\xcd\x45\x6b\x08\xb6\x94\x6a\x32\x94\x58\x03\x98\x80\xda\x7f\x24\x66\xe1\x24\xec\x11\x50\x4a\x10\x4e\x6c\xad\x16\xfb\xcc\x92\xd3\xe0\xa0\x49\xe6\xfe\x8c\xdf\xee\x9c\xe6\xbb\x15\xb6\x95\x14\x39\x17\x4e\x0d\xe5\x93\x56\x29\x69\x2b\xc8\x04\x6b\x88\x50\x1a\x2a\x55\x34\x7d\xce\x84\x26\x1e\xac\xe1\xaf\x5c\x92\x4b\x63\xc5\x49\x06\xf9\xff\x1f\x4a\xc5\xb4\xe9\xe1\x4b\xad\x5a\x47\xd6\x92\x17\xf0\x69\x8a\x5c\x54\x6f\x56\x9c\x22\x91\xe4\xb1\x98\x55\xc3\xc2\xab\x5f\xee\x6b\x8f\xf5\xe1\x7a\x0e\xab\x63\xa2\xd6\x78\x0e\xee\xdb\x8b\x1d\x50\x7f\x13\xc6\x82\x8a\x6a\xac\x60\x4f\xf6\x44\x94\x80\x3d\x12\xe8\x0a\x72\xe2\x15\xe0\x0e\x58\x65\x8f\xa4\x41\x25\x64\xde\x76\xdd\x0b\x4b\x71\x3f\xa4\x89\x73\x56\x1b\x07\x2d\x83\xcb\xe0\x99\x0b\xc0\x67\x02\xd8\xc8\x4e\xed\xf1\xe2\x4b\xcb\x2b\xb6\x13\x35\xb2\x85\x2f\xd4\xf7\xf9\xfa\x34\xa6\xbf\x28\xc9\x0d\xec\xd1\x08\x06\x22\x89\x94\x8e\xf3\x13\x3a\x98\x87\x41\xed\xa1\x38\x58\xa8\x7e\xf5\x7a\xc1\x36\xaa\x64\xa0\x70\xfd\x6a\x8a\xec\x13\x1e\xa8\xe3\xbf\x34\x34\x36\x4c\x30\x1e\x5b\x54\x99\x66\x34\xaa\x40\x89\x15\xf6\x3c\xba\xdc\xc4\xab\xb5\xfa\xe1\xfe\xae\x1d\xff\x08\x9f\x6a\x28\xa4\x40\x33\xb2\xd8\xdb\xaa\x51\xee\xa5\x1d\x58\x55\xa7\x03\x10\x4c\xb3\x0d\x75\xb3\xe2\x7d\x4e\xf1\xcb\x2b\x8d\x13\xa1\xe7\xc7\x58\x2d\x92\x43\x30\xa8\x78\xe9\x49\x2f\x03\x80\x66\x29\x47\x4b\xe3\x28\x4c\x53\x0f\x59\x3f\x13\x63\x3b\x71\x92\x74\xab\x9d\x9a\x99\x9b\x97\xde\xdd\x91\xa0\x21\x9a\xcf\x38\xef\xf0\x5a\x4e\x86\x22\x6d\x56\xfb\xdc\x48\x7f\xc2\x98\xe4\x03\x43\x43\x1c\x9e\x49\x9b\x56\xb4\x25\xf5\x5e\x36\xc8\xbf\x2d\x25\x7c\x39\x53\xf6\x68\xa8\xcd\x0b\xb0\x47\x61\x3a\xa2\xd2\x3b\xfc\xaf\x58\x73\x20\x7b\x8b\x42\xae\xba\xec\x92\x22\x76\xe9\xaf\xea\xa1\xb4\xbf\x51\x31\xa7\x5a\x3c\x4f\xf6\x92\x81\x68\x07\xc6\x04\x61\xa0\xf4\x74\x35\xba\xbd\x52\x92\x70\x26\x98\xed\xab\x67\x49\x90\xa9\xcc\x34\xca\xdb\x90\xad\xbe\x3d\x97\x44\x98\x25\xe2\x73\x56\xe6\xde\x43\x2a\x92\x43\x1e\xe8\x57\x48\xb5\x56\x6a\x82\x00\xf3\xf2\x8c\xcc\xcd\xdd\xa6\xc0\x52\x29\xbb\xf0\x0a\x5d\x94\xfb\x67\x94\x82\x8f\x0c\xbd\x63\x61\xff\x5e\x12\x09\x81\x65\xc6\xaa\x18\x6a\x27\x10\x69\x15\xe7\x81\x87\x4d\xa1\x90\xe4\xc6\x02\x4c\x53\x79\x76\x3f\x6a\xf0\x5f\x69\x67\x9b\x31\x38\xa7\xa8\x31\x26\x4b\xba\x88\x20\x0c\x9f\x36\xdb\xcd\xfb\xc7\xdd\xe3\x36\x0c\x07\x0d\x3a\xef\x95\x30\xdc\xec\x76\xdb\x5f\x7f\xfc\x73\xf7\x38\x62\xe0\xc7\xf8\xf1\xd1\x79\x5b\xa9\x4c\x4f\xcf\x1b\x29\xd5\x29\x9f\xcc\x38\x31\x89\x9a\x00\xfd\xeb\xa4\x7e\x9c\x9c\x54\xbb\xd2\xfa\x2f\x91\x1b\xcd\xd0\x35\xd5\xff\xdd\x24\xbb\xbc\x65\x78\x0b\xc8\xdc\x14\x81\x06\x10\xa4\x48\x3e\x55\x45\x9b\x83\xe6\x99\xfa\x92\x8d\x83\x69\xfa\xe6\xc6\xcd\x1b\x0d\x03\x5f\x69\x52\x9f\xd1\x03\x3a\x3e\xae\xf3\x14\x36\x6c\x06\x5d\x5b\x5f\x6e\x8a\x4e\x5b\xec\x50\xfc\xae\x76\xfd\xaf\xe8\x39\xf5\xd4\x6c\x29\x5e\xe3\xe7\xac\xe7\x48\x1f\xc3\x77\x0d\xb3\x11\x06\x76\x00\x7d\x37\xf4\x7e\x19\x06\xb1\x07\xe6\x12\x12\x73\x77\x99\x33\xd7\x21\x96\x9d\xc7\x59\x89\xa1\x46\x3e\x76\xa0\x1d\x49\x69\x40\xb4\x8f\xe2\x06\xc4\x46\x04\x2f\x39\x26\x1c\xa4\xda\xa3\x0c\x3b\x77\xde\xf4\xf9\x7e\xce\x6d\xe0\xc9\xdb\xc0\x96\x22\xd2\x94\x30\x32\x33\x8f\xe9\x0d\x5c\xff\x2d\x62\x80\x3a\x06\xc8\xe9\x4c\x1c\x44\xf1\x65\xad\x11\x5e\x3e\x72\xbc\xd2\xd9\x62\xf0\x39\x73\x1d\xd7\xe1\x2e\xd6\xb0\x9c\xdf\xc1\xee\x8a\xbf\x97\xbb\x7f\x02\x00\x00\xff\xff\xc0\x36\x42\x91\x6d\x16\x00\x00")

func regoSpecInBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecIn,
		"rego-spec.in",
	)
}

func regoSpecIn() (*asset, error) {
	bytes, err := regoSpecInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.in", size: 5741, mode: os.FileMode(420), modTime: time.Unix(1533236249, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x5b\x8f\xdc\xb6\x15\x7e\xf7\xaf\x38\x98\x18\x08\xd0\xee\x7a\xd3\x97\x02\xd9\x37\xa3\x36\x5a\x03\x4d\x60\x38\x41\x1f\xb2\xd8\x0c\x28\xe9\x68\x86\x59\x8a\x54\x48\x6a\x76\xb6\xc1\xfe\xf7\x82\xa4\xa8\xcb\xe8\x46\xcd\x68\x66\xd7\x45\xe6\x21\xb1\x29\xf2\xf0\xdc\xf9\x1d\x5e\xfc\xc7\x1b\x00\x80\xd5\x5b\x15\x6f\x31\x23\xab\x5b\x58\x6d\xb5\xce\x6f\x6f\x6e\x7e\x53\x82\x5f\xbb\xd6\x77\x42\x6e\x6e\x12\x49\x52\x7d\xfd\xdd\xdf\x6f\x5c\xdb\x37\xab\x2b\x37\x52\x53\xcd\xd0\x8c\xfb\x29\xc7\x98\xa6\x34\x26\x9a\x0a\xee\xbf\x26\xa8\x62\x49\x73\xdb\x74\x0b\xab\x2f\x98\x4b\x54\xc8\xb5\x02\xc2\x41\x44\xbf\x61\xac\xe1\x91\xea\x2d\x10\xc6\x80\x9a\x66\xad\x25\x8d\x0a\x8d\xa6\x47\x02\x12\x99\xa5\xa7\xaa\xe9\x9e\x72\x3b\x9b\x1b\xeb\x5b\x49\x92\x50\xd3\x8d\xb0\xcf\x52\xe4\x28\x35\x45\xb5\xba\x85\x94\x30\x85\x65\x17\x89\xbf\x17\x54\x62\xb2\xba\x85\x3b\xdb\x62\x5b\x33\x91\x20\x5b\xd9\xbf\xdf\x97\x1d\xf3\x26\x85\x3f\xea\xae\x35\x67\xad\x76\xa7\x3e\x89\xa9\xe1\xea\x9b\x9b\x04\x53\xca\x2d\x2f\xea\xa6\x31\xa2\xea\xfe\x7c\x55\x53\xac\x85\xeb\x10\xf4\x62\x12\x29\xc9\xd3\xea\xaa\xfd\xf1\x40\xa9\xff\xa6\x4a\x83\x48\x6b\x5d\x41\x84\xfa\x11\x91\x83\xde\x22\x48\xaf\x72\x4c\xbc\xc2\x8d\x62\x85\xde\xa2\x04\xc1\x51\xbd\x3b\x24\x4f\x35\x66\x5d\x96\x46\xe4\xf4\x13\xaf\x5a\x03\x9e\x7b\x65\x76\x0a\x0f\x54\x60\xc3\x3a\x35\xc5\xe7\xca\xb5\xaa\x8e\x6d\x43\x0d\x4c\x51\x39\xea\x0f\xf6\xfb\xb8\x4e\xff\x25\x58\xa2\x20\x22\x8a\xc6\x40\x79\x2a\x64\x66\x25\x34\x6a\xee\x57\x6a\x47\x8b\xbd\x8e\x5a\x7d\x9d\x76\xd8\x86\x97\xf4\x38\x6e\xf5\x35\x27\xf1\x03\xd9\xe0\x01\xfd\x72\xa0\xd2\x6b\x4e\xb2\xa1\x8f\xa2\x90\x31\x0e\x76\x40\xae\xa9\x7e\x1a\xfc\xdc\xd4\x57\xeb\xeb\xfd\xd5\x9b\x36\xff\x03\xf1\x54\xab\x82\x51\xa2\x06\x3e\x76\xa6\x6a\xb8\x7b\x39\x0e\xb4\xa8\xcd\x01\x04\x54\x33\x0d\x1d\x5a\xa5\xa2\x39\x16\x5f\x55\xa7\xe1\x40\xe8\xd0\x51\x5a\x52\xbe\x59\xf5\x76\x7c\xee\xb4\x3e\xf7\x28\xb4\xc8\x13\xa2\x71\x58\x0b\xe3\xa1\x47\xe2\xae\x25\x86\x66\x4a\x90\xe1\xa5\x66\x6a\x5a\x2e\xcc\xbc\x3f\x6f\x11\x1a\x4d\xe1\x11\x57\x11\x9c\xb2\x49\x1f\xa7\x4d\x6f\x0f\xe5\xf4\x1f\x24\x43\x76\x1d\x13\x85\x09\xec\x50\xaa\x16\xb7\x65\xe8\x2d\xcb\xe4\x5e\x23\x4f\xe6\x47\x4a\x44\x14\xb6\xe3\x02\xf4\x96\xaa\x83\xa6\x92\x3a\x7c\x55\x51\xb3\x41\x7d\x09\x47\xf6\x59\x76\x8e\x13\x1b\xf3\x7b\x7f\x28\xc7\x5f\xc8\x99\x73\x49\x77\xa3\xb9\xa4\x87\xdb\x1e\x98\x40\x15\x94\x94\x26\xb9\x8b\x84\x60\x48\x02\x95\xd9\x5e\x7a\xe6\x30\x99\xb3\x42\x12\x76\x99\x60\xab\x57\xcf\x39\x1c\x16\x9c\xfe\x5e\x94\xb6\xaf\x54\x4a\xf9\xc6\x32\x7a\x06\x53\x4b\x21\x46\x02\x20\xcc\xce\x24\x36\xb8\x5b\x39\x5d\x0a\xa1\x67\x2e\xa1\xb3\x6c\xbf\x23\x8c\x26\x03\xa0\x77\x88\xed\x1f\xcb\x40\x22\x10\x17\x4a\x8b\x0c\x6a\x22\x90\x4a\x91\x59\xc6\xd7\xcd\x46\xca\xd0\xc0\x02\x92\xe7\xec\xc9\xfc\xa1\x56\xfe\x2b\xcd\x6c\x01\xc0\x39\x27\x92\x64\xa8\x51\xf6\x55\x0b\x1e\xda\x7e\xf6\x9d\xe0\x27\xec\x60\xce\xc5\x10\xe9\x14\xa2\x6b\x20\xd6\x01\x0b\x77\x19\x56\xf0\xc5\x8d\xca\x6c\x75\xf8\x71\x6f\xdc\x54\x35\x2a\xbf\x0e\x8d\x03\x2f\xf9\x60\x52\x3c\xc2\xe3\x96\x68\x88\x45\x16\x51\x5e\x16\x43\x22\x85\x5a\x77\x40\xa4\x89\x01\xc7\xdf\xc5\xd6\xb9\x31\x3a\x81\xb4\x66\xd1\x9b\x41\x13\x42\xbd\xd6\xff\xba\xde\x3b\xfe\x25\x6c\x1d\x47\xae\xe5\x90\x3f\x41\xcb\x63\x3c\xa8\xa9\x3d\x27\xd8\x41\xcc\x5f\x23\xb4\xd9\x80\xf9\x22\x62\x47\x28\x23\x11\xc3\x86\x8f\x9c\xdf\x2d\x3a\xde\x3f\xe6\x1b\x43\x62\x10\x50\x94\x6f\x9a\x9c\x8f\x51\x19\x0d\xfe\x56\xcf\xf0\x44\xd0\x1a\x36\x5a\xa6\xb6\x7a\x0e\x94\x94\x83\x42\x4f\x74\xb5\x92\x0d\x76\xb9\x1f\x61\x79\x22\x8f\x75\x99\x0e\x0b\xa6\x6e\x32\xfe\x71\x5a\x62\x18\x59\xf8\x1c\x82\x2c\x89\x0d\x79\x67\x9b\x87\x39\x01\x3d\xc3\x14\xc7\x2a\xe0\x43\xb0\x39\x7b\xa6\x5c\x7d\xe8\x96\x83\x2f\xa7\x8e\x92\xd6\x71\x7a\xf8\xd9\x0c\x9e\xaf\x00\x03\xdc\xcc\xbc\xad\xb5\xec\x18\xc9\x03\x46\x20\x2f\xb2\xc9\x18\xae\x7a\x07\xd3\xb5\xbd\x29\xd7\xb8\x19\xcd\x53\xad\xee\x29\x13\x64\x2c\x55\xb5\x3a\x7b\x18\x1a\xd8\xdd\x8a\x19\xd8\x37\x29\x24\x09\x74\x5d\x70\x86\xcf\x46\x32\x92\xff\xdd\x9f\xe4\x86\x59\xc1\x34\xcd\xd9\xf1\xae\xf8\x83\x23\x40\x63\xaa\xa7\xa0\x04\x0c\xc2\x2d\x05\xf4\x20\x1e\x21\x26\x1c\x22\x04\xbb\x1b\xe7\x99\x04\xa3\x91\xc1\x75\xb5\xcd\xe9\x54\x55\xd1\xfc\x4d\x29\x89\x30\x26\x1e\x31\x59\xc7\x5b\x41\xe3\x80\x2c\x0f\x03\xba\xfa\x2c\x94\x32\x35\xc5\x7f\x08\x2b\x70\x08\x6f\xb4\x88\x1c\x68\xeb\x93\xd3\x92\x8d\x61\xaa\xc0\x38\xdf\x95\xc5\x20\xca\x1e\x7c\x58\x0d\x9a\x39\x0c\x10\xd9\x05\x4f\x32\x07\x0e\xc2\x3c\x48\x08\x73\xd3\x26\x8c\x42\x43\x08\x5a\x67\x52\x52\x30\xbd\xb6\xf2\x9f\xb0\xd2\x58\x2a\xce\x54\xc7\xf9\xb5\x1d\x6f\xb9\xe8\xac\x36\xc6\xdd\x45\x46\xb5\xc6\x64\x86\x81\xee\xbc\x85\x1a\x59\xaa\x91\x0c\x61\xc5\x0b\xc6\xdc\xff\xb3\xc8\xb5\x78\x98\x56\x29\xff\xb4\x6c\x81\x7b\x92\xe5\x0c\x4f\xd4\xed\x47\x47\xe5\x68\xdd\xfa\xf1\xfd\xba\x7d\x5d\x0a\x3d\xbd\xca\x09\xa8\xe9\xc7\x8e\x14\xc7\xab\xf5\x81\x9d\xde\x72\x67\x0c\x93\xc6\x39\x6a\xe7\x64\x6a\x4e\xa5\x4f\xb4\x46\xc9\x3f\x4f\x14\xfc\xbf\xee\xee\xbe\xbb\xfe\xfe\xfe\xaf\x6f\x47\xea\xb7\x90\xda\x69\xe8\xa4\xa7\x3e\x13\xa6\x1c\x88\x71\x19\x4d\xe3\x82\x11\xe9\x05\x7e\x07\x9f\x34\x3c\x52\xc6\xa0\x50\x68\x53\x6a\x63\x4c\xb5\x47\x94\x4b\xdc\x51\x51\x28\x3f\xca\x1d\x31\x93\x24\x01\x21\x41\xec\x50\x3e\x4a\xaa\x5d\x7d\x28\xcc\xda\x96\x60\xcc\xc8\xd8\x3e\xc1\x8c\x2d\x80\xe9\xba\x6b\xf4\xa8\xbc\x12\x67\xfe\x16\x32\x2c\x5f\x9d\xe9\x69\x18\x3b\x7c\x40\xd8\xfc\x8d\x55\x67\x47\xd6\xa1\x73\x8a\xba\x1a\x1f\x90\x9e\x6d\xb5\x49\xb1\xac\x95\x36\xb8\xcf\x41\x6f\x89\x3d\x7b\xb4\xa9\xa5\x61\xac\xac\x50\x1a\xb6\x82\x0b\x09\x5a\x18\x58\x64\x77\x29\x2f\x5d\xb2\x1c\x05\x83\x0e\x04\x7d\xef\x68\x94\xe8\x04\x52\x21\xbb\x6e\x69\xd0\xcd\xc7\x30\x5c\x7d\x69\xec\x12\x88\xdc\xcb\x7c\x67\x06\xfe\x7a\xf7\xfe\xfa\x97\xbf\x5d\x7f\x7f\x7f\x47\xae\xff\xfb\xfe\xfa\x17\x93\xe0\xfe\xf2\xf6\xdc\x20\x88\x14\x5a\x6c\x90\xa3\x24\x7a\x64\xff\xb4\x35\xa4\xa7\x56\xac\xcd\x42\x15\xb4\x48\x42\xf4\x64\xd3\x47\x44\xe2\x07\xe4\xb3\x3c\x71\x11\x44\x1e\x4b\xb4\xa5\xd4\x5a\x70\xf6\xb4\x80\x7c\xa6\xda\x30\xa4\x5c\xc9\xa1\x21\x29\x6c\x04\xda\x69\x10\x4c\x26\x08\xad\xdc\x96\x95\xd3\x83\x59\x21\x13\x94\x47\xcb\xd9\x02\x4a\x2d\xa3\x16\xca\xac\xf1\x66\x89\x72\x70\xd5\xce\x63\x24\x7f\xc0\xa0\x68\x3a\x8b\xb0\x33\xd0\x65\xef\xa1\x7f\x0f\xf2\xae\x84\x7e\x5d\xe8\x70\x52\x21\xb9\xc4\x78\xb9\x10\x6e\xd0\xbb\xbc\x6d\x67\xee\xfe\x85\x5d\xe7\x38\xc6\xae\x8b\xac\x85\x47\x54\x42\xa3\x55\x8c\x59\x08\xbf\x5e\x47\xc5\x7d\x2e\xd4\x52\x5e\x9a\x17\x11\xa3\x31\x7b\x02\x4f\xf5\x08\x5f\x0d\x2a\x2a\x6d\x9e\x30\xa3\xb4\x2c\x26\x36\xda\xa6\x14\x90\x52\xa6\x51\x92\x28\x74\x23\x6d\x72\x31\x8a\xd0\xe5\x66\xe3\x17\x8e\xb8\xc9\xca\x79\x21\x8d\x4a\x66\xed\xea\x2c\x12\xbe\xa9\x90\x48\x37\x7c\x6d\x96\x85\x65\xd0\x04\x94\x24\x5f\x64\xa5\xd9\xa0\xc1\x67\x0b\x48\x62\x6b\xc5\x2d\xd9\x21\x10\xa8\xc1\x51\x49\xfe\xd2\x52\xd1\x04\xb9\xa6\x29\x5d\x44\xb2\x06\x38\x20\x90\x11\xca\xa1\x41\xfe\x3c\x11\xe9\x2e\xbd\x7c\x2a\x01\xba\x09\xca\xd3\xd4\xc1\x13\xdc\x2f\xac\x09\x0e\x8e\xea\xa5\x4d\x9b\x91\xfd\x9a\x21\xdf\xe8\xed\xd1\x02\x65\x64\x4f\xb3\x22\x03\x47\xa6\x8b\x06\x7d\xe5\x15\x7e\xc4\xe3\x25\xf4\x2b\xcd\xc9\x12\x9e\x06\xfc\xbc\x80\x03\x68\xd7\xcb\x17\x7e\x78\xb4\xb0\x80\x94\x9f\x6c\x42\xca\x5f\xb5\x09\x29\x3f\xd5\x84\xa5\x80\xaf\xd4\x84\xe1\x87\xf7\x13\xf7\x38\x5f\x0c\xb6\x8a\x8c\xea\x35\x66\xb9\x3e\x6e\x19\xff\x94\xda\xb4\x7c\x75\x60\x97\x12\xb0\x24\x52\xe4\x39\x26\x40\x53\xb0\x53\x80\x90\xe0\xa0\xe7\x85\xb3\xa5\xad\x62\xcf\x04\xc6\xaa\x0a\xf9\xc5\xb0\x58\x2e\x69\x46\xe4\xd3\x72\x58\xcc\xad\x6e\x50\xd2\x7d\x11\x40\x26\x91\x24\x4b\xed\xe5\x50\x05\x86\x9c\xdd\xcf\x79\x01\x41\x26\xee\x2c\xce\x94\xa3\xa4\x76\x69\x31\x14\xc6\x72\xe4\x4a\xfc\x2c\x21\x1c\x2d\x7b\x46\xa2\xb6\xa2\x60\x89\xcd\x15\x48\x58\xf9\x64\x2f\x26\x72\x56\x1e\x5c\x48\xc0\xb3\x56\x00\xea\x65\x2a\x00\xa5\xc5\x62\xbe\x57\xd2\x3a\x77\xf1\x7d\x32\xcc\x57\x45\x14\x7e\x97\x6a\x64\x5d\xce\x48\x9e\xdb\x1b\xf6\x02\x72\x1a\x3f\xd8\x64\xff\xb8\x2d\x5f\x3f\xfa\x1b\x17\x0a\xb5\xe9\xf0\x2d\xee\x35\x4a\x4e\xd8\xb7\x17\xbf\x36\x26\x09\x57\x14\xf9\x42\xb1\x59\x93\xbb\xb4\xab\x9e\x64\x33\x7f\x89\xed\x14\x1c\xf5\xe7\x1d\x36\xdf\x7d\xce\x1d\x36\x46\x55\x30\x1b\x93\x67\xd5\xad\xde\xf6\xb6\x5b\x28\xc7\x65\xf8\x9d\xfb\x76\x5c\xc8\x33\x93\xd6\x80\xb3\x3c\x39\x39\xca\xcb\xbf\x92\xcb\x5c\x83\x5f\x97\xbc\x1f\x53\x3d\x2c\x1f\x7e\xf1\xf2\xc5\x77\x19\xbf\x20\x63\x8f\xaf\xed\x5b\xe1\xf2\x52\x07\x90\xea\xbd\x7c\xfd\x5c\xfe\x51\xb4\xdf\x3e\x75\xef\xce\x5c\xe8\x55\x77\xfd\xf8\xac\xf5\x6d\xf6\xdb\xea\xf9\x8f\xd8\xaa\x11\x8d\x5d\x44\x46\xf9\x83\xf7\x69\xab\xb4\xea\xce\xc9\x92\x4f\xd9\xdc\x99\xed\xff\xd7\x03\xe8\x0b\x3d\x4f\x3d\xd3\xdb\xf1\x19\x11\x5a\xd2\x98\x8e\x53\x78\x1f\x07\x84\x6b\xeb\xdf\x12\x71\x89\xd8\xcd\xe0\xfe\xec\x67\x7d\xa9\xf0\x1c\xfb\xc7\x0f\x5a\x1d\xa7\xe2\x33\xe8\x81\x7c\x57\x87\xd3\xcf\x29\x02\x9e\x50\x0c\x29\xb1\xa3\xcc\x39\x41\x1c\x70\xf2\xdd\x2b\x8f\x19\x45\xc7\xae\x6a\x74\xd0\x24\x32\x56\xdd\x3e\xaf\x32\x79\xc8\x59\xf9\x71\x0f\x57\x37\x4c\x44\x84\xad\x47\x5e\x61\x76\xe5\xfb\xa7\x1d\x03\xad\x37\x8e\x29\x4a\xe4\xf1\xe0\xee\x53\xf7\x7e\x59\x39\xc0\xe4\x5f\xc7\x43\xf3\x35\xa3\x0d\x67\x4c\x80\xba\x6a\xa7\xc1\x9e\x45\x24\xaf\xf4\xb5\x6b\x8f\x7a\x43\xf4\xda\x9f\xc5\x1a\x23\xc3\x33\xd8\x1b\xf7\xdf\xe7\x37\xff\x0b\x00\x00\xff\xff\x71\x2b\xfa\x53\xff\x48\x00\x00")

func regoSpecJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecJson,
		"rego-spec.json",
	)
}

func regoSpecJson() (*asset, error) {
	bytes, err := regoSpecJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.json", size: 18687, mode: os.FileMode(420), modTime: time.Unix(1533241780, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoTypeMappingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x6e\x9b\x40\x10\xc6\xef\x7e\x8a\x11\xa9\x54\xa9\x6a\x4c\x4f\x3d\xf8\x5e\xa9\x97\x4a\x3d\xf4\x56\xf5\x30\x66\x07\x98\x64\xd9\xdd\xce\x0e\x49\x69\xc5\xbb\x57\x0b\x36\x0e\x98\xd8\x91\xa2\xf8\x04\xf3\x87\x99\xfd\x7d\x9f\xf7\xdf\x06\x00\x20\x7b\x17\x8b\x9a\x1a\xcc\x76\x90\xd5\xaa\x61\x97\xe7\x77\xd1\xbb\xdb\x31\xba\xf5\x52\xe5\x46\xb0\xd4\xdb\x4f\x9f\xf3\x31\x76\x93\x7d\x1c\x3b\x95\xd5\x52\xea\xfb\xd1\x05\x82\x6f\x18\x02\xbb\x2a\x1e\xb3\x86\x62\x21\x1c\x94\xbd\x1b\x6a\x6a\x8e\x50\xb2\x25\xe0\x08\x6d\x24\x03\xea\xa1\xc1\x00\xf4\x47\x49\x1c\x5a\xd0\x2e\x50\x4c\x51\x8b\xae\x6a\xb1\x22\x88\x81\x0a\x2e\xb9\x88\xdb\x69\x64\x17\x86\x89\x7e\x7f\x47\x85\x1e\xa3\x68\x0c\xa7\x39\x68\xbf\x8b\x0f\x24\xca\x14\xb3\x1d\x94\x68\x23\x1d\x4a\x02\x6a\x1a\x33\xcb\x8f\x00\x86\xf4\xf6\xc3\xec\x7d\x04\x23\x54\xa6\x59\x37\xb9\xa1\x92\xdd\x30\x21\xe6\xc3\x06\x53\x61\x3f\x3c\xf5\xd3\x91\xa7\xba\xf9\xe7\x0f\x6b\x2f\x06\xcc\xf8\x1d\xce\x32\x25\xd7\xf0\xdd\x53\xf7\x94\x9e\x0a\xba\x68\x31\x95\x00\xba\x39\xc8\xf7\x11\x62\xbb\x4f\x4f\x50\x8a\x6f\x00\x27\x98\x43\xfd\x76\x39\x6e\x15\xec\x94\xbd\x0e\x78\x2a\xbd\x0c\xfa\x12\xf0\x2b\xe0\x9b\xd1\x5f\xd9\x59\x4f\xbf\x59\x7f\xeb\x4f\x9b\x65\xc7\xe6\xe7\x35\x38\xd8\xf7\xaa\x0c\x04\x05\x2a\x55\x5e\x4e\x52\xec\x3b\xa8\xc8\x91\xa0\x7a\x89\xc0\x0e\xbc\x18\x92\xa7\x0a\xd1\xd2\xe5\xec\x52\xb6\x26\x16\xf0\x8f\x0e\xb8\x09\x96\x1a\x72\xfa\xc6\xe2\x08\xfd\x6e\x59\xc8\x64\x3b\xf8\x79\xae\xc9\xdc\xda\xe9\xf7\x6b\x29\xee\x15\x55\x57\x7d\x7e\x89\xe5\x04\xc8\x0c\x60\x96\x27\x3f\x23\x10\x55\xd6\x3d\x70\xde\x97\x25\xe7\xbc\x78\x99\xaf\xfe\x31\x09\x36\xb8\x0d\x2d\xff\xa5\xa4\xce\x1b\xec\xd4\x04\x2f\x2f\xdf\xea\xcb\x03\x39\x6d\xd1\xc2\x49\x63\x18\x3f\x01\x5e\x20\x60\x71\x9f\xae\x49\xad\x51\x21\x88\x7f\x60\x93\x2e\xd0\x57\xef\xfd\xdc\xff\x69\xbc\xeb\x36\xfd\xe6\x7f\x00\x00\x00\xff\xff\x9a\x8a\x83\x1c\x3a\x06\x00\x00")

func regoTypeMappingJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoTypeMappingJson,
		"rego-type-mapping.json",
	)
}

func regoTypeMappingJson() (*asset, error) {
	bytes, err := regoTypeMappingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-type-mapping.json", size: 1594, mode: os.FileMode(420), modTime: time.Unix(1533236572, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoValidationMappingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x8e\xd3\x30\x10\xc6\xef\x7d\x8a\x51\x16\x09\x09\xed\x36\x9c\x38\xf4\xce\x11\xc4\x61\xc5\x05\x71\x98\xc6\xe3\xd4\xbb\xfe\xc7\x78\x52\xa8\x50\xde\x1d\x39\x69\x9d\x4d\xda\x6e\x11\x12\xa7\x3a\xfe\x66\x3c\xe3\xdf\x37\xf5\xef\x15\x00\x40\xf5\x26\x35\x3b\x72\x58\x6d\xa0\xda\x89\xc4\x4d\x5d\x3f\xa5\xe0\x1f\xc6\xdd\x75\xe0\xb6\x56\x8c\x5a\x1e\xde\x7f\xa8\xc7\xbd\xbb\xea\x7e\xcc\x14\x23\x96\x72\xde\x57\xb4\x46\xa1\x98\xe0\xe1\x13\xc6\x68\x7c\x7b\x0a\x51\x94\x1a\x36\x31\x4b\x39\xf0\x71\x67\x12\x68\x63\x09\x4c\x82\x2e\x91\x02\x09\xe0\x30\xc2\x7e\x3a\x41\x77\xbe\xc9\x8b\x94\x35\x8b\xbe\xed\xb0\x25\x48\x91\x1a\xa3\x4d\x93\xd6\xa5\xfa\x21\x0e\xc5\xc3\xf6\x89\x1a\x39\xed\xa2\x52\x26\x67\xa3\xfd\xc2\x21\x12\x8b\xa1\x54\x6d\x40\xa3\x4d\x74\x0c\x89\x28\x42\xec\x67\xfa\xc8\x62\x90\xd7\xef\x66\xdf\x23\x23\x26\x9d\x6b\xdd\xd5\x8a\xb4\xf1\x43\x85\x54\x0f\x1d\x94\xc0\x7e\x58\xf5\xe5\xe2\x25\x6e\x7e\xfc\xb1\xed\x45\x81\x82\xf2\x31\xcb\xf7\x73\xf1\x12\xc4\x67\x3a\xbc\x64\x28\x8c\x3e\xd9\x11\x20\x7a\xa0\x5f\xf9\x86\x68\x21\x57\x7b\x9b\x20\x75\xdb\xbc\x02\xcd\xc1\x01\x16\x98\x43\xfc\x7a\x59\xee\x22\xd8\xa2\xde\x06\x5c\x42\x5f\x07\xfd\x1a\xf0\x1b\xe0\xdd\x71\xc8\xce\x72\xfa\xd5\xe5\xaf\x7e\xea\xac\x3a\x25\x5f\xf7\x60\x3e\xc3\xd7\x6d\x20\x68\x50\xa8\x0d\x3c\x59\xb1\x3d\x40\x4b\x9e\x18\x25\x70\x02\xe3\x21\xb0\x22\x7e\xe9\x10\xcd\xcd\xc9\x41\x59\xdd\x91\x61\x08\x3f\x3d\x18\x17\x2d\x39\xf2\xf2\x9f\xcd\x61\xfa\xd1\x19\x26\x55\x6d\xe0\xdb\xb9\x27\x1e\x1d\xcd\xf1\x7e\x5f\x9a\x7b\xc3\xd5\xe1\x84\xab\xbe\x2e\x58\x7e\x46\x47\x10\x74\xc6\x50\xfe\xff\x19\x5a\x83\xd6\xe6\xdf\x48\xac\x03\xbb\x41\x9f\x9e\x8a\x25\x9c\x33\x48\x49\xf8\xf2\x98\x9c\xe7\x55\xc6\xc5\xc0\xf2\xd7\x1d\x7f\xdc\x93\x97\x0e\x2d\x4c\xc8\x61\x3c\x02\x02\x43\xc4\xe6\x39\xbf\x5a\xb2\x43\x81\xc8\x61\x6f\x14\xa5\x45\xf7\xe5\xa2\xff\x7e\x8d\x6b\xd3\x3e\xbe\x44\xab\x7e\xf5\x27\x00\x00\xff\xff\x75\x74\x59\xb0\xe3\x05\x00\x00")

func regoValidationMappingJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoValidationMappingJson,
		"rego-validation-mapping.json",
	)
}

func regoValidationMappingJson() (*asset, error) {
	bytes, err := regoValidationMappingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-validation-mapping.json", size: 1507, mode: os.FileMode(420), modTime: time.Unix(1533236565, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gen.sh": genSh,
	"rego-abstract.in": regoAbstractIn,
	"rego-abstract.json": regoAbstractJson,
	"rego-attribute.in": regoAttributeIn,
	"rego-info.json": regoInfoJson,
	"rego-param.in": regoParamIn,
	"rego-shared-params.in": regoSharedParamsIn,
	"rego-shared-params.json": regoSharedParamsJson,
	"rego-spec.in": regoSpecIn,
	"rego-spec.json": regoSpecJson,
	"rego-type-mapping.json": regoTypeMappingJson,
	"rego-validation-mapping.json": regoValidationMappingJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gen.sh": &bintree{genSh, map[string]*bintree{}},
	"rego-abstract.in": &bintree{regoAbstractIn, map[string]*bintree{}},
	"rego-abstract.json": &bintree{regoAbstractJson, map[string]*bintree{}},
	"rego-attribute.in": &bintree{regoAttributeIn, map[string]*bintree{}},
	"rego-info.json": &bintree{regoInfoJson, map[string]*bintree{}},
	"rego-param.in": &bintree{regoParamIn, map[string]*bintree{}},
	"rego-shared-params.in": &bintree{regoSharedParamsIn, map[string]*bintree{}},
	"rego-shared-params.json": &bintree{regoSharedParamsJson, map[string]*bintree{}},
	"rego-spec.in": &bintree{regoSpecIn, map[string]*bintree{}},
	"rego-spec.json": &bintree{regoSpecJson, map[string]*bintree{}},
	"rego-type-mapping.json": &bintree{regoTypeMappingJson, map[string]*bintree{}},
	"rego-validation-mapping.json": &bintree{regoValidationMappingJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

