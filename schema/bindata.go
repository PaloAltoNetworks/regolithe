// Code generated by go-bindata.
// sources:
// gen.sh
// rego-abstract.in
// rego-abstract.json
// rego-attribute.in
// rego-info.json
// rego-param.in
// rego-shared-params.in
// rego-shared-params.json
// rego-spec.in
// rego-spec.json
// rego-type-mapping.json
// rego-validation-mapping.json
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz) // #nosec
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _genSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc4\x20\x14\x84\xef\xfe\x8a\xd7\xb4\x60\x7b\x50\x7f\x40\xa0\x90\x42\x0e\x3d\x14\x4a\xb0\x67\x79\x1a\x6b\x6c\x1b\x15\xb5\xff\x7f\xd9\x6c\x58\xb2\x61\x2f\xcb\x1e\xdf\x0c\x33\xf3\xf1\x1e\x1f\x84\xf6\x41\x68\x2c\x13\x21\xc9\xe6\x3f\x60\xc9\x02\x2d\x42\xa9\x4e\xca\xe1\xfd\xed\x4b\xf6\x4a\x09\xda\x3c\x3d\x1b\xac\x90\xad\x8b\x0c\x6b\xcd\x5e\xff\x57\xcb\x7d\x78\x69\xa8\x70\x2d\x5d\x0d\x5d\x6a\x46\x53\xb9\x0f\xf0\xba\x93\x7e\x4a\x0c\xf7\x0c\x9c\x53\x9f\xdd\xd0\x7d\xf4\xb2\x1f\xf6\xa9\x84\x19\xe7\x3d\x52\x49\xd6\x6c\x70\x96\xf3\x0a\xca\x8d\xa5\x13\x66\x3b\x9e\xbc\xb2\x6d\xbf\xd0\x97\x19\x92\x67\x60\xdf\xc0\x8f\x5f\x1e\xb1\x22\x77\xb1\x25\x2e\xb2\xf5\x04\x96\x7e\x1d\x14\x33\xd9\x19\x81\x93\x43\x00\x00\x00\xff\xff\xfe\x7b\x84\xde\x8e\x01\x00\x00")

func genShBytes() ([]byte, error) {
	return bindataRead(
		_genSh,
		"gen.sh",
	)
}

func genSh() (*asset, error) {
	bytes, err := genShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen.sh", size: 398, mode: os.FileMode(493), modTime: time.Unix(1563338935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\x3d\x6f\xdc\x30\x0c\xdd\xfd\x2b\x08\xa7\xe3\x25\xee\xd4\xe1\xb6\x14\xed\x90\xad\x28\xae\xb3\x41\x5b\x54\xac\x40\x27\x19\x24\xdd\xf6\x50\xdc\x7f\x2f\x64\xdd\x87\xed\xb8\xbd\x00\x19\x45\xbe\xf7\xfc\x4c\xf2\xfd\x29\x00\x00\xca\x0f\xd2\x76\xb4\xc7\x72\x0b\x65\xa7\xda\x6f\xab\xea\x45\x62\xb8\xcf\xd5\x87\xc8\xcf\x95\x61\xb4\x7a\xff\xf1\x53\x95\x6b\x77\xe5\x26\x33\xd5\xa9\xa7\xc4\x7b\x6c\x44\x19\x5b\x3d\x37\x0c\x49\xcb\xae\x57\x17\xc3\xd8\x0e\x80\x27\x04\xa0\xf7\xf1\x97\x80\x46\x30\xd4\x7a\x64\x02\x04\x21\x85\x68\xa1\x41\x21\x40\x55\x76\xcd\xa0\x24\x80\xc1\x54\x91\x81\xc9\x63\x52\x12\xd0\x0e\x15\x5a\x0c\xd0\x10\x30\x0d\x42\x06\x5c\xd0\x08\x51\x3b\x62\x90\x9e\x5a\x67\x5d\x9b\xc1\x17\x8f\x87\x7e\xb4\x18\x9b\x17\xba\x1a\x44\x63\x5c\x82\xa1\xff\xc6\xb1\x27\x56\x47\x52\x6e\xc1\xa2\x17\xda\x14\x19\xd3\x4f\x3b\x79\x56\x99\x7b\x71\x38\xab\xe7\x59\x32\xd9\xf4\xb5\xbb\xca\x90\x75\x61\xfc\x86\x54\x13\xc6\x05\x7e\xdc\x5c\x15\x5d\x30\xf4\xfb\xed\x72\x67\xf8\xaa\x96\x21\x8b\x83\xd7\x3a\xb2\x21\x7e\xab\xe2\x9c\x74\xd5\x2d\x26\xea\xe5\x84\x30\x1f\xc8\x3f\xed\x5f\xee\xe3\xe9\x84\xd8\xcc\xfb\x8b\x33\xf9\x32\x3e\x1b\x4a\x8b\x26\x38\xa9\xa6\xc3\x48\xcf\xb4\xdd\x87\xa5\xc0\xff\xd7\x38\xf7\x72\xba\x03\x64\xc6\xc3\x52\xc7\x29\xed\x5f\xfb\xbf\xc9\xbb\xc1\x9d\xf1\x45\xd9\x85\xe7\xf2\x15\xe8\x58\xac\xbf\x26\x3b\xbd\xb9\xd4\x65\xdc\xce\xe7\x96\x03\x23\x5d\x1c\xbc\x49\x99\x19\x13\x93\xf2\x92\x64\x80\x49\x06\xaf\x02\xce\x42\x88\x0a\x7b\x0c\x03\x7a\x7f\x80\x9e\xe3\x4f\x67\xc8\x2c\x87\xf4\xde\x09\xae\x4d\x60\xf5\x7f\x97\x09\xab\xeb\xc7\xdd\xee\xfb\xd3\xe7\x1f\xbb\xaf\x75\xbd\x3c\xce\xe2\x58\xfc\x0d\x00\x00\xff\xff\x87\xdc\x4e\xd2\xc8\x04\x00\x00")

func regoAbstractInBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractIn,
		"rego-abstract.in",
	)
}

func regoAbstractIn() (*asset, error) {
	bytes, err := regoAbstractInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.in", size: 1224, mode: os.FileMode(420), modTime: time.Unix(1586279308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x5b\x6f\xdb\xb8\x12\x7e\xcf\xaf\x18\xb8\x05\x0a\x9c\x93\x4b\xcf\xcb\x01\x9a\xb7\x00\xed\x43\x80\x76\xb7\x58\xec\x53\x83\xd4\x18\x49\x23\x9b\x0d\x45\xb2\x43\x2a\xb1\x77\x91\xff\xbe\x20\x75\xb1\xe4\x9b\x64\x4b\x71\xba\xfb\xb0\x8d\xa5\x99\x8f\xfc\xe6\xc6\x21\xa9\xbf\xcf\x00\x00\x26\x6f\x6d\x3c\xa7\x0c\x27\xd7\x30\x99\x3b\x67\xae\xaf\xae\x7e\x58\xad\x2e\x8a\xa7\x97\x9a\x67\x57\x09\x63\xea\x2e\xde\xff\xff\xaa\x78\xf6\x66\x72\x5e\x68\x3a\xe1\x24\x79\xbd\x9b\xc8\x3a\xc6\xd8\x55\x2f\x12\xb2\x31\x0b\xe3\x84\x56\xe1\xb5\x02\x2c\x25\x00\xa5\xd4\x4f\x16\x9c\x86\x84\x62\x89\x4c\x80\x60\xc9\x81\x4e\x21\x42\x4b\x80\xce\xb1\x88\x72\x47\x16\x50\x25\x57\x9a\x81\x49\xa2\x47\xb2\xe0\xe6\xe8\x20\x46\x05\x11\x01\x53\x6e\x29\x01\xa1\x9c\x06\xed\xe6\xc4\x60\x0d\xc5\x22\x15\x71\x21\x5c\xcf\x71\x69\xc2\x14\x75\xf4\x83\x56\x13\xc4\x24\x11\x5e\x0c\xe5\x57\xd6\x86\xd8\x09\xb2\x93\x6b\x48\x51\x5a\x3a\x3f\x2b\x64\x4c\xf3\x4d\x61\xab\x42\xb7\x9e\x61\xeb\x79\x61\x4b\xa6\xd4\x8f\xf6\xe6\x2a\xa1\x54\xa8\x30\x86\xbd\x6a\x68\xd4\xe2\xcf\xe7\x2b\x44\xa1\x12\x5a\xf4\x87\xab\xc4\xb7\x62\x25\x94\x62\x2e\xdd\x54\x73\x42\xdc\x17\xb1\xad\xb4\xc2\x3d\x6b\xa0\x4f\x1a\x0a\x6d\x83\xec\x9c\x7e\x1d\x1f\xb7\xa5\xc4\x79\xfb\xfd\x5a\x98\x7c\x0c\x3f\x23\xf2\x8e\x26\x28\x51\x7d\x60\xf8\x9f\xde\xbb\x97\xeb\x00\xfb\xdd\xd8\x9e\x4b\x19\x07\xc8\x8c\xcb\x75\x1c\xe1\x28\xdb\x9c\x7f\xa7\x5e\x87\x6e\x4b\xdf\x3a\x16\x6a\x36\xd9\x10\x7a\x3e\xdb\xfe\xab\xe1\xd3\x4e\xa7\xae\xa7\x5b\x15\x6e\x45\xc2\xd8\xb9\xce\x65\xe2\x73\x26\x64\x8c\xcf\x17\x0f\x03\x4c\x36\x97\xce\x82\x48\x41\x69\x07\x19\xaa\x1c\xa5\x5c\x82\x61\xfd\x28\x12\x4a\xd6\x8d\x34\xd4\x82\xdb\x2c\xb0\x95\xef\xde\x0c\xdb\x9a\xcf\xbb\x2c\xf1\x59\xd8\x50\x59\x1e\x89\xad\xd0\x8a\x92\x46\x79\x19\x12\x4c\x06\x9d\x23\x56\x5f\xb7\x57\x88\x5a\xec\xfb\xe3\xdd\xfb\x8b\x0f\xf7\xff\x7d\xdb\x1d\x1e\xbb\xc2\x6b\x1f\xab\x46\xa9\x14\x0a\x10\x0c\xb2\x13\x71\x2e\x91\x2b\xc2\x97\x70\xeb\xe0\x49\x48\xe9\x5d\xef\x4b\x6f\x53\x27\x65\x9d\x85\xd4\x32\x4c\x8f\x42\xe7\xb6\xd2\x0a\x95\x17\x30\x49\x40\x33\xe8\x47\xe2\x27\x16\x21\x98\x08\xb4\x22\x5b\x15\xee\x64\xdd\x82\xf5\x7c\xf7\xa7\x44\xb7\x1b\xf7\x91\xff\x83\x0c\x93\x25\xe5\xfc\x2c\x57\x74\xaa\x32\xc1\xd5\x6b\x4a\xa0\xc0\xde\x35\xcb\x00\xce\xf4\x33\x17\x4c\xc9\xe4\x1a\xee\x76\x4a\x05\x49\x85\x19\xed\x41\x5a\x91\xea\x90\x69\xd2\xd9\x29\x79\xbf\x67\xca\xfd\xc3\xb4\xa5\xb6\x63\x35\xdb\x3e\x84\x5f\xa3\x29\x99\xc6\x73\xe4\x6e\xf1\x0d\x5a\xc1\x4b\x33\x5a\x98\xa2\xfe\x20\x14\x99\xdf\x70\x56\x96\x5b\x07\x73\xad\x34\xfb\x72\x14\x11\x3c\xa2\x14\xeb\x05\x67\xeb\x38\x5d\xe5\xb4\xf9\xdf\x73\x87\x2b\x5a\x34\xa7\x19\x59\x8b\x33\x3a\x8a\xee\x97\x42\x17\x68\x61\x24\x0a\xe5\xc9\x16\xc1\x18\xac\x50\xe5\x4b\xc8\xd2\x96\x69\x5f\x8d\xb0\x16\x71\x8f\x40\xd8\x46\xf5\xa6\xc0\xf0\x1e\xcb\x7d\x11\xd1\xbc\x99\x87\x4b\x43\xf0\x49\xe5\xd9\x21\xfc\xf6\x15\xc0\x96\x42\x77\x71\xd9\x8a\x5f\xda\xaf\x7b\x00\x68\x14\x78\xaf\xf8\xfd\xee\xe6\xe2\xdb\xff\x2e\x3e\xdc\xdf\xe1\xc5\x5f\x37\x17\xdf\x7c\x45\xff\xcf\xdb\xfd\x8e\x80\x8d\x85\x7d\xe3\x6d\x97\xab\x72\xa7\x67\xa4\x88\xd1\x85\xea\x74\xb8\xa3\xfe\x9c\x37\x9a\x69\x10\x16\x5a\x90\x10\x2d\x43\x88\x46\x18\x3f\x90\x3a\x28\xf5\x22\xad\x25\xe1\x9e\xea\xd5\x87\x5f\xcc\x14\xfa\xf4\xa9\x56\x72\x39\x02\x3f\xbf\x2b\xf0\x50\xbe\x98\xf8\xed\x44\x92\x87\x92\x13\x86\x21\xf0\xa5\x2f\x0c\x77\x72\x9e\x55\xe7\x16\xd2\xe5\x68\x9e\x25\x4a\x91\x74\xd5\x52\x57\x93\x3f\x80\xd4\x5d\x95\x67\x2b\x7a\xe7\xbe\x81\x77\x34\x23\xf6\x7f\xaa\x5c\xca\xe2\xdf\x2c\x2a\x9e\x54\x2b\x74\x9d\x42\xf7\x03\x0d\x62\x98\xe2\xf1\xa2\xba\x81\x77\x7a\xdf\x36\xa7\x76\xac\x67\xeb\x47\x43\xfc\x3a\xca\xf2\x40\x2a\xe6\xa5\x39\xd6\x33\x1f\xfd\xf6\x90\xfc\x6e\xa2\x45\xa2\x8c\xd9\xd5\x26\x64\x35\xca\xa9\xfd\x45\x0b\xcc\x8c\xa4\x01\xb9\xf8\xa9\x40\x28\x39\xf9\xb5\xef\xdf\x9b\x88\xb4\x30\xda\x8e\x95\x85\x26\x8f\xa4\x88\xe5\x12\x2a\xd4\x23\x7c\xdb\x43\xa5\xac\x83\x5e\xcb\x71\x4e\x83\xc2\xa1\xb6\xc0\x34\xb4\xf6\xc7\x98\xe1\x37\xcc\xca\x3d\x76\xd8\x63\x45\x54\xd1\xf7\x9d\xde\x93\xe0\x10\x22\x19\xba\x4b\xb8\x4d\x81\x32\xe3\x96\xe0\xc7\xf2\x06\xcb\x0f\x34\xd2\x28\xf9\xbd\x70\xa4\xec\xc6\xf9\x4d\x5f\xb6\xbf\x1b\xfc\x99\x13\x3c\xd0\xb2\x8c\x7f\x83\x82\xdb\x87\x72\xe1\x80\x21\x5a\x42\xac\x33\x23\x24\xf1\xc6\x26\x7b\x2f\xc7\x32\xc0\x07\x71\x4c\x85\x74\xc4\x18\xc9\xe3\x17\xdb\x76\x53\x51\xb1\xf2\xc9\x5e\x80\xfb\xbe\xc2\xe4\xec\x1d\x7d\x50\x07\x3f\x4a\x0d\x4b\x35\x93\x98\xa9\xe9\x03\x8d\xd1\x35\xf9\xae\x10\x4a\x48\xef\xd8\x93\xd3\x99\x91\xef\xb3\x47\x60\x12\x12\x70\x8e\x8f\x04\x08\xab\x26\xb7\x84\x3f\x35\x2b\x91\x90\x72\x22\x15\xa3\x30\x2b\x8b\x05\xa0\xf7\x55\x86\x42\x41\x03\xfe\x65\xca\x6c\xae\xc4\xcf\x9c\x6e\xcb\x8d\x96\xaf\xb4\x83\xcc\x91\xe1\x62\x2a\x49\xcd\xdc\xfc\x68\x73\x64\xb8\x10\x59\x9e\x41\x01\xb3\xd1\x29\xd5\xbb\xce\xde\xbb\xbc\xda\x2c\xd5\x92\x3b\x98\xe1\xb0\x0e\xbf\x22\xb8\xbd\xc3\xaf\xf9\xd5\x0d\xc2\xa9\x09\x0a\x35\xd8\x85\x42\xfd\xd2\x2e\x14\x6a\xa8\x0b\x4b\x82\xbf\xa8\x0b\x8f\xee\x72\x3c\xb7\xd0\xb6\xbc\xf6\xfe\x44\x67\xc2\x4d\x43\x1b\x75\x14\x8f\xdb\x34\x94\xb2\xf3\x35\xbf\x94\x8b\x7c\xc2\xda\x18\xdf\xb9\x55\x9d\x9a\x66\x28\x7a\xf0\x13\x2f\x1e\xe1\x72\xe6\x85\x1a\x98\x80\xfd\xaa\xfd\x8b\x61\x91\x21\x2f\xc7\xeb\x5f\x8a\xb5\x11\x4a\xdc\x57\x69\x62\x98\x30\x19\xeb\x1c\x4b\x58\xf0\x70\xe1\x2c\xeb\x15\x88\xd4\xb7\x21\xa3\xf0\x28\xd1\x4e\x4d\xc3\x52\xcc\xe4\xc6\x21\x51\x60\x85\x0b\xb1\xd5\x11\x46\x42\x28\xfd\x9e\xcf\xcd\x21\x46\x3e\xa8\x0e\x8e\x44\xf0\x45\xbb\x66\xfb\x3a\x5d\xb3\x15\x33\x35\x20\xf6\x76\x2c\xbb\x55\x89\x70\xba\x66\x08\x08\x7e\x2c\x74\x39\xd7\x0a\x9d\xf7\x90\x2f\xc4\xd9\xe9\xd1\xf2\xad\xc4\x7a\xe9\x93\x97\xc1\xdb\x01\x9b\x47\xe5\x04\x86\xf5\x22\x19\x1a\x13\x6e\xda\x34\x18\x11\x3f\x84\x05\xee\x69\x4e\x2a\xf8\xb3\x68\xb5\x6c\xb8\x0b\x70\x1a\xde\xd1\xc2\x11\x2b\x94\xef\x4e\xdd\xb4\x38\x46\x65\x05\xa9\x91\xea\xd1\x0a\xee\xd4\xa1\x3a\xc8\x67\xc1\x1d\xcd\x4f\x16\x8e\x70\x43\x0f\x0d\x52\x79\xd6\x79\x95\x5f\x4b\x1f\x76\x25\xd8\xbf\x6f\x0f\xe2\xa9\xd4\xd8\xc7\x49\x41\xb8\x7f\x22\x42\x4d\xb3\xa7\xac\x14\xb6\xf7\x34\x7a\x17\xc1\x20\xed\x44\xe7\x17\x11\xb5\x6c\x95\x7e\x7d\xe5\x99\xd2\x03\x44\x3f\x1f\xc0\x91\x29\xfd\x82\xa6\xfb\xfa\x76\xd8\xe1\x7a\xf8\x9e\x01\x37\xbf\x95\xdb\xa9\xb0\xed\x64\xd9\xe7\x0b\xc4\xb9\x75\x3a\x83\x15\xe0\xea\xbb\x9d\x69\xf3\xa1\x90\xe4\x0b\x1d\x1a\x23\x97\xfe\x8f\xa3\x77\x6a\x27\xba\x88\xef\x54\xea\xb8\x3f\xdf\xf9\x76\xfb\x9b\xcd\xa7\x3b\x3f\xbc\x3b\x2b\xfe\xff\x7c\xf6\x4f\x00\x00\x00\xff\xff\x0b\x0a\xa6\x50\x20\x2b\x00\x00")

func regoAbstractJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractJson,
		"rego-abstract.json",
	)
}

func regoAbstractJson() (*asset, error) {
	bytes, err := regoAbstractJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.json", size: 11040, mode: os.FileMode(420), modTime: time.Unix(1588805729, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAttributeIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\xdf\x6f\xdb\x36\x10\x7e\xef\x5f\x71\x30\x0a\x14\xd8\x9a\x62\x7b\x6c\xdf\x0a\xac\x0f\x01\xda\x6e\x18\xf6\xd4\x34\x35\x4e\xd2\xc9\xe6\x42\x91\xec\x91\x4c\xec\x0d\xf9\xdf\x07\x52\x3f\x2c\x25\xb1\x25\x4b\x8a\xdd\xf9\x25\x81\x74\x3c\xf1\xbb\xef\xee\xf8\x51\x14\xb4\x7e\x0b\xb7\x35\xb4\x78\x07\x0b\x9d\xfc\x4d\xa9\x5b\xbc\x7e\xd1\xb9\x9b\x91\x4d\x59\x18\x27\xb4\x0a\x46\x1f\x85\x75\xa0\x73\xb8\x25\xb6\x42\x2b\xca\x00\x9d\x63\x91\x78\x47\xf6\xcd\xc3\xb1\x98\x65\x22\x0c\x44\xf9\x07\x6b\x43\xec\x04\xd9\xc5\x3b\xc8\x51\x5a\x7a\x60\x6a\xd0\x39\x62\xd5\xb1\xfb\xb7\x63\x12\xcd\xbe\xdd\x5e\xfd\x72\xf1\xf6\xfa\xe7\xaf\x2f\x9f\xbc\xdf\xc1\x83\xcc\xb8\x7d\x30\xa5\x3e\x58\x3b\x30\x20\x14\x20\x18\x64\x27\x52\x2f\x91\x6b\xc4\x6f\xe0\xd2\xc1\x9d\x90\x12\xbc\x25\x40\x29\xdb\x63\x72\xd6\x05\xb8\x35\x81\x61\xba\x15\xda\xdb\x7a\x94\x05\x54\x19\x60\x96\x81\x66\xd0\xb7\xc4\x77\x2c\x1c\x45\x53\xad\xc8\x42\x46\xa9\x44\xa6\xec\x61\x08\x9b\xf9\x0a\x47\xc5\xd3\x31\x19\xc6\xe3\x21\xf0\x7f\x92\x61\xb2\xa4\x5c\x98\xe5\x0e\x4e\x88\x47\x98\x20\xd7\xb7\x29\x83\xd2\xf7\xbe\x59\x46\xe7\x4c\xdf\xbd\x60\xca\x16\xef\xe0\x6a\xaf\x55\xb4\x54\x58\xd0\x01\x4f\x3b\x50\x3d\x36\x6d\x38\x7b\x2d\xaf\x0f\x4c\x79\x78\x9e\x76\x86\x99\xc3\xc9\xda\x7d\x84\x94\xfa\x8e\xb2\x65\xba\x46\xee\x37\x7f\x04\x2b\xb2\xb4\xa2\x8d\x01\xb7\x46\x07\x08\xd6\xb1\x50\xab\x16\x59\x85\xb7\x0e\xd6\x5a\x69\x06\xa7\x21\x21\xb8\x45\x29\xb2\x9e\xd0\x41\x3b\x6f\x4a\x97\xfb\x23\x18\x7e\xf7\x3d\x54\x74\x60\x2e\x0b\xb2\x16\x57\x34\x0a\xee\xa7\x72\x2c\xd0\xc6\x48\x14\x2a\x80\x2d\x93\x31\x46\xa1\xae\x97\x58\xa5\x9d\xd0\x9e\x0d\xb0\x16\xe9\x80\x44\x78\x0a\xea\xfb\xd2\x47\x60\xcc\x87\x26\xa2\xf9\x71\x1d\x6e\x0d\xc1\x07\xe5\x8b\x63\xf0\x1d\x6a\x80\x9d\x01\xfd\xcd\xe5\x49\xff\x55\xfc\xfa\x1f\x00\xad\x0e\x1f\x06\x7e\xbb\x7a\x7f\xf1\xe5\xd7\x8b\xb7\xd7\x57\x78\xf1\xcf\xfb\x8b\x2f\xa1\xa5\xff\xf4\xf5\xe5\x61\x26\xc2\xef\x7e\x1a\x57\xde\xe9\x15\x29\x62\x74\xb1\x3d\x1d\xcf\xd4\x5f\x6b\x6a\xf1\x22\x2c\x74\x5c\x42\xb2\x8d\x39\x9a\x60\x7a\x43\xea\xa8\xda\x4b\xb4\x96\x84\x07\xda\xd7\x10\x7c\x29\x13\x86\x99\x2e\xb5\x92\xdb\x19\xf0\xa5\xa8\x20\xb8\x0a\xdd\xc4\x92\x83\xcc\xc7\x9e\x13\x1f\x43\x10\x7a\x5f\x7c\xdc\xc9\x71\x66\x94\xa3\x97\x6e\x19\xeb\x65\x34\xce\xca\x4b\x59\x75\xf5\x5a\xd7\x80\x3f\x02\xd4\x55\x5d\x68\x3b\x78\xaf\x61\x21\x94\xa3\x15\x71\xf8\x57\x79\x29\xcb\xbf\x45\x52\x5e\xa9\x97\xe8\xa6\x86\xae\x27\x06\xc4\x30\xa5\xf3\x65\x75\xcb\xdf\xe9\xb9\x6d\x4f\x6d\x2c\xb3\xcd\xa5\x29\xbc\xce\xb2\x3e\x90\x4a\x79\x6b\xc6\x32\xf3\x1b\xe5\x42\x11\x88\x07\x20\xaa\x9c\xb5\x6b\xed\x65\x16\xaa\x73\xf7\x94\x53\xf3\x45\x1b\x2c\x8c\xa4\x09\xb5\xf8\xa1\xf4\x50\x61\x0a\x8b\xdf\xff\xb7\x10\x69\x63\xb4\x9d\xab\x0a\x8d\x4f\xa4\x48\xe5\x16\x6a\xaf\x23\xb8\x1d\x30\xa4\xea\x83\x61\x94\x63\x4f\x93\xd2\xa1\x89\xc0\x32\x6a\xfb\x31\x61\xf8\x8c\x05\x95\x22\x37\x6e\xb2\x12\xaa\xe1\x07\xa9\x77\x27\x38\xa6\x48\x81\xee\x0d\x5c\xe6\x40\x85\x71\x5b\x08\xcf\x0a\x01\xf3\x47\x06\x69\x96\xfa\xde\x38\x52\x71\x87\x37\x0a\xed\xef\x06\xbf\x7b\x82\x1b\xda\x56\xf9\x6f\x50\xb0\x2d\xf1\x87\xe5\x37\xa1\x88\x2a\x28\x8b\x54\x17\x46\x48\xe2\x47\xdb\xec\x83\x18\xab\x04\x9f\x84\x31\x17\xd2\x11\x63\x22\xc7\x2f\xb6\x5d\x51\x51\xa3\x0a\xc5\x5e\x3a\x0f\xba\xc2\x78\x0e\x44\x1f\x25\xe1\x67\xe9\x61\xb9\x66\x12\x2b\xb5\xbc\xa1\x39\x54\x53\x50\x85\x50\xb9\x0c\xc4\x9e\x1c\xce\x8a\x82\xd0\x9e\x01\x49\x2c\xc0\x35\xde\x12\x20\xec\x44\x6e\xe5\xfe\xd4\xa8\x44\x46\xca\x89\x5c\xcc\x82\xac\x6a\x16\x80\x81\xab\x02\x85\x82\x96\xfb\xe7\x69\xb3\x5e\x89\xef\x9e\x2e\xab\x9d\x56\xe8\xb4\x93\xc2\x51\xe0\x66\x29\x49\xad\xdc\x7a\x74\x38\x0a\xdc\x88\xc2\x17\x50\xba\x79\xa4\x94\x9a\x6d\xe7\xe0\x6d\x5e\x13\x96\x7a\xc9\x9d\x8c\x70\x9a\xc2\xaf\x01\x3e\xad\xf0\x1b\x7c\x8d\x40\x38\x35\x40\xa1\x26\x53\x28\xd4\x0f\x4d\xa1\x50\x53\x29\xac\x00\xfe\xa0\x14\x8e\x56\x39\x01\x5b\x94\x2d\xe7\xde\x9f\xe8\x42\xb8\x65\x94\x51\xa3\x70\x5c\xe6\xb1\x95\xbd\x7e\xc0\x4b\xb5\xc8\x67\xac\x8d\x09\xca\xad\x56\x6a\x9a\xa1\xd4\xe0\x27\x5e\x3c\x34\x67\xcf\x26\x60\xa2\xef\xb3\xea\x17\xc3\xa2\x40\xde\xce\xa7\x5f\xca\xb5\x11\x2a\xbf\x67\x11\x31\x4c\x98\xcd\xf5\x1e\x4b\x58\x08\xee\xe2\xbb\xac\x33\x00\x69\x8e\x43\x66\xc1\x51\x79\x3b\x35\x0c\x4b\x29\x93\x9b\x07\x44\xe9\x2b\x9e\x88\xed\x5e\x61\x64\x84\x32\xec\xf9\xdc\x1a\x52\xe4\xa3\xfa\xe0\x4c\x00\x9f\x55\x35\xdb\xf3\xa8\x66\x2b\x56\x6a\x42\xee\xed\x59\x76\xeb\x16\xe1\x74\x83\x10\x10\xc2\xb3\xd0\x79\x6e\x06\xf4\x1e\x44\x3e\x13\x66\xa7\x67\xab\xb7\xca\xd7\x73\xbf\x79\x99\xbc\x1d\xb0\x3e\xa9\x26\x30\x4d\x8b\x14\x68\x4c\x3c\x6a\xd3\x60\x44\x7a\x13\x17\xb8\xbb\x35\xa9\xc8\x67\x29\xb5\x6c\x3c\x0b\x70\x1a\x5e\xd1\xc6\x11\x2b\x94\xaf\x4e\x2d\x5a\x1c\xa3\xb2\x82\xd4\x4c\xfd\x68\xe7\xee\xd4\xa9\x3a\x89\xb3\x48\x47\xfb\x9b\x85\x11\x34\x0c\x18\x41\xca\x17\xbd\x67\xf9\x8d\xf5\x71\x67\x82\xc3\x75\x7b\x34\xcf\xa5\xc6\x21\x24\x45\xe3\xe1\x85\x08\x0d\xcc\x81\xb6\x52\xd8\xc1\xd3\x18\xdc\x04\xa3\xb5\x13\xbd\x9f\x44\x34\xb6\x75\xf9\x0d\xb5\x67\xca\x8f\x30\xfd\x78\x04\x46\xa6\xfc\x13\x9a\xfe\xe3\xdb\x69\x2f\xd7\xe3\x07\x0d\xf1\xc4\x71\xdc\xbb\xd6\xcf\x55\x8f\x43\x48\xbd\x75\xba\x80\x9d\xc3\xdd\x87\x3b\xcb\xf6\x45\x21\x29\x34\x3a\x34\x46\x6e\xc3\x3f\xa3\x77\x6a\x27\x3a\x89\xef\x1d\xd4\x73\x7e\xbe\xf7\xee\xd3\x77\x1e\x5f\xed\x5e\xb9\x7f\xf1\x5f\x00\x00\x00\xff\xff\x61\xda\x30\x24\x68\x26\x00\x00")

func regoAttributeInBytes() ([]byte, error) {
	return bindataRead(
		_regoAttributeIn,
		"rego-attribute.in",
	)
}

func regoAttributeIn() (*asset, error) {
	bytes, err := regoAttributeInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-attribute.in", size: 9832, mode: os.FileMode(420), modTime: time.Unix(1588804829, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoInfoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xbd\x4e\xc3\x40\x0c\xc7\xf7\x3c\x85\x75\x30\xb6\x0d\x13\x43\x36\xc6\x0e\xa0\x4e\x2c\x88\xc1\x4d\x7c\xad\xab\x34\x77\xd8\x0e\x02\x55\x7d\x77\x74\xb9\xa6\x4a\x3f\x36\x96\x44\xf9\xd9\xff\x8f\xf8\x50\x00\x00\xb8\x47\xad\xb7\xb4\x47\x57\x81\xdb\x9a\xc5\xaa\x2c\x77\x1a\xba\x79\xa6\x8b\x20\x9b\xb2\x11\xf4\x36\x7f\x7a\x2e\x33\x7b\x70\xb3\xac\x34\xb6\x96\x92\x6e\xd9\xf9\x30\xc2\x86\xb4\x16\x8e\xc6\xa1\x4b\xa3\x57\x32\x04\xee\x7c\x90\x3d\x26\x06\xb8\x0e\xbd\x01\x82\x92\x41\xf0\xa0\x91\x6a\xf6\x5c\x0f\x43\x5d\x9c\xad\x7f\xe3\xe0\x1c\xd6\x3b\xaa\x6d\xa4\xd8\x34\x9c\xf6\xb0\x5d\x49\x88\x24\xc6\xa4\xae\x02\x8f\xad\xd2\x69\x45\xe8\xab\x67\xa1\xc6\x55\xf0\x31\x90\x81\x46\x21\xcf\x3f\x27\x9b\xbc\x17\x82\x4d\xbf\xbf\x49\x34\x55\x1e\xc8\xe7\xac\x28\x4e\xba\x49\xcc\xe1\xc6\x6f\xca\x2e\x6a\xab\x09\x77\x9b\x89\xff\xbd\xd3\xac\x06\x13\xb0\x00\xbd\x52\x7a\xd5\xd8\xb6\x80\x91\xd5\x9d\x75\xc7\xeb\xca\xff\x8b\x7c\xc3\x3d\xa5\xab\xdb\x96\x20\xd9\x5d\x9e\xff\x56\xec\xb1\x6f\x53\x66\xce\xbe\xdb\x6a\x3c\xdc\x4d\xb1\xab\xe8\xf7\xbc\x37\xa6\xbf\xac\x96\xd7\x71\xe3\x9f\x70\x67\xb4\x21\x99\xc4\x15\xf9\x79\x2c\xfe\x02\x00\x00\xff\xff\xb8\x06\xde\x01\xb3\x02\x00\x00")

func regoInfoJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoInfoJson,
		"rego-info.json",
	)
}

func regoInfoJson() (*asset, error) {
	bytes, err := regoInfoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-info.json", size: 691, mode: os.FileMode(420), modTime: time.Unix(1563338935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoParamIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xcb\x6e\xdc\x3a\x0c\xdd\xe7\x2b\x08\xaf\x83\xfb\x01\x59\x27\x8b\x0b\xb4\xc5\xa0\x0d\xba\x09\x82\x80\xb6\x39\x33\x2c\xf4\x70\x25\x39\x0f\x14\xf9\xf7\x42\xf6\x78\x62\x8d\x2d\x5b\xb6\x51\xb4\xde\x0c\x6c\x91\x47\xd4\xe1\x21\xc5\x81\xde\x93\x39\x76\x82\xb2\x1b\xc8\x76\x68\x50\x92\x23\x03\xdf\xc8\x65\xd7\x57\xa1\xd5\x5b\xd5\x18\xe9\xfc\x07\x15\x83\x55\x2c\x4b\x76\xac\x15\x8a\x9d\xd1\x15\x19\xc7\x64\xb3\x1b\xd8\xa3\xb0\x74\x61\x5a\xf5\x0d\x7e\x05\x6b\xcd\xba\xa1\x9f\x35\x1b\x2a\x47\x57\x23\x01\x5b\xf8\xda\x7a\x49\x52\xce\xc2\xdd\x6b\x65\xc8\x5a\xd6\xca\x5e\x04\x7a\xc6\x28\xc9\x16\x86\x2b\x1f\xb3\x47\xba\xa5\x3d\x2b\x82\x97\x23\x3a\x28\xb4\xcc\x59\xa1\x5f\xb2\xa0\xf7\x50\x7d\xec\x82\x86\xa0\x8b\xef\xbf\x18\x74\xc7\x14\x1a\x83\x6f\x31\x23\x76\x24\xc7\x09\x58\x84\x93\x88\xb5\x08\x6f\x01\x66\x80\x6b\x9d\x61\x75\xc8\x26\x1d\xde\xa3\xab\xe3\x2b\xc3\xaf\xef\xc3\xc0\x33\x52\xce\xc4\xf4\x04\x81\x62\x3e\xb1\x75\x3e\xa7\x1f\xca\x49\x16\x88\x7f\xcd\x09\xdc\x91\x40\x9c\x50\xf0\x19\x59\x60\x2e\xa8\xa7\x91\x3f\x2f\x8b\x81\xfa\xa7\xb4\x11\x3b\x06\x82\x65\x75\xe8\x47\x3e\x85\x32\x59\xfc\x81\x65\x7a\x23\x08\xdc\x7a\x45\xff\x30\x2d\x4c\x85\x92\xe6\xc4\xdb\x3f\xf4\x8c\x69\x73\xb2\xa8\xc9\xe3\x44\xc8\x33\x7d\x6c\x18\x74\x5a\x31\x0d\x9b\xf1\x97\xf9\x13\xc3\x48\xaa\xbd\x9b\x17\xa9\x17\xec\x39\xc9\x31\x75\x86\x31\x2c\x29\xe8\x05\xa9\x58\x4b\xc0\x6d\x72\x3a\x47\xb6\xcc\x7a\xde\x7f\x9f\x8e\x13\xd6\x3a\x1e\xee\xbd\xf3\x72\x02\xee\x8f\x04\x7e\xdf\xe0\x2e\x5b\x73\xf2\x04\x0f\x52\xb5\x9c\xad\xe1\xb3\x75\x32\x6e\x63\xcd\xca\xd1\x61\xb2\x4f\x05\xe6\x7b\xa1\x71\xaa\x55\x05\xc6\xb9\xd6\x82\x30\x45\x5e\x70\x3e\x66\xa2\x6d\x59\x1b\x4c\x94\x2e\xb4\x89\x97\x13\x1d\xa9\x7b\x1e\x37\xc9\x50\xd6\xc2\x71\x25\xd6\x4b\xf1\x73\x0b\xc0\x05\xbb\xb9\x51\x02\xa2\xe3\x96\x05\xbe\xa8\x47\x28\x50\x41\x4e\x60\x49\x39\xe8\x82\x04\xcf\x48\xf4\x5e\x0d\x23\x3d\x09\xb6\x4b\xe7\x26\x92\x50\x08\xfd\x42\xe5\x53\x71\xd4\x5c\x24\x74\x79\x88\x70\xb5\xd3\xd6\xb2\x20\xf8\x8e\xa2\xa6\xd8\xbc\x11\x80\x5c\xb0\xf5\x7f\xcb\x52\x53\xc3\x6c\xc1\x8b\xef\xba\x99\x41\x2c\xa0\x10\x2d\x83\x7e\x0f\x3f\x88\x3c\x27\x6f\xb2\x64\x1c\x84\x65\x23\x21\x2c\x6d\x9b\x30\x39\x1a\x42\xd2\x3d\xb3\xc7\x5a\xb8\xa7\xe6\xfc\x1b\x6e\x9a\x06\xa5\x4d\xd5\x3a\x5d\x37\xfe\x4d\x14\x83\xdb\xc6\xcb\x5d\x4b\x76\x8e\xca\x05\x09\x7a\xe8\x32\xd4\xeb\x52\xbd\x66\x08\x99\xaa\x85\x68\x7f\x65\xde\x7e\xe9\xc6\xb4\x33\xf9\xdb\xba\x05\xbd\xa2\xac\x04\x6d\xe4\xf6\xae\x45\x59\xcd\x6d\xe7\x3f\xce\xed\xbf\x45\xe8\xf6\x7f\x39\x57\xe1\xdb\xef\x00\x00\x00\xff\xff\x76\x36\xe8\x20\xb1\x0f\x00\x00")

func regoParamInBytes() ([]byte, error) {
	return bindataRead(
		_regoParamIn,
		"rego-param.in",
	)
}

func regoParamIn() (*asset, error) {
	bytes, err := regoParamInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-param.in", size: 4017, mode: os.FileMode(420), modTime: time.Unix(1563338935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x31\x6f\xc2\x30\x10\x85\x77\x7e\xc5\xc9\x74\xaa\x0a\xee\xd4\x81\x8d\x81\xb1\x12\xa2\xec\x91\xb1\x9f\x6b\xa3\x60\x5b\xe7\x5b\x50\x95\xff\x5e\x39\x29\x69\xd3\x2d\x79\xf7\xbd\x7b\xe7\xf7\xb5\x22\x22\x52\x4f\xd5\x06\xdc\x8c\xda\x91\x0a\x22\x65\xa7\xf5\xb5\xe6\xb4\x99\xd4\x6d\xe6\x4f\xed\xd8\x78\xd9\xbc\xbe\xe9\x49\x5b\xab\x97\xc9\x29\x51\x7a\x34\xdf\x47\x30\x0c\x47\x47\xc3\xe6\x06\x01\xd7\x07\xe1\x50\x2d\xc7\x22\x31\xa7\xc6\x9d\x03\xa8\xcc\x10\x39\xf8\x98\xe0\x28\x80\x41\xd6\x24\xba\x80\x18\x1e\x0c\x8b\x64\xe1\xe8\x72\xa7\x2c\x01\x4c\xb5\xc0\x46\x1f\xad\x69\x9b\xea\x76\x3e\xe0\x5e\xc6\xfc\x7c\xb9\xc2\xca\x43\x35\xce\xc5\xc6\x99\xfe\xc8\xb9\x80\x25\xa2\xaa\x1d\x79\xd3\x57\xfc\x20\xc5\x88\x80\xd3\x62\x3e\xd5\x31\x8e\xb7\xcf\x8b\xff\xa9\x26\x86\x6f\x59\x6b\x3d\x9e\x3d\x26\x54\xfd\xfb\x1a\x35\xe3\xc3\xf8\x35\xcc\x15\xcc\xf4\x32\xe4\x8f\xb5\xe9\x5d\x77\xdc\x9f\xf6\xef\x87\xf3\xe1\xd4\x75\xff\x77\xad\x86\xd5\x77\x00\x00\x00\xff\xff\xc9\x23\xe7\x9b\xae\x01\x00\x00")

func regoSharedParamsInBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsIn,
		"rego-shared-params.in",
	)
}

func regoSharedParamsIn() (*asset, error) {
	bytes, err := regoSharedParamsInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.in", size: 430, mode: os.FileMode(420), modTime: time.Unix(1563338935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x6f\xdc\x38\x0c\xbd\xcf\xaf\x20\x9c\x3d\x2d\x92\x99\x3d\xed\x21\xe7\xe4\x50\xa0\x2d\x82\x26\xe8\x25\x08\x02\xda\xa6\xc7\x0a\x64\xc9\x95\x38\xf9\x40\x31\xff\xbd\x90\x34\x76\xec\xf8\x7b\x06\x45\xdb\x4b\x63\xe9\x91\x22\x1f\x9f\x28\xce\xcf\x15\x00\x40\xf4\x8f\x4d\x72\x2a\x30\xba\x84\x28\x67\x2e\x2f\x37\x9b\x27\xab\xd5\x45\x58\x5d\x6b\xb3\xdd\xa4\x06\x33\xbe\xf8\xef\xff\x4d\x58\x3b\x8b\xce\x83\x25\x0b\x96\xe4\xec\x6e\x73\x34\x94\xc2\x0d\x1a\x2c\x88\xc9\xd8\x0a\x91\x92\x4d\x8c\x28\x59\x68\xe5\x70\x77\x39\x41\x59\x83\x20\xa5\x4c\x28\x4a\x21\x27\x43\x90\xa0\x82\x98\xc0\x50\x46\x86\x12\x52\x09\xa5\x10\xbf\x81\xe6\x9c\x0c\xd8\x92\x12\x91\x89\x04\x9d\x27\xbb\xae\x03\x78\x2b\xfd\xf9\x3a\x7e\xa2\x84\xab\x55\x4c\x53\xe1\x70\x28\x6f\x8c\x2e\xc9\xb0\x20\x1b\x5d\x42\x86\xd2\xd2\x01\x52\x22\x33\x19\xd5\xda\x0f\x74\xf8\xed\xf5\xbf\xad\xef\x40\x93\xa1\xcc\x9d\x75\xb6\xf1\x61\xfb\x13\xec\xe6\x3d\x9b\xa8\x86\xef\xfd\x5f\xfb\x9a\x82\x1a\xdd\x3e\xa4\x61\xda\x39\xac\x66\xb6\xa6\x14\x6e\xa9\x4a\xf0\x1d\xd5\x97\x7e\xbd\x3b\x4d\xc3\x7b\x28\xfd\x3c\xd4\xfb\x86\x7e\xec\x84\xa1\xb4\x77\x77\x20\x60\x0b\xdf\x82\x55\x41\x8a\x2d\x5c\xbf\x96\x86\xac\xf5\x34\x9c\xf7\xfb\xf8\x20\x96\x2b\xaf\x0e\x78\xc9\x91\x21\xd1\x45\x2c\x54\xa8\x3e\xe8\xac\x29\x22\x34\x4e\x34\x21\xbe\xf5\x90\xeb\x8a\x29\x34\x06\xdf\x86\x40\x82\xa9\xe8\x27\x60\x91\x9f\x99\xbe\x16\xf9\x5b\xe0\xb3\xe5\xd7\xb2\x11\x6a\x1b\x8d\x1a\xec\x07\x77\xfb\x77\xba\xab\xfb\x6e\xe0\x11\x29\x36\x43\x7a\x82\x96\x62\x3e\x0b\xcb\xae\xa6\x9d\xee\xd1\x31\xe9\x08\xc4\x7d\xc6\x04\x9c\x13\xc8\x83\x17\x7c\x46\x21\x31\x96\xcd\x46\xf3\xfb\x65\xd1\x51\xff\x98\x36\x86\xd2\x40\xb0\x42\x6d\x9b\x91\x8f\x79\x19\xbd\xfc\x2d\xe4\xfc\x46\xd0\x32\x6b\x5c\xfa\xfb\x71\x61\x2a\x2c\x68\x4a\xbc\xcd\xa4\x27\xa0\x3e\xb3\x41\xc8\xc3\x48\xc8\x13\x7d\xac\x1b\xf4\xbc\xcb\xd4\x6d\xc6\x5f\xa7\x33\x86\x9e\x52\x3b\x33\x27\x52\x6e\xbe\x83\x43\xea\x6c\xc7\xb0\xe4\x42\x2f\x28\xc5\xb1\x04\x5c\xcd\x2e\x67\xcf\x91\x51\xc3\xfa\xcf\xd3\x71\xf0\x75\x1c\x0f\x77\xce\x78\x39\x01\x6e\x10\x72\xe7\xb6\xde\xb2\x63\x32\x9f\x61\x41\x6a\x57\x4c\xde\xe1\x1a\x3d\xdb\xaf\x47\x0b\xc5\xb4\x1d\xed\x53\x2d\x78\x26\x35\x8e\xb5\xaa\x16\x38\xd6\x5a\x12\xce\x91\x17\xd4\x69\xce\xc4\xa6\x3b\x83\x33\xa5\x0b\xa1\xf0\xc5\x48\x47\xaa\xfe\x3d\x9c\x24\xc3\x62\x27\x59\x94\xf2\x78\x29\x7e\x09\x0e\x44\x22\x78\x6a\x94\x80\xc1\x71\xcb\x82\xf8\x70\x1f\xab\xc1\xdc\x92\x62\xa8\x82\x04\xc7\xc8\xe0\xbb\xda\x8e\xf4\x20\xd8\xaa\x9c\x27\x91\x84\x52\xea\x17\x4a\x1f\x93\x5c\x8b\x64\x46\x97\x87\x01\xae\x6e\xb4\xb5\x42\x12\x7c\x47\xb9\xa3\xa1\x79\xa3\xe5\xe4\x03\x5b\x9f\x02\x4b\xfe\x0e\x0b\x0b\x4e\x7c\xe7\x7e\x06\xb1\x80\x52\x06\x06\xdd\x19\x6e\x10\x79\x9e\x7d\xc8\x92\x71\x10\x96\x8d\x84\xb0\xb4\x6d\xc2\xe8\x68\x08\xb3\xde\x99\x0c\x77\x92\x1f\x7d\xfe\x27\xbc\x34\xde\x4b\x28\xd5\x71\xba\xf6\xf6\x3e\x8a\xce\x6b\xe3\xe4\xae\x0b\xc1\x4c\xe9\x82\x02\xdd\x57\x15\x6a\x74\xa9\x46\x33\x84\x48\xed\xa4\x0c\xff\x17\x71\x58\xa9\xc6\xb4\x9a\xfc\xd3\xba\x05\xbd\x62\x51\x4a\x3a\x91\xdb\xeb\xe0\xe5\x68\x6e\x2b\xfb\x7e\x6e\xff\x2e\x42\x4f\xff\x95\xb3\xea\xff\x3a\xfc\xdc\x5f\xed\x57\xbf\x02\x00\x00\xff\xff\xa9\xb8\x42\xf1\x51\x11\x00\x00")

func regoSharedParamsJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsJson,
		"rego-shared-params.json",
	)
}

func regoSharedParamsJson() (*asset, error) {
	bytes, err := regoSharedParamsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.json", size: 4433, mode: os.FileMode(420), modTime: time.Unix(1588805729, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\x0c\xbc\xef\x31\x59\xbf\xa7\x1e\x72\x73\x9b\xa0\x0d\xd0\x6d\x03\xd7\x3d\x15\x0b\x63\x2c\x8e\x6c\x6e\x28\x92\x4b\x52\xce\x1a\x8b\xfc\xf7\x42\x94\x44\x7d\xcb\x52\x37\xeb\x22\xbd\x04\x16\xc9\x19\x3e\x9c\x99\x67\x86\xc3\x7c\xbd\x02\x00\x58\xfc\xcf\x46\x07\x4a\x70\x71\x0b\x8b\x83\x73\xfa\x76\xb9\xfc\x64\x95\xbc\xc9\x47\xdf\x2b\xb3\x5f\x32\x83\xb1\xbb\xf9\xff\x0f\xcb\x7c\xec\xdd\xe2\x3a\x97\x74\xdc\x09\xca\xe4\xfe\xd0\x14\xf1\x98\x47\xe8\xb8\x92\xe5\x2c\x23\x1b\x19\xae\xfd\xd0\x2d\x2c\xd6\xa4\x0d\x59\x92\xce\x02\x4a\x50\xbb\x4f\x14\x39\x78\xe6\xee\x00\x28\x04\xf0\x6c\xd8\x39\xc3\x77\xa9\xa3\x6c\x05\x03\x43\xc2\xeb\xb3\x61\xbb\x93\xf6\xbb\xe5\xb2\xe5\x28\x32\xc6\xb3\x65\x28\x1e\x8d\xd2\x64\x1c\x27\xbb\xb8\x85\x18\x85\xa5\x62\x89\xa1\xcf\x29\x37\xc4\x16\xb7\xf0\x97\x1f\xf1\xa3\x89\x62\x24\x16\xfe\xfb\x63\xb1\x50\xd7\x35\x7c\xad\x96\x56\xc8\x1a\xe3\xb9\xf9\x0c\xc5\x19\xaa\x77\x4b\x46\x31\x97\x1e\x8b\x5d\xd6\x24\xc2\xf2\x97\xeb\x4a\x63\x75\xb8\x8e\xc2\xf2\x98\x68\x0c\x9e\x16\xd7\xcd\xc9\x96\x51\x7f\xe5\xd6\x81\x8a\x2b\x5b\xc1\x8e\xdc\x33\x91\x04\x77\x20\x30\xa5\xc9\x89\x95\x06\xcf\x0c\xab\xdc\x81\x0c\x28\x49\xf6\x7d\x5b\x3d\x77\x94\x74\x21\x8d\x9c\xb3\xdc\x78\xd1\x10\x78\xe9\x3d\x73\x6e\xf0\x89\x06\xac\x79\xa7\xad\x87\x4b\x46\x5f\xa6\xbb\xa2\x5c\xde\xab\x8b\x51\x8c\xa9\x70\x5b\x65\x18\x99\xa9\x1a\x9b\x42\x57\xcd\x53\xbf\x84\xf0\x0f\x02\xcd\x60\x1a\x84\x1f\xe8\xf4\x50\xac\x18\xf7\xfd\x9d\xff\xdc\x91\xf5\xbe\x2e\xb4\x66\xc1\x90\x7d\x5a\x4d\x51\xc7\xbb\xe7\xa9\x52\x61\x19\x0b\xc2\x91\x28\x19\x93\x3b\x23\xdb\x90\xb7\xce\x70\xb9\x5f\x74\x16\xbd\x4c\x88\xb3\x33\x3e\x6d\x99\x71\x55\x32\x15\xdc\x01\x1d\xd8\x83\x4a\x05\x83\x1d\x41\x6a\x89\x81\x53\xe0\xd5\x80\x21\x9b\x0a\x67\x81\xc7\x20\x95\x83\x04\x65\x8a\x42\x9c\x40\x1b\x75\xe4\x8c\x58\xdb\x46\xdf\x6a\xc0\x3e\x03\xcc\xa2\x55\x88\xa6\x0f\x7e\x7e\x3c\x96\x7e\x51\x82\x59\xd8\xa1\xe5\x11\x70\x19\x2b\x93\x78\x56\x97\xd1\xd4\x4d\x24\x9d\xd8\xea\x4d\xce\x61\x76\x46\xe4\xf5\x26\xeb\x30\xab\x31\x7a\xc2\x3d\xf5\x45\x96\x21\xeb\xb6\x12\x93\xa1\x49\x95\x9a\x88\x06\x17\x90\x74\xdc\x9d\x06\xa7\xeb\xf6\xea\x99\xde\x1b\x95\xea\xa6\xb3\x3e\xb6\xce\x35\x50\x5b\x2a\x13\x09\x8e\x76\x60\xb2\x03\xa1\x96\xfa\x0b\xb9\x2c\x52\x83\x9b\x00\x7d\x02\x08\x25\xb9\xed\xad\xa0\xf3\x1c\x5d\xe1\x3c\x65\x61\x0a\x6d\xa1\x43\x5d\x68\x46\x71\xd0\x94\x6a\x86\x8e\x86\xad\x30\x5e\x86\x30\xea\x16\xa3\xa1\x9d\x18\x09\xba\xd4\x4e\x75\xcf\x4d\x73\xef\xe6\x40\x50\x1b\x9a\xce\xc4\xa0\xf0\x6c\x2a\x3d\xc3\x82\xa9\x48\x7f\xc2\x84\xc4\x4d\x84\x59\xba\x3c\x92\xb1\x0d\xb4\x05\x25\x5f\x17\xe4\x17\x47\x92\xcd\x67\xca\x0e\x2d\x35\x79\x01\xee\xc0\x6d\x6b\xa8\xd0\x0e\x6f\x8a\x35\x4c\x45\x69\x42\xd2\xe1\xac\x18\x5b\xb1\x23\xca\x88\x18\x34\xc4\x21\x56\x26\xdc\x21\xa6\xa7\x90\xd9\x1e\xb4\xbd\xd7\xdf\x21\xac\xbf\x6b\xfc\x9c\x12\x3c\xd1\x09\x8e\x28\x52\x02\x8d\xdc\xd8\xbc\x66\x47\x28\x43\xc1\xde\x9d\x20\x52\x89\xe6\x82\x4c\xe7\x7a\xdb\xc1\x5c\x14\xab\x49\x98\xf7\xe4\x2e\x91\x2b\xca\x02\x37\x27\x4f\x64\x0c\x2b\x29\x57\xc8\x5f\x28\x5f\xe4\x75\x6f\x0e\x56\x2f\x51\xa2\x43\xcd\x5f\x15\x8e\x36\xfc\x38\x5a\x3d\x7a\x00\xf5\x34\x49\xdc\x42\xa1\xe9\x2c\xba\x9d\x52\x82\x70\xa2\x6f\x9b\x97\x90\x39\x20\xb5\x48\x0d\x8a\xcb\xa4\xd7\xea\x1e\x35\x07\x61\x2a\x79\xc6\x4f\x1f\x8a\xc1\xa4\x5c\xee\x3d\xd0\xef\x10\x79\x46\xa9\x11\x3e\x4e\xf3\x33\x46\xce\x02\xe6\xfd\x53\xa6\x6f\x66\xc6\x9b\xe5\xfb\x23\x0a\xce\x06\x5a\xfe\x21\xd8\xbf\x15\xbc\x46\x88\x52\xeb\x54\x02\x95\x12\x88\x8d\x4a\x3c\xf0\x6d\x7d\x90\x0b\xca\x2e\x82\xa8\xb5\x38\x65\x3f\x2a\xe3\xbf\xa1\x5a\x46\x0e\xa3\x83\x6f\x00\xa6\x99\xe9\x21\x06\x67\x52\xba\xce\x7a\xe0\xcc\x77\x45\x47\x5c\x96\x81\xbc\x46\xf8\x4a\x5f\xf1\xbb\xdc\xa4\xb2\x23\x6a\xfe\xcf\x1d\x3e\xa1\x4d\xd3\x68\x30\x21\x47\x26\x37\xe4\x76\xfb\xb8\x5a\xaf\x3e\xdc\x6f\xee\xd7\xdb\x6d\xaf\x40\xeb\xd1\x69\xbb\x5d\x6d\x36\xeb\x87\x1f\xff\xdc\xdc\x0f\x08\x84\xb7\x98\xe1\x5e\x70\x5d\x2e\x19\x6f\x07\x57\x42\xa8\x67\xdf\x52\x30\x8a\x04\x1a\x02\x0c\x4f\x4c\xd5\x0b\xd3\xb3\x6a\x12\xa6\xfb\x9c\x74\xa1\xa6\xb0\xca\x58\xed\x0e\x6c\x5e\x0b\x36\x3f\xf3\x05\x89\xfc\xf2\x81\x16\x10\x04\x97\x4f\x25\xf7\xbc\xd1\x42\xc2\x79\xcd\xfc\x17\x19\xfa\xcf\xf5\x49\x17\xba\x62\x7d\xa7\x16\x73\x42\x0e\x68\xe9\x38\xcf\x53\x58\x45\x13\xe8\xda\x78\x7e\xcf\x0b\x46\xbe\x43\xfe\xbb\xdc\xf5\xdf\xa2\x67\x1d\xed\x37\x3d\x91\x4c\xea\xa3\xbb\x36\xbc\x1b\x7d\xbb\xe9\x33\xe8\x5d\x5f\xe3\xdd\x6f\xc4\x8e\x31\xe7\x90\x98\x65\x77\x92\xac\x62\x8d\x14\xbb\xbe\xf3\x64\x52\xbc\x2f\x91\x0f\x1d\x68\x43\x42\xf8\xb7\xcb\xfa\x51\xf2\x3a\x18\x10\xbc\xe6\x6d\x67\x2f\xd4\x0e\xc5\xb6\x55\xf3\xc6\xcf\xf7\xb3\x97\x81\xc7\x20\x03\x6b\x8a\xc9\x90\x8c\x3a\x4f\xe1\x43\xc7\x0c\x02\x59\xfe\xcd\x31\x40\x85\x01\x3c\x9d\x89\x01\xcf\xff\x3d\x52\x83\xe7\x6f\x4e\x6f\xe7\x8a\x34\xc5\xae\xfd\x59\xac\x26\x39\x3d\x83\x5d\xe5\x7f\x5f\xae\xfe\x0e\x00\x00\xff\xff\xa2\x8f\xb6\x43\x32\x1c\x00\x00")

func regoSpecInBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecIn,
		"rego-spec.in",
	)
}

func regoSpecIn() (*asset, error) {
	bytes, err := regoSpecInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.in", size: 7218, mode: os.FileMode(420), modTime: time.Unix(1586279308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x1c\x5d\x6f\xdc\x36\xf2\x3d\xbf\x62\xb0\x0d\x50\xe0\xce\x8e\x7b\x2f\x07\x34\x6f\xc1\x25\xb8\x0b\xd0\xf4\x82\xb4\xb8\x87\x06\xae\xc1\x95\x46\xbb\xac\x29\x92\x25\xa9\xb5\xf7\x8a\xfc\xf7\x03\x49\x51\x1f\xab\x2f\x6a\x57\xbb\x8e\x0f\xf5\x43\x62\x4b\x9c\xe1\x7c\x73\x86\x1c\xea\x8f\x17\x00\x00\xab\x97\x3a\xd9\x62\x4e\x56\xaf\x61\xb5\x35\x46\xbe\xbe\xb9\xf9\x4d\x0b\x7e\xed\x9f\xbe\x12\x6a\x73\x93\x2a\x92\x99\xeb\xef\xfe\x7e\xe3\x9f\x7d\xb3\xba\xf2\x90\x86\x1a\x86\x16\xee\x27\x89\x09\xcd\x68\x42\x0c\x15\x3c\xbc\x4d\x51\x27\x8a\x4a\xf7\xe8\x35\xac\x3e\xa1\x54\xa8\x91\x1b\x0d\x84\x83\x58\xff\x86\x89\x81\x07\x6a\xb6\x40\x18\x03\x6a\x1f\x1b\xa3\xe8\xba\x30\x68\x47\xa4\xa0\x90\x39\x7c\xba\x9a\x6e\x2f\xdd\x6c\x1e\x36\x3c\x25\x69\x4a\xed\x30\xc2\x3e\x2a\x21\x51\x19\x8a\x7a\xf5\x1a\x32\xc2\x34\x96\x43\x14\xfe\x5e\x50\x85\xe9\xea\x35\x7c\x76\x4f\xdc\xd3\x5c\xa4\xc8\x56\xee\xef\xdb\x72\xa0\x6c\x62\xf8\xa3\x1e\x5a\x53\xd6\x7a\xee\xc5\xa7\x30\xb3\x54\x7d\x73\x93\x62\x46\xb9\xa3\x45\xdf\x34\x20\xaa\xe1\x5f\xae\x6a\x8c\x35\x73\x1d\x84\x81\x4d\xa2\x14\xd9\xaf\xae\xda\x2f\x0f\x84\xfa\x03\xd5\x06\x44\x56\xcb\x0a\xd6\x68\x1e\x10\x39\x98\x2d\x82\x0a\x22\xc7\x34\x08\xdc\x0a\x56\x98\x2d\x2a\x10\x1c\xf5\xab\x43\xf4\xd4\x60\xde\x25\x69\x84\xcf\x30\xf1\xaa\x05\xf0\xa5\x97\x67\x2f\xf0\x48\x01\x36\xb4\x73\x88\x87\xf2\x14\x1f\xe3\x55\x11\x86\xf7\xe2\x4a\x31\x23\x05\x33\x77\x42\xa5\xa8\x62\x31\xb6\x81\x5e\xb4\xb9\xfe\x52\x99\x7f\x05\xd0\x36\xa6\x41\xf2\x2b\x77\x7a\x5f\x8e\x18\xd7\xfd\x5b\xf7\xe7\x1a\xb5\xd3\x75\x89\xd5\x1a\x83\xfd\x53\x4b\x4c\x3a\xda\x9d\x76\x95\x9a\x96\x31\x23\x1c\xb1\x92\x31\xb8\x09\xd8\x16\xbc\x36\x8a\xf2\xcd\xaa\x33\xe8\x4b\x84\x9d\x4d\xe8\xf4\x40\x8c\x6f\x82\xa7\x82\xd9\x12\x03\x7a\x2b\x0a\x96\xc2\x1a\xa1\xd0\x98\x82\x11\xe0\xd0\x80\x42\x5d\x30\xa3\x81\x66\xc0\x85\x81\x9c\xf0\x82\x30\xb6\x07\xa9\xc4\x8e\xa6\x98\x1e\xca\xe8\x54\x01\xf6\x09\x60\x96\x5b\x55\xd6\xf4\xc1\xbd\x1f\xb7\xa5\x7f\x09\x96\x6a\x58\x13\x4d\x13\xa0\x3c\x13\x2a\x77\x5e\x1d\xac\xa9\x1b\x48\x3a\xb6\xd5\x1b\x9c\xab\xb7\x33\x2c\xaf\x37\x58\x57\x6f\x25\x49\xee\xc9\x06\xfb\x2c\x4b\xa1\x36\x77\x9c\xe4\x43\x2f\x45\xa1\x12\x1c\x1c\x80\xdc\x50\xb3\x1f\x7c\xdd\x94\x57\xcf\xeb\x8d\x12\x85\x6c\x2b\xeb\xf6\x80\xaf\x81\xb5\xa5\x16\x11\xa3\x44\x0f\xbc\xec\x90\xd0\x08\xfd\x25\x9c\xb5\xd4\x4a\x4d\x40\x5c\x00\xa8\x96\xe4\x43\x6d\x55\x38\xa7\xdc\x15\xa6\x5d\x16\x62\xdc\x16\x3a\xae\x0b\x6d\x2b\xae\x30\x15\x32\x25\x06\x87\xa5\x30\xbe\x0c\x91\xa4\xbb\x18\x0d\xcd\x94\x22\xc3\x4b\xcd\xd4\xd4\x5c\x9c\x7a\x7f\xde\x22\x34\x1e\xc5\x7b\x62\x85\x70\x32\x94\x4e\x78\x41\x2c\xa5\xff\x20\x39\xb2\xeb\x84\xd8\x70\xb9\x43\xa5\x5b\xd4\x96\x2e\xb9\x2c\x91\x8f\x06\x79\x3a\xdf\x53\xd6\x44\x63\xdb\x2f\xc0\x6c\xa9\x3e\x78\x54\x62\x87\x67\xe5\x35\xa9\x48\x8a\x1c\xb9\x21\xb3\x6c\xec\x4d\xba\x23\x3c\xc1\x14\x5a\xe0\x90\x09\x55\xe5\x10\xf1\x21\x64\xb6\x06\x75\x6f\xfa\x3b\x44\xeb\xbf\x25\xf9\xbd\x40\xb8\xc7\x3d\xec\x08\x2b\x10\x24\xa1\x4a\xfb\x35\x3b\x21\xbc\x5a\xb0\xd7\x7b\x48\x44\x2e\x29\x43\xd5\x49\x6f\x3b\x34\x97\x8b\x55\x14\xcd\x1b\x34\x97\x88\x15\x61\x81\x9b\x13\x27\xac\x87\x05\x97\x2b\xe1\x2f\x14\x2f\xfc\xba\x37\x87\x56\x07\x11\xa8\x23\x92\x2e\x4a\x8e\x54\x74\x37\xba\x7a\xf4\x10\xd4\x53\x24\x51\x0d\x25\xa6\x49\xea\xd6\x42\x30\x24\x91\xba\x6d\x27\x21\x73\x88\x94\xac\x50\x84\x5d\x26\xbc\xd6\x79\xd4\x1c\x0a\x0b\x4e\xad\x7f\x3a\x53\xac\x44\x4a\xf9\xc6\x11\x7a\x06\xcb\x53\x42\x8c\xf8\x63\x9c\x9e\x49\x62\x34\x10\x5f\x3f\x59\x7c\x33\x23\xde\x2c\xdd\xef\x08\xa3\xe9\x40\xc9\x3f\x44\xf6\x8f\xa5\x5f\x13\x48\x0a\x6d\x44\x0e\x35\x12\xc8\x94\xc8\x1d\xe1\x77\xcd\x87\x94\xa1\x4d\x04\x89\x94\x6c\x6f\x7f\xa9\x85\xff\x8c\xd6\x32\x34\x24\xd9\xba\x02\x20\x4e\x4c\xef\x33\x30\xaa\xc0\x2b\x5b\x03\x5b\xdd\x95\x15\x71\x58\x06\xfc\x1a\xe1\x56\xfa\xda\xbf\xc3\x24\xb5\x1c\x89\xa4\xc7\x2b\x3c\xa2\x4c\x93\x44\x91\x1c\x0d\xaa\xb1\xca\xff\x63\x18\x04\x3f\x61\xa7\x88\x5a\xac\xc4\x9a\x2a\x45\x1a\x25\xd8\x50\x99\xde\x21\x58\xc3\x27\x0f\x95\xbb\x2d\xbe\x77\x8f\xd6\xdb\x74\x63\xfb\xae\x83\xa3\xb3\x9d\x91\x51\x8e\xf0\xe0\x16\x74\x91\xaf\x29\x2f\x77\xb4\x44\x06\xb5\xec\x80\x28\xeb\xca\x9e\xbe\x8b\x25\x68\x63\x78\x22\x71\xcd\xc2\x37\x03\x27\xc4\x3a\x5f\xf8\xe9\x3a\xe1\xf8\x9b\x38\xa7\x45\x6e\xd4\x90\x3d\x41\xcb\x62\x42\x36\x5e\x5b\x4e\xb4\x81\xf8\xfd\x2e\xe7\xad\x2c\x54\xbf\x3b\x42\x19\x59\x33\x6c\xd8\xc8\xf9\xcd\xa2\x63\xfd\x63\xb6\x31\xc4\x06\x01\x4d\xf9\xa6\x49\xf9\x18\x96\x51\xe7\x6f\x8d\x8c\x0f\x04\x2d\xb0\xd1\x7d\x97\xd6\xc8\x81\x3d\x92\x41\xa6\x27\x86\x3a\xce\x06\x87\xdc\x8e\x90\x3c\x11\xc7\xba\x44\xc7\x39\x53\x37\x18\xff\x38\xcd\x31\x8c\xac\xdf\x3e\x2f\x2f\x91\x0d\x59\x67\x9b\x86\x39\x0e\x3d\x43\x15\xc7\x0a\xe0\x6d\xb4\x3a\x7b\xa6\x5c\xbd\xed\xee\x63\x3c\x9d\x38\x4a\x5c\xc7\xc9\xe1\x67\x0b\x3c\x5f\x00\x36\xff\xb4\xf3\xb6\xd6\xb2\x63\x38\x8f\x80\x40\x5e\xe4\x93\x3e\x5c\x8d\x8e\xc6\x0b\xfe\xe8\xc2\xe0\x66\x34\x4e\xb5\x86\x67\x4c\x90\xb1\x50\xd5\x1a\x1c\x92\xab\xc8\xe1\x8e\xcd\xc8\xb1\x69\xa1\x48\xa4\xe9\x82\x57\x7c\x3e\x12\x91\xc2\xcf\xed\x49\x66\x98\x17\xcc\x50\xc9\x8e\x37\xc5\x0f\x1e\x01\x4d\xa8\x99\x4a\x25\x60\x30\xdd\x72\xe7\x19\x2d\x7f\x0c\x9b\x29\x6e\x1b\x39\x10\x09\x56\x22\x83\xeb\x6a\x9b\xd2\xa9\x5c\xb9\xf9\x33\x25\x24\xc2\x98\x78\xc0\xf4\x2e\xd9\x0a\x9a\x44\x44\x79\x18\x90\xd5\x47\xa1\xb5\x2d\x8d\xfe\x43\x58\xd1\x39\x57\xeb\x45\xd2\x53\x62\x04\x1f\xa6\x1a\xac\xf1\x5d\xb9\x1c\x44\xbb\xd3\x6b\x27\x41\x3b\x87\x4d\x44\x76\xd1\x93\xcc\x49\x07\x61\x5e\x4a\x08\x73\xc3\x26\x8c\xa6\x86\x10\xb5\xce\xf8\x63\x37\xc7\xff\x09\x2b\x8d\xc3\xe2\x55\x75\x9c\x5d\x3b\x78\xbf\x49\x78\xb8\xda\x58\x73\x17\x39\x35\xa6\x73\x60\xd7\x4f\x9f\x17\xe0\xe7\xa0\xa1\x46\x94\x6a\x04\x43\x58\xf1\x82\x31\xff\x7f\xbe\xf6\x4f\x42\x9a\x56\x09\xff\xb4\x68\x81\x8f\x24\x97\x0c\x4f\x94\xed\x3b\x8f\xe5\x68\xd9\x06\xf8\x7e\xd9\x7e\x5d\x02\x3d\xbd\xca\x89\xa8\xe9\xc7\xfa\x42\xc6\xab\xf5\x81\x23\x8a\x72\x83\x0f\xd3\x46\x33\xcc\x29\xc7\xf8\x92\x18\x83\x8a\x7f\x9c\x28\xf8\x7f\xdd\x7d\xfe\xee\xfa\xfb\xdb\xbf\xbe\x9c\x3e\x98\x1f\xad\x9d\x86\x8e\x28\xeb\xc6\x1e\xca\x81\x58\x93\x31\x34\x29\x18\x51\x81\xe1\x57\xf0\xde\xc0\x03\x65\x0c\x0a\x8d\x2e\xa4\x36\x60\xaa\x2d\x1a\xa9\x70\x47\x45\xa1\x03\x94\xef\x13\x22\x69\x0a\x42\x81\xd8\xa1\x7a\x50\xd4\xf8\xfa\x50\xd8\xb5\x2d\xc5\x84\x91\xb1\x7d\x82\x19\x5b\x00\xd3\x75\xd7\x68\xbf\x53\xc5\xce\xfc\x8d\x79\x58\xbe\x3a\x33\xd3\x69\x6c\x8b\x9d\xa3\xaa\xb3\x23\xeb\xd0\x39\x45\x5d\x9d\x1f\x90\x9e\x6d\xb5\x49\xb6\x9c\x96\x36\xf8\x28\xfd\x16\x21\x01\x1f\x5a\x1a\xca\xca\x0b\x6d\x60\x2b\xb8\x50\x60\x84\x4d\x8b\xdc\x66\xeb\xa5\x4b\x96\x16\x9b\x77\x39\x6a\x3d\x76\x42\x34\xc6\xee\x07\x0f\x0b\xf8\x28\x19\xa1\x3c\xec\xcf\x2b\x2f\x85\xe0\x2f\xce\x4b\x5b\xa2\x7d\x32\x86\x67\xe4\x7d\x87\x87\x9b\x1e\x47\x99\x8e\xb9\x43\xcd\x8e\x1f\xda\x74\xee\x5d\x5c\x21\x71\xe9\x64\x2d\xb2\x54\x29\x03\xbc\x05\xfc\xf5\xf3\x9b\xeb\x5f\xfe\x76\xfd\xfd\xed\x67\x72\xfd\xdf\x37\xd7\xbf\xd8\x88\xfe\x97\x97\xe7\xce\xfa\x48\x61\xc4\x06\x39\x2a\x62\x46\x36\x8c\x5b\x20\x3d\xc5\x71\xad\x16\xaa\xa1\x85\x12\xd6\x7b\x67\xa2\x6b\x92\xdc\x23\x9f\xe5\x7a\x8b\x94\x20\x89\x42\x57\x3b\xde\x09\xce\xf6\x0b\xf0\x67\xcb\x2b\x8b\xca\xd7\x58\x06\xd2\xc2\x85\x1c\x37\x0d\x82\x0d\x7d\xb1\xa5\xea\xb2\x7c\x1e\x91\xbd\xf7\x76\xac\xf4\x64\xdf\x15\xf3\x5f\x57\x86\x38\x29\x10\xa9\x30\x59\xce\xaa\x1b\xf8\x2e\xaf\xdb\x99\x3b\x80\x71\xbd\x48\xc7\xe8\x75\x91\xe5\x01\x79\xa2\xf6\xf2\x58\xcd\x94\x07\x4d\xf4\x80\x89\xd2\x66\xeb\xfe\xcf\x7a\x96\x4b\xeb\xeb\x88\x6a\x6f\xb4\x52\x0b\x0d\x3d\xcf\xd3\x11\xf1\x51\x0a\xbd\x94\x17\xca\x62\xcd\x68\xc2\xf6\x10\xb0\x1e\xa1\xdb\xa8\xc2\xd9\xc5\x41\x0b\x65\x54\x31\xb1\x99\x38\x21\x80\x4a\x02\xe3\x4d\x19\x07\xf3\x77\x0f\x22\x5c\x8e\xeb\x6a\xac\x35\x06\xf6\x6d\xa6\xf7\x40\x95\x33\x91\x9c\x98\x57\xf0\x3e\x03\xcc\xa5\xd9\xfb\x46\x0e\xaa\x5d\x53\xd5\xc5\xfd\x7b\xba\x3d\x6c\x8c\xdb\x25\x5b\xc5\x7a\x79\x1c\x6a\x1b\x9b\xc3\x63\x46\x99\x41\x45\xd6\xb1\x3b\xc0\x93\x49\x45\xe0\xca\x3a\xbb\x47\x6e\xf3\x0a\x59\x28\xab\xe8\x59\x19\xfc\x22\x31\x2c\x13\x0a\xe9\x86\xdf\xdd\xe3\x12\x59\x93\xcd\x0a\xa1\x44\x69\x15\x7b\x71\x76\x36\x68\xf3\xec\x05\x38\x71\x0e\xb8\x25\x3b\x04\x02\x75\x92\x5b\xa2\xbf\x34\x57\x34\x45\x6e\x68\x46\x17\xe1\xac\x0c\x16\x40\xac\xae\x72\x42\x39\x34\xd0\x9f\x27\xcc\xfa\xa6\xb3\xf7\x65\xa1\x65\x23\xed\x69\x67\x32\xe4\xf1\x8e\x21\xdf\x98\xed\xd1\xe2\xc8\xc9\x23\xcd\x8b\x1c\x3c\x9a\x4e\xa6\x54\x55\x9d\xf1\xe7\x79\x41\x2c\x61\xc9\x3d\x99\xc3\xd3\x32\xfc\xc0\x60\x7f\x86\x5f\xf1\x17\x7f\x52\xb8\x30\x83\x94\x9f\xac\x42\xca\xbf\x6a\x15\x52\x7e\xaa\x0a\x4b\x06\xbf\x52\x15\x1e\x9d\xe5\x1c\xb6\x42\x3f\x59\x7d\x22\x72\x6a\xee\x5c\x1a\x75\x14\x1f\x55\x3f\xa3\xe9\x5b\xe4\x53\x25\xa4\xb4\x99\x5b\xc8\xd4\x84\x02\x9f\x83\x5f\x78\xf1\x70\xf7\xe2\xce\x94\xc0\x38\xdc\x4f\x9a\xbf\x48\x45\x73\xa2\xf6\xcb\xe5\x2f\x7e\x6d\x84\x12\xef\x93\x24\x31\x0a\x49\xba\xd4\x3e\x16\xd5\x60\xd1\xb9\xbd\xac\x27\x60\x64\xa2\x41\x75\x26\x1f\x25\xb6\x4b\xb3\xa1\x31\x51\x23\xb7\x4a\x66\x31\xe1\x71\xb9\x03\xb1\x7a\x0b\x23\x45\xc2\xca\x4b\xf6\x09\x51\xb3\xe2\xe0\x42\x0c\x9e\x35\x6b\xd6\x4f\x93\x35\x6b\xba\xe1\x27\xd8\xde\xc0\xb2\x1b\x42\x84\x11\x15\x87\xae\x45\x74\xc3\x89\x29\x54\x05\x30\x79\x0e\x79\x26\x9e\x8d\x58\xcc\xdf\x4a\x5c\xe7\xde\x79\x39\xb9\x1c\xd0\xc5\x3a\xbe\x59\x70\x24\x17\xc9\x89\x94\xee\xa4\x4d\x80\xa4\xc9\xbd\x5b\xe0\x1e\xb6\xe5\x37\x1a\x42\x4b\x91\x46\x63\x07\x7c\x8b\x8f\x06\x15\x27\xec\xdb\x8b\xf7\x45\x2a\xc2\x35\x45\xbe\x50\x3c\xaa\xd1\x5d\xda\x54\x4f\xd2\x59\xe8\xd2\x3c\x25\x77\xfc\xb3\x49\x33\x0c\x9f\xd3\xa4\xc9\xa8\x8e\x26\x23\x3a\x08\xba\xd1\xae\x9d\x33\x96\xe2\xd2\xfd\x62\xc7\x2b\xcc\x66\x0c\xfd\x61\x06\x8f\x0a\xb3\x0f\x44\x9e\xbb\x0d\x35\xe6\x5a\x5a\x0b\xe0\x2c\x57\xd4\x8e\xf2\xb6\x67\xd2\x35\x39\xf8\x76\xc9\x46\xb4\xea\x33\x3c\xc3\x57\xcb\x3e\x85\x21\xe3\x9d\x68\xae\x6d\xc2\x7d\x4d\xa2\xec\x06\x01\x52\x7d\x5d\xa8\xfe\xb8\xd0\x83\x68\xdf\x95\xec\x36\xa9\x5d\xe8\x7b\x20\xf5\x65\xd5\xd6\xbb\xdb\xab\x17\x6d\x2c\xd3\x57\xde\xe6\x5e\x7a\xad\x20\x1a\xbb\x9e\x8c\xf2\xfb\x60\xd3\x4e\x68\x55\x73\xd7\x92\x57\x5f\x7d\xaf\xc0\xff\xd7\x27\x32\x2e\x74\xbb\xfe\x4c\x5f\x17\x99\xe1\xa1\x25\x8e\x69\x3f\x85\x37\x49\x84\xbb\xb6\xbe\xbc\xe6\x03\xb1\x9f\xc1\xff\x1e\x66\x7d\x2a\xf7\x1c\x6c\x22\x9c\xfb\x75\x9c\xa8\x4f\xa8\x74\x65\x38\x7d\x6f\x29\xe2\xae\xd2\x90\x10\x3b\xc2\x9c\xe3\xc4\x11\xed\x25\xbd\xfc\x58\x28\x3a\xd6\x22\xd4\xc9\x6a\x91\xb1\xea\x9a\x47\x15\xc9\x63\x1a\x52\x8e\xbb\xe8\xbe\x61\x62\x4d\xd8\xdd\xc8\x75\xe7\x2e\x7f\xff\x74\x30\xd0\xba\x4c\x9c\xa1\x42\x9e\x0c\xee\xfc\x75\x1b\x39\x4b\x00\x57\x40\x7b\x7c\x8d\x6b\xc3\xce\x9d\xfd\x79\xb7\xcb\x48\x1a\xaf\x6c\x46\xf2\x7c\x6e\xc7\xc7\xc8\xb5\x3f\x8a\x35\x20\xe3\x23\xd8\x0b\xff\xef\x97\x17\xff\x0b\x00\x00\xff\xff\x70\x8d\x36\x7c\x2d\x52\x00\x00")

func regoSpecJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecJson,
		"rego-spec.json",
	)
}

func regoSpecJson() (*asset, error) {
	bytes, err := regoSpecJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.json", size: 21037, mode: os.FileMode(420), modTime: time.Unix(1588805729, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoTypeMappingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x6e\x9b\x40\x10\xc6\xef\x7e\x8a\x11\xa9\x54\xa9\x6a\x4c\x4f\x3d\xf8\x5e\xa9\x97\x4a\x3d\xf4\x56\xf5\x30\x66\x07\x98\x64\xd9\xdd\xce\x0e\x49\x69\xc5\xbb\x57\x0b\x36\x0e\x98\xd8\x91\xa2\xf8\x04\xf3\x87\x99\xfd\x7d\x9f\xf7\xdf\x06\x00\x20\x7b\x17\x8b\x9a\x1a\xcc\x76\x90\xd5\xaa\x61\x97\xe7\x77\xd1\xbb\xdb\x31\xba\xf5\x52\xe5\x46\xb0\xd4\xdb\x4f\x9f\xf3\x31\x76\x93\x7d\x1c\x3b\x95\xd5\x52\xea\xfb\xd1\x05\x82\x6f\x18\x02\xbb\x2a\x1e\xb3\x86\x62\x21\x1c\x94\xbd\x1b\x6a\x6a\x8e\x50\xb2\x25\xe0\x08\x6d\x24\x03\xea\xa1\xc1\x00\xf4\x47\x49\x1c\x5a\xd0\x2e\x50\x4c\x51\x8b\xae\x6a\xb1\x22\x88\x81\x0a\x2e\xb9\x88\xdb\x69\x64\x17\x86\x89\x7e\x7f\x47\x85\x1e\xa3\x68\x0c\xa7\x39\x68\xbf\x8b\x0f\x24\xca\x14\xb3\x1d\x94\x68\x23\x1d\x4a\x02\x6a\x1a\x33\xcb\x8f\x00\x86\xf4\xf6\xc3\xec\x7d\x04\x23\x54\xa6\x59\x37\xb9\xa1\x92\xdd\x30\x21\xe6\xc3\x06\x53\x61\x3f\x3c\xf5\xd3\x91\xa7\xba\xf9\xe7\x0f\x6b\x2f\x06\xcc\xf8\x1d\xce\x32\x25\xd7\xf0\xdd\x53\xf7\x94\x9e\x0a\xba\x68\x31\x95\x00\xba\x39\xc8\xf7\x11\x62\xbb\x4f\x4f\x50\x8a\x6f\x00\x27\x98\x43\xfd\x76\x39\x6e\x15\xec\x94\xbd\x0e\x78\x2a\xbd\x0c\xfa\x12\xf0\x2b\xe0\x9b\xd1\x5f\xd9\x59\x4f\xbf\x59\x7f\xeb\x4f\x9b\x65\xc7\xe6\xe7\x35\x38\xd8\xf7\xaa\x0c\x04\x05\x2a\x55\x5e\x4e\x52\xec\x3b\xa8\xc8\x91\xa0\x7a\x89\xc0\x0e\xbc\x18\x92\xa7\x0a\xd1\xd2\xe5\xec\x52\xb6\x26\x16\xf0\x8f\x0e\xb8\x09\x96\x1a\x72\xfa\xc6\xe2\x08\xfd\x6e\x59\xc8\x64\x3b\xf8\x79\xae\xc9\xdc\xda\xe9\xf7\x6b\x29\xee\x15\x55\x57\x7d\x7e\x89\xe5\x04\xc8\x0c\x60\x96\x27\x3f\x23\x10\x55\xd6\x3d\x70\xde\x97\x25\xe7\xbc\x78\x99\xaf\xfe\x31\x09\x36\xb8\x0d\x2d\xff\xa5\xa4\xce\x1b\xec\xd4\x04\x2f\x2f\xdf\xea\xcb\x03\x39\x6d\xd1\xc2\x49\x63\x18\x3f\x01\x5e\x20\x60\x71\x9f\xae\x49\xad\x51\x21\x88\x7f\x60\x93\x2e\xd0\x57\xef\xfd\xdc\xff\x69\xbc\xeb\x36\xfd\xe6\x7f\x00\x00\x00\xff\xff\x9a\x8a\x83\x1c\x3a\x06\x00\x00")

func regoTypeMappingJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoTypeMappingJson,
		"rego-type-mapping.json",
	)
}

func regoTypeMappingJson() (*asset, error) {
	bytes, err := regoTypeMappingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-type-mapping.json", size: 1594, mode: os.FileMode(420), modTime: time.Unix(1563338935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoValidationMappingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x8e\xd3\x30\x10\xc6\xef\x7d\x8a\x51\x16\x09\x09\xed\x36\x9c\x38\xf4\xce\x11\xc4\x61\xc5\x05\x71\x98\xc6\xe3\xd4\xbb\xfe\xc7\x78\x52\xa8\x50\xde\x1d\x39\x69\x9d\x4d\xda\x6e\x11\x12\xa7\x3a\xfe\x66\x3c\xe3\xdf\x37\xf5\xef\x15\x00\x40\xf5\x26\x35\x3b\x72\x58\x6d\xa0\xda\x89\xc4\x4d\x5d\x3f\xa5\xe0\x1f\xc6\xdd\x75\xe0\xb6\x56\x8c\x5a\x1e\xde\x7f\xa8\xc7\xbd\xbb\xea\x7e\xcc\x14\x23\x96\x72\xde\x57\xb4\x46\xa1\x98\xe0\xe1\x13\xc6\x68\x7c\x7b\x0a\x51\x94\x1a\x36\x31\x4b\x39\xf0\x71\x67\x12\x68\x63\x09\x4c\x82\x2e\x91\x02\x09\xe0\x30\xc2\x7e\x3a\x41\x77\xbe\xc9\x8b\x94\x35\x8b\xbe\xed\xb0\x25\x48\x91\x1a\xa3\x4d\x93\xd6\xa5\xfa\x21\x0e\xc5\xc3\xf6\x89\x1a\x39\xed\xa2\x52\x26\x67\xa3\xfd\xc2\x21\x12\x8b\xa1\x54\x6d\x40\xa3\x4d\x74\x0c\x89\x28\x42\xec\x67\xfa\xc8\x62\x90\xd7\xef\x66\xdf\x23\x23\x26\x9d\x6b\xdd\xd5\x8a\xb4\xf1\x43\x85\x54\x0f\x1d\x94\xc0\x7e\x58\xf5\xe5\xe2\x25\x6e\x7e\xfc\xb1\xed\x45\x81\x82\xf2\x31\xcb\xf7\x73\xf1\x12\xc4\x67\x3a\xbc\x64\x28\x8c\x3e\xd9\x11\x20\x7a\xa0\x5f\xf9\x86\x68\x21\x57\x7b\x9b\x20\x75\xdb\xbc\x02\xcd\xc1\x01\x16\x98\x43\xfc\x7a\x59\xee\x22\xd8\xa2\xde\x06\x5c\x42\x5f\x07\xfd\x1a\xf0\x1b\xe0\xdd\x71\xc8\xce\x72\xfa\xd5\xe5\xaf\x7e\xea\xac\x3a\x25\x5f\xf7\x60\x3e\xc3\xd7\x6d\x20\x68\x50\xa8\x0d\x3c\x59\xb1\x3d\x40\x4b\x9e\x18\x25\x70\x02\xe3\x21\xb0\x22\x7e\xe9\x10\xcd\xcd\xc9\x41\x59\xdd\x91\x61\x08\x3f\x3d\x18\x17\x2d\x39\xf2\xf2\x9f\xcd\x61\xfa\xd1\x19\x26\x55\x6d\xe0\xdb\xb9\x27\x1e\x1d\xcd\xf1\x7e\x5f\x9a\x7b\xc3\xd5\xe1\x84\xab\xbe\x2e\x58\x7e\x46\x47\x10\x74\xc6\x50\xfe\xff\x19\x5a\x83\xd6\xe6\xdf\x48\xac\x03\xbb\x41\x9f\x9e\x8a\x25\x9c\x33\x48\x49\xf8\xf2\x98\x9c\xe7\x55\xc6\xc5\xc0\xf2\xd7\x1d\x7f\xdc\x93\x97\x0e\x2d\x4c\xc8\x61\x3c\x02\x02\x43\xc4\xe6\x39\xbf\x5a\xb2\x43\x81\xc8\x61\x6f\x14\xa5\x45\xf7\xe5\xa2\xff\x7e\x8d\x6b\xd3\x3e\xbe\x44\xab\x7e\xf5\x27\x00\x00\xff\xff\x75\x74\x59\xb0\xe3\x05\x00\x00")

func regoValidationMappingJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoValidationMappingJson,
		"rego-validation-mapping.json",
	)
}

func regoValidationMappingJson() (*asset, error) {
	bytes, err := regoValidationMappingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-validation-mapping.json", size: 1507, mode: os.FileMode(420), modTime: time.Unix(1563338935, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gen.sh": genSh,
	"rego-abstract.in": regoAbstractIn,
	"rego-abstract.json": regoAbstractJson,
	"rego-attribute.in": regoAttributeIn,
	"rego-info.json": regoInfoJson,
	"rego-param.in": regoParamIn,
	"rego-shared-params.in": regoSharedParamsIn,
	"rego-shared-params.json": regoSharedParamsJson,
	"rego-spec.in": regoSpecIn,
	"rego-spec.json": regoSpecJson,
	"rego-type-mapping.json": regoTypeMappingJson,
	"rego-validation-mapping.json": regoValidationMappingJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gen.sh": {genSh, map[string]*bintree{}},
	"rego-abstract.in": {regoAbstractIn, map[string]*bintree{}},
	"rego-abstract.json": {regoAbstractJson, map[string]*bintree{}},
	"rego-attribute.in": {regoAttributeIn, map[string]*bintree{}},
	"rego-info.json": {regoInfoJson, map[string]*bintree{}},
	"rego-param.in": {regoParamIn, map[string]*bintree{}},
	"rego-shared-params.in": {regoSharedParamsIn, map[string]*bintree{}},
	"rego-shared-params.json": {regoSharedParamsJson, map[string]*bintree{}},
	"rego-spec.in": {regoSpecIn, map[string]*bintree{}},
	"rego-spec.json": {regoSpecJson, map[string]*bintree{}},
	"rego-type-mapping.json": {regoTypeMappingJson, map[string]*bintree{}},
	"rego-validation-mapping.json": {regoValidationMappingJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

