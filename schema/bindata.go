// Code generated by go-bindata.
// sources:
// gen.sh
// rego-abstract.in
// rego-abstract.json
// rego-attribute.in
// rego-info.json
// rego-param.in
// rego-shared-params.in
// rego-shared-params.json
// rego-spec.in
// rego-spec.json
// rego-type-mapping.json
// DO NOT EDIT!

package schema

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _genSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc4\x20\x14\x84\xef\xfe\x8a\xd7\xb4\x60\x7b\x50\x7f\x40\xa0\x90\x42\x0e\x3d\x14\x4a\xb0\x67\x79\x1a\x6b\x6c\x1b\x15\xb5\xff\x7f\xd9\x6c\x58\xb2\x61\x2f\xcb\x1e\xdf\x0c\x33\xf3\xf1\x1e\x1f\x84\xf6\x41\x68\x2c\x13\x21\xc9\xe6\x3f\x60\xc9\x02\x2d\x42\xa9\x4e\xca\xe1\xfd\xed\x4b\xf6\x4a\x09\xda\x3c\x3d\x1b\xac\x90\xad\x8b\x0c\x6b\xcd\x5e\xff\x57\xcb\x7d\x78\x69\xa8\x70\x2d\x5d\x0d\x5d\x6a\x46\x53\xb9\x0f\xf0\xba\x93\x7e\x4a\x0c\xf7\x0c\x9c\x53\x9f\xdd\xd0\x7d\xf4\xb2\x1f\xf6\xa9\x84\x19\xe7\x3d\x52\x49\xd6\x6c\x70\x96\xf3\x0a\xca\x8d\xa5\x13\x66\x3b\x9e\xbc\xb2\x6d\xbf\xd0\x97\x19\x92\x67\x60\xdf\xc0\x8f\x5f\x1e\xb1\x22\x77\xb1\x25\x2e\xb2\xf5\x04\x96\x7e\x1d\x14\x33\xd9\x19\x81\x93\x43\x00\x00\x00\xff\xff\xfe\x7b\x84\xde\x8e\x01\x00\x00")

func genShBytes() ([]byte, error) {
	return bindataRead(
		_genSh,
		"gen.sh",
	)
}

func genSh() (*asset, error) {
	bytes, err := genShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen.sh", size: 398, mode: os.FileMode(493), modTime: time.Unix(1533067070, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x4e\xc4\x30\x10\x44\xfb\x7c\xc5\x2a\x47\x79\x87\xa9\x28\xd2\x1d\x12\x05\x1d\x42\xa1\x8e\x36\xf6\x9a\xf8\x64\x6c\x6b\x77\x4f\x08\xa1\xfc\x3b\x4a\x0c\xe1\xa0\xa0\xb3\x76\xde\x78\x46\xf3\xd1\x00\x00\xb4\x57\x62\x27\x7a\xc5\xb6\x83\x76\x52\x2d\x9d\x31\x27\xc9\xe9\x50\xaf\xd7\x99\x5f\x8c\x63\xf4\x7a\xb8\xb9\x35\xf5\xb6\x6b\xf7\xd5\xa9\x41\x23\x2d\xbe\xe3\x28\xca\x68\xf5\x5b\x70\x24\x96\x43\xd1\x90\xd3\x2a\x27\xc0\x2f\x02\x30\xc6\xfc\x26\xa0\x19\x1c\xd9\x88\x4c\x80\x20\xa4\x90\x3d\x8c\x28\x04\xa8\xca\x61\x3c\x2b\x09\x60\x72\x26\x33\x30\x45\x5c\x7e\x12\xd0\x09\x15\x2c\x26\x18\x09\x98\xce\x42\x0e\x42\xd2\x0c\x59\x27\x62\x90\x42\x36\xf8\x60\x2b\xbc\x75\x7c\x2f\x6b\xc5\x3c\x9e\xe8\xa7\x20\x3a\x17\x16\x0c\xe3\x23\xe7\x42\xac\x81\xa4\xed\xc0\x63\x14\xda\x37\x95\x29\x97\x4a\xdd\xaa\x7a\xb7\x86\xbf\xee\x75\x4b\x26\xbf\xa4\xed\x8c\x23\x1f\xd2\x9a\x21\xe6\xc2\xb1\xe1\xf3\xfa\x9a\xb7\xc1\x36\xfa\xdf\xb0\x61\x38\xf6\xfd\xd3\xc3\xdd\x73\x7f\x3f\x0c\x7f\xff\x6a\xe6\xe6\x33\x00\x00\xff\xff\x33\x37\x6b\x77\xd3\x01\x00\x00")

func regoAbstractInBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractIn,
		"rego-abstract.in",
	)
}

func regoAbstractIn() (*asset, error) {
	bytes, err := regoAbstractInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.in", size: 467, mode: os.FileMode(420), modTime: time.Unix(1528494787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAbstractJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x4d\x6f\xdb\x38\x13\xbe\xe7\x57\x0c\xdc\x02\x05\xde\x37\xae\xbb\xc0\xa2\x40\x73\xcb\xa1\x87\x00\x7b\x28\x16\x7b\x6a\x90\x06\x23\x71\x64\xb1\xa5\x48\x75\x48\x39\xf6\x2e\xf2\xdf\x17\x24\x25\x59\x4e\xfc\x21\x5b\x8a\xd3\xed\xa5\x8e\x38\x1c\xce\x33\x1f\x0f\x87\x94\xfe\xb9\x00\x00\x98\xbc\xb5\x69\x4e\x05\x4e\xae\x60\x92\x3b\x57\x5e\xcd\x66\xdf\xad\xd1\xd3\xf8\xf4\xbd\xe1\xf9\x4c\x30\x66\x6e\xfa\xe1\xe3\x2c\x3e\x7b\x33\xb9\x8c\x33\x9d\x74\x8a\xfc\xbc\xeb\xc4\x3a\xc6\xd4\x35\x03\x82\x6c\xca\xb2\x74\xd2\xe8\x30\xac\x01\x6b\x09\x40\xa5\xcc\x83\x05\x67\x40\x50\xaa\x90\x09\x10\x2c\x39\x30\x19\x24\x68\x09\xd0\x39\x96\x49\xe5\xc8\x02\x6a\x31\x33\x0c\x4c\x0a\xbd\x26\x0b\x2e\x47\x07\x29\x6a\x48\x08\x98\x2a\x4b\x02\xa4\x76\x06\x8c\xcb\x89\xc1\x96\x94\xca\x4c\xa6\x51\xb8\xb5\x71\x55\x06\x13\x4d\xf2\x9d\xd6\x06\xa2\x10\xd2\x8b\xa1\xfa\xc2\xa6\x24\x76\x92\xec\xe4\x0a\x32\x54\x96\x2e\x2f\xa2\x4c\xd9\x1d\x89\xbe\x8a\x73\x5b\x0b\x37\x9e\x47\x5f\x32\x65\x7e\xb5\x37\x33\x41\x99\xd4\x61\x0d\x3b\xeb\xcc\x68\xc5\x1f\xc3\xaf\xc7\xd6\x61\xad\x74\xff\xc5\xb6\x42\x6b\x47\x9f\xc4\xe0\x0f\x69\x83\x93\x17\xc4\x56\x1a\x4d\xa2\xe3\xe9\xf7\x4f\xe7\xee\x77\xcf\x86\x68\x89\xce\x11\xeb\x2f\xdb\x9d\xd5\x8a\x7d\x5b\xdc\x7e\x98\x7e\xba\xfb\xff\xdb\xad\xc3\x1b\x70\x90\x19\x57\x4f\x2c\x3a\x84\xaa\x93\x35\x52\x03\x42\x89\xec\x64\x5a\x29\xe4\x06\xf0\x7b\xb8\x71\xf0\x20\x95\x82\xca\x67\x99\x52\xdd\x39\x19\x9b\x02\x5c\x4e\x50\x32\x2d\xa4\xa9\x6c\x33\x2b\x24\x21\xa0\x10\x60\x18\xcc\x82\xf8\x81\xa5\xa3\x20\x6a\x34\xd9\x26\x87\xc5\x53\x0f\xb6\xf6\x4a\x47\xc5\x76\x97\xf4\x0b\xe3\x3e\xf0\x7f\x52\xc9\x64\x49\x3b\x6f\xe5\x1a\x8e\xf7\x87\x37\x90\x9b\x61\x12\x10\x75\xef\xb2\x32\x28\x67\xfa\x59\x49\x26\x31\xb9\x82\xdb\x9d\x52\x41\x52\x63\x41\x7b\x34\xad\x41\x1d\x90\xe9\xc2\xd9\x29\x79\xb7\xc7\xe4\xfe\x69\xba\x31\x6d\x47\x61\x6f\x5f\xc2\xd3\x15\x89\xfb\x34\x47\x3e\x2c\xfe\x0c\x56\x88\xd2\x9c\x96\x65\xe4\x2e\x04\xeb\x58\xea\x79\x27\x58\x45\x65\x1d\xe4\x46\x1b\xf6\x9c\x98\x10\x2c\x50\x49\x71\xc0\x75\xd0\xcd\x9b\xa8\x72\xb7\x07\x61\xcd\x33\x3d\x60\x1a\x99\xf6\xf0\xcb\x36\xa0\xd7\x51\x87\x07\x50\xf9\x9a\x32\xfc\x3c\x2d\x57\x25\xc1\x67\x5d\x15\xc7\xe0\xdb\xc7\x07\x1b\x13\x0e\xd7\xda\x56\xfd\xb5\xff\x0e\x2f\x00\x1d\xbe\xf3\x13\xbf\xdd\x5e\x4f\xbf\xfe\x36\xfd\x74\x77\x8b\xd3\xbf\xaf\xa7\x5f\x3d\xc1\xfd\xef\xed\xfe\x40\x40\x4b\xfd\x3b\x47\x0f\x85\xaa\x72\x66\x4e\x9a\x18\x5d\x28\xd6\xe3\x03\xf5\x57\xde\xd9\x66\x41\x5a\xd8\x50\x09\xc9\x2a\xd0\x47\x82\xe9\x0f\xd2\x47\x65\x62\x62\x8c\x22\xdc\x53\xcc\x7d\xf0\xa5\x4c\x61\x07\xbf\x37\x5a\xad\x46\xc0\xe7\xfb\x05\xaf\xca\xd7\x96\x6f\x34\x44\x15\x2a\x30\x2c\x43\xe0\x99\x20\x2c\x77\x76\x9c\x82\x32\xac\x94\xbb\x37\x2c\x88\x4f\xc6\x19\x8a\xad\x61\xfc\x8d\xa0\x86\xf6\x08\xfd\x16\x15\xd6\x81\xb0\x8e\x47\xfe\x83\x7a\x55\xd3\x8b\x80\x0d\xe6\x9e\x0c\xb6\x81\xb2\x1d\xf4\x11\xa0\x6e\x1b\x52\x59\xc3\xbb\x84\x89\xd4\x8e\xe6\xc4\xfe\xa7\xae\x94\x8a\xff\x17\x49\x7c\xd2\xec\xce\x2d\x5f\xdc\x0d\x74\x48\xc9\x94\x8e\x57\xc2\x1d\x7d\xe7\x8f\x6d\xd7\xb4\x53\x23\xdb\x3e\x1a\x12\xd7\x51\xf6\x42\x5a\x62\x51\x2a\x1a\x90\xab\x9f\xa3\x86\x3a\x4f\xfd\x46\xf8\xdf\x4d\x54\x5a\x96\xc6\x8e\x95\xa5\x65\x95\x28\x99\xaa\x15\x34\x5a\x4f\xc8\xd5\x1e\x53\x6a\x9e\xf0\xb3\x1c\x57\x34\x2c\x1d\x32\xa9\x1c\x31\x26\xea\x74\xde\xda\xdc\x8c\x12\x8a\xdc\xec\xf3\x22\x2a\xf7\xac\x5c\x56\xec\x5d\x62\xcf\x5e\xbe\x99\x61\x92\x73\x7d\xef\xb7\x85\x71\xba\x09\xa8\x55\xbe\xca\x4e\x93\x19\x2e\xd0\x9d\x8c\x24\x4e\x3f\x89\x83\xc8\xf7\xb5\x87\x0e\x4f\x6b\x3b\x99\xfa\x68\x8d\x9a\x0b\x94\xaa\x77\x83\x9a\x1b\xdd\x5b\xf3\xcd\x97\xc5\xef\x47\xc8\x7e\xec\x2b\x9b\x4a\xc1\x7d\x65\x05\xba\x03\x25\xea\xff\x0d\x63\xb1\x39\xf9\xae\x7d\x84\xfc\x0e\x37\x08\x39\x2e\x08\x10\xd6\x2d\x73\xad\xfe\xdc\xb9\x2e\x05\x69\x27\x33\x39\x0a\xb2\x4e\xcb\x88\x50\xa0\xd4\xd0\x51\xff\x32\x3c\x5d\x69\xf9\xb3\xa2\x9b\xfa\xd8\xe6\xa9\x7a\x98\x3b\xb4\xa0\xe5\xc8\x9e\xd0\x10\xb5\x9e\x3b\xb4\x05\x2e\xef\x15\xe9\xb9\xcb\x4f\x06\x54\xe0\x52\x16\x55\x01\x51\xcd\xf3\x33\x42\x73\x1e\xef\x7d\xfe\x6d\x11\x36\xfd\xc7\x60\x84\xc3\x8e\x03\x0d\xc0\x1d\x67\xa0\x06\x5f\xdb\x2d\x9d\x1b\xa0\xd4\x83\x43\x28\xf5\x2f\x1d\x42\xa9\x87\x86\xb0\x06\xf8\x8b\x86\x30\xdc\x74\x9e\x8a\xcd\x4f\x7e\xf5\xc3\x8c\x29\xa4\xbb\xa7\xa2\x74\xa7\x35\x77\x37\x59\xa0\xe5\xcb\x27\x71\xa9\xdb\x58\xc1\xa6\x2c\x49\x80\xcc\x20\x2c\x01\x86\x21\x1e\x48\xce\xcc\x96\xe1\x6e\xe3\x85\x5a\xf4\xf6\xde\xe4\xd5\x3a\xf4\x92\x65\x81\xbc\x1a\xaf\x43\x8f\xbb\x1b\xd4\x7a\x5f\xa5\x4d\x67\x42\x31\xd6\x0d\x9f\xb4\xe0\xd5\x85\x5b\xbe\x57\x00\xd2\xbe\x36\x19\x05\x47\xad\xed\xdc\x30\x2c\xa5\x4c\xa7\x1f\x9b\x36\x40\x44\x5d\xe1\xcd\x99\xcd\x4d\xa5\x44\xe0\x0a\x42\xe5\xe0\x41\xba\x1c\x52\xe4\xa3\x78\x70\x24\x80\x2f\x7a\x02\xb0\xaf\x73\x02\xb0\xce\x8c\x96\x7b\xb5\xae\x97\xbe\x92\x19\xdc\xe6\xdb\x2a\xa9\x0d\x18\xb6\x2f\x17\x58\x96\x9e\xd7\x9d\x81\x52\xa6\x3f\x02\xd9\x3f\xe4\xa4\xc3\x5e\x17\xdb\x0e\x1b\xde\x18\x38\x03\xef\x68\xe9\x88\x35\xaa\x77\xe7\xde\xc0\x1d\xa3\xb6\x92\xf4\x48\xb5\xb9\x56\x77\xee\x54\x1d\x14\xb3\x10\x8e\xee\x7b\xfe\x13\xc2\x30\xfa\x15\xce\x71\x2f\x0e\xfb\xf7\xb0\x41\x3c\x53\x06\xfb\x04\x29\x08\xf7\x2f\x44\x68\x61\xf6\x94\x55\xd2\xf6\x36\xe3\xe0\x17\x0c\x1b\xd2\x4e\x1e\xfc\x8c\xa0\x95\x6d\xca\x6f\xf0\x3d\xd1\xce\xd1\xed\x23\xcf\x9f\x6e\x3e\x59\xff\x55\x7f\xcf\x73\xf1\x78\xf1\x6f\x00\x00\x00\xff\xff\xe1\x5e\xb6\xd9\x57\x25\x00\x00")

func regoAbstractJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoAbstractJson,
		"rego-abstract.json",
	)
}

func regoAbstractJson() (*asset, error) {
	bytes, err := regoAbstractJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-abstract.json", size: 9559, mode: os.FileMode(420), modTime: time.Unix(1533144450, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoAttributeIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x4f\x6f\xdb\x36\x14\xbf\xf7\x53\x3c\x18\x05\x0a\x6c\x4d\xb1\x01\xc3\x80\xe6\x96\x43\x0f\x01\x76\x28\x86\x9d\x9a\xa6\xc6\xb3\xf8\x64\x71\xa1\x48\xf6\x91\x72\xec\x0d\xf9\xee\x03\x29\xc9\x96\x12\xdb\x92\x25\xc5\xee\x74\x49\x20\x3d\xfe\xf4\x7e\x7c\xff\x29\x43\xe3\x9a\xf9\x8d\xa5\xd9\x35\xcc\xcc\xe2\x6f\x4a\xfc\xec\xfd\x9b\xd6\x53\x41\x2e\x61\x69\xbd\x34\x3a\x08\xfd\x21\x9d\x07\x93\xc2\x8a\xd8\x49\xa3\x49\x00\x7a\xcf\x72\x51\x78\x72\x1f\x9e\xaf\x45\x21\x64\x58\x88\xea\x33\x1b\x4b\xec\x25\xb9\xd9\x35\xa4\xa8\x1c\x3d\x13\xb5\xe8\x3d\xb1\x6e\xc9\xfd\xdb\x12\x89\x62\xdf\x56\x77\xbf\x5c\x7d\xbc\xff\xf9\xeb\xdb\xbd\xcf\x5b\x7c\x90\x19\x37\xcf\x54\xea\xa2\xb5\x23\x03\x52\x03\x82\x45\xf6\x32\x29\x14\x72\xcd\xf8\x03\xdc\x7a\x78\x94\x4a\x41\xe1\x08\x50\xa9\xe6\x9a\x94\x4d\x0e\x3e\x23\xb0\x4c\x2b\x69\x0a\x57\xaf\x72\x80\x5a\x00\x0a\x01\x86\xc1\xac\x88\x1f\x59\x7a\x8a\xa2\x46\x93\x03\x41\x89\x42\x26\xf1\x7c\x0b\xb7\xfa\x4a\x4f\xf9\xfe\x3d\xe9\x67\xc7\x63\xe4\xff\x24\xcb\xe4\x48\xfb\xa0\xe5\x8e\x4e\xd8\x8f\xa0\x20\xd7\x8f\x49\x40\x89\x7d\x48\xcb\x08\xce\xf4\xbd\x90\x4c\x62\x76\x0d\x77\x07\xa5\xa2\xa4\xc6\x9c\x8e\x20\xed\x48\x75\xc8\x34\xe9\x1c\x94\xbc\x3f\xa2\x72\x7f\x3f\x6d\x2d\xb3\xc7\x9d\xb5\xfd\x0a\xa5\xcc\x23\x89\x79\x92\x21\x77\x8b\xbf\xa0\x15\xad\xb4\xa4\xb5\x05\x9f\xa1\x07\x04\xe7\x59\xea\x65\xc3\x58\x79\xe1\x3c\x64\x46\x1b\x06\x6f\x60\x41\xb0\x42\x25\x45\xc7\xd6\x41\xd3\x6f\x4a\xc8\xc3\x3b\x18\xae\xa7\x0e\x53\xec\x68\x1a\x99\xf4\xd8\x97\x7d\x44\x6f\x4a\x8c\x40\xa0\x08\x31\x65\xf8\xa5\x5b\x6e\x2c\xc1\x27\x5d\xe4\xa7\xf0\x3b\x96\x0f\x5a\x0b\xba\x63\x6d\x2f\x7e\xb5\x7f\xdd\x2f\x80\x46\xc2\x0b\x0b\xbf\xdd\xdd\x5c\x7d\xf9\xf5\xea\xe3\xfd\x1d\x5e\xfd\x73\x73\xf5\x25\x64\xb8\x9f\xbe\xbe\x3d\x6e\x89\x70\x3d\x8d\xb3\x55\xe1\xcd\x92\x34\x31\xfa\x18\xad\xa7\x5b\xea\xaf\x8c\x1a\x76\x91\x0e\x5a\x90\xb0\xd8\xc4\xfc\xb1\xc0\xe4\x81\xf4\x49\xae\xb8\x30\x46\x11\x1e\x89\xe6\x3e\xfc\x12\x26\x0c\x9a\xce\x8d\x56\x9b\x09\xf8\x25\xa8\x21\x40\x85\xe0\x72\xe4\x41\x14\x31\x04\xe3\x6b\x08\x42\x2a\x88\xaf\x3b\x3b\x4f\x41\x29\x16\xca\xcf\x0d\x0b\xe2\xc1\x3c\x63\xb4\xd5\x29\xbf\x65\xd4\xc2\x85\x2a\x1f\x6a\x54\x7c\x0f\xc4\xf7\x04\xe6\x0f\xd4\x2b\x9c\x5e\x85\x6c\x54\x77\x30\xd9\x9a\xca\x7e\xd2\x27\x90\xba\xab\xb3\xca\x8e\xde\x7b\x98\x49\xed\x69\x49\x1c\xfe\xd5\x85\x52\xe5\xdf\x7c\x51\xde\xa9\xcb\xf3\x36\x61\xdc\x8f\xdc\x10\xcb\x94\x4c\x17\xc2\x0d\xbc\xf3\xdb\xb6\xa9\xda\x50\xcb\x6e\x6f\x8d\xb1\xeb\x24\xc5\x90\xd6\x98\x5b\x45\x23\x7c\xf5\x53\x89\x50\xf9\x69\xa8\x84\xff\x5f\x47\xa5\xb5\x35\x6e\x2a\x2f\xb5\xc5\x42\xc9\x44\x6d\xa0\x46\x1d\xe0\xab\x3d\x96\x54\x79\x22\xac\xf2\x5c\xd0\x38\x77\x48\xa5\xf2\xc4\xb8\x50\xc3\xf3\x56\xbb\x18\x2d\xa8\xcc\xcd\xc1\x2f\x4a\xf0\x90\x95\x6d\xc1\x61\x4b\xdc\xd9\xc3\x37\x35\x4c\x72\xa9\xe7\xa1\x2c\x4c\xd3\x4d\x40\x05\x79\x91\x4a\x93\x1a\xce\xd1\x0f\x66\x52\x2e\x1f\x94\x83\x28\x34\xb6\x5d\xd3\xd3\x4e\x4f\xa6\x3e\xa8\x25\x72\x8e\x52\xf5\xee\x50\x33\xa3\x7b\x23\xdf\x7e\x5e\xfd\x76\x82\xec\xef\x7d\x65\x13\x29\xb8\xaf\xac\x40\xdf\x11\xa2\xe1\x1a\x97\xc5\x96\x14\xda\xf6\x09\xfc\x3b\x1e\x21\x64\xb8\x22\x40\xd8\xb5\xcc\x15\xfc\xb9\x7d\x5d\x0a\xd2\x5e\xa6\x72\x12\x66\x8d\x96\x11\x21\x47\xa9\xa1\x01\xff\x3a\x79\xba\xd0\xf2\x7b\x41\xb7\xd5\xdc\x16\x52\xf5\xb8\xed\xd0\x82\xd6\x13\xef\x84\x86\x12\xf5\xdc\xa6\xcd\x71\x3d\x57\xa4\x97\x3e\x1b\x4c\x28\xc7\xb5\xcc\x8b\x1c\x4a\x98\x97\x33\x42\x3d\x90\xf7\x1e\x80\xb7\x0c\xeb\xfe\x63\x34\xc3\x71\xe3\x40\x4d\xf0\xc0\x0c\x54\xf3\xdb\x76\x4b\xe7\x26\x28\xf5\x68\x13\x4a\xfd\x43\x9b\x50\xea\xb1\x26\xac\x08\xfe\xa0\x26\x8c\x47\x9d\x43\xb9\x85\xc5\x17\x1f\x66\x4c\x2e\xfd\x9c\x72\xeb\x87\x35\x77\xb7\x69\x4c\xcb\xef\x9f\xd9\xa5\x6a\x63\x05\x1b\x6b\x49\x80\x4c\x21\xbe\x02\x0c\x43\x39\x90\x9c\x39\x5b\xc6\xb3\x8d\x57\x6a\xd1\xb7\xe7\x26\x17\xeb\xd0\x2d\xcb\x1c\x79\x33\x5d\x87\x5e\x56\x37\xa8\x70\x2f\xd2\xa6\x33\xa1\x98\xea\x84\x4f\x3a\x08\x70\xf1\x94\xef\x02\x44\xb6\xdf\x4d\x26\xe1\x51\xa1\x9d\x9b\x86\xa3\x84\x69\xf8\xd8\xd4\x22\x51\x62\xc5\x4f\x67\x2e\x33\x85\x12\x31\x57\x10\x2a\x0f\x8f\xd2\x67\x90\x20\x9f\x94\x07\x27\x22\xf8\xaa\x13\x80\xbb\xcc\x04\xe0\xbc\x99\xcc\xf7\x2a\xac\xd7\x3e\x92\x19\xdd\xe6\xbb\x62\x51\x29\x30\xae\x2e\xe7\x68\x6d\xc8\xeb\xde\x80\x95\xc9\x43\x4c\xf6\x8f\x19\xe9\x58\xeb\xca\xb6\xc3\xc5\x2f\x06\xde\xc0\x3b\x5a\x7b\x62\x8d\xea\xdd\xb9\x0b\xb8\x67\xd4\x4e\x92\x9e\x28\x36\x77\x70\xe7\x76\xd5\x51\x36\x8b\xe6\x68\x7e\xe8\x1f\x60\x86\xc9\x8f\x70\x4e\xfb\x72\xd8\xbf\x87\x8d\xe2\xa9\x32\xd8\xc7\x48\x51\xb8\x7f\x20\xc2\x96\x66\x4f\x59\x25\x5d\x6f\x35\x3a\x7f\xc2\xd0\x92\xf6\xb2\xf3\x77\x04\x5b\xd9\x3a\xfc\x46\x9f\x13\x1d\x7c\xba\xff\xc9\xcb\xbb\xed\x3b\x4f\x6f\xfe\x0b\x00\x00\xff\xff\x7f\x2e\xce\xf9\x94\x23\x00\x00")

func regoAttributeInBytes() ([]byte, error) {
	return bindataRead(
		_regoAttributeIn,
		"rego-attribute.in",
	)
}

func regoAttributeIn() (*asset, error) {
	bytes, err := regoAttributeInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-attribute.in", size: 9108, mode: os.FileMode(420), modTime: time.Unix(1528494787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoInfoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\xbd\x4e\xc3\x40\x0c\xc7\xf7\x3c\x85\x75\x30\xb6\x0d\x13\x43\x36\xc6\x0e\xa0\x4e\x2c\x88\xc1\x4d\x7c\xad\xab\x34\x77\xd8\x0e\x02\x55\x7d\x77\x74\xb9\xa6\x4a\x3f\x36\x96\x44\xf9\xd9\xff\x8f\xf8\x50\x00\x00\xb8\x47\xad\xb7\xb4\x47\x57\x81\xdb\x9a\xc5\xaa\x2c\x77\x1a\xba\x79\xa6\x8b\x20\x9b\xb2\x11\xf4\x36\x7f\x7a\x2e\x33\x7b\x70\xb3\xac\x34\xb6\x96\x92\x6e\xd9\xf9\x30\xc2\x86\xb4\x16\x8e\xc6\xa1\x4b\xa3\x57\x32\x04\xee\x7c\x90\x3d\x26\x06\xb8\x0e\xbd\x01\x82\x92\x41\xf0\xa0\x91\x6a\xf6\x5c\x0f\x43\x5d\x9c\xad\x7f\xe3\xe0\x1c\xd6\x3b\xaa\x6d\xa4\xd8\x34\x9c\xf6\xb0\x5d\x49\x88\x24\xc6\xa4\xae\x02\x8f\xad\xd2\x69\x45\xe8\xab\x67\xa1\xc6\x55\xf0\x31\x90\x81\x46\x21\xcf\x3f\x27\x9b\xbc\x17\x82\x4d\xbf\xbf\x49\x34\x55\x1e\xc8\xe7\xac\x28\x4e\xba\x49\xcc\xe1\xc6\x6f\xca\x2e\x6a\xab\x09\x77\x9b\x89\xff\xbd\xd3\xac\x06\x13\xb0\x00\xbd\x52\x7a\xd5\xd8\xb6\x80\x91\xd5\x9d\x75\xc7\xeb\xca\xff\x8b\x7c\xc3\x3d\xa5\xab\xdb\x96\x20\xd9\x5d\x9e\xff\x56\xec\xb1\x6f\x53\x66\xce\xbe\xdb\x6a\x3c\xdc\x4d\xb1\xab\xe8\xf7\xbc\x37\xa6\xbf\xac\x96\xd7\x71\xe3\x9f\x70\x67\xb4\x21\x99\xc4\x15\xf9\x79\x2c\xfe\x02\x00\x00\xff\xff\xb8\x06\xde\x01\xb3\x02\x00\x00")

func regoInfoJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoInfoJson,
		"rego-info.json",
	)
}

func regoInfoJson() (*asset, error) {
	bytes, err := regoInfoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-info.json", size: 691, mode: os.FileMode(420), modTime: time.Unix(1528494787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoParamIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\xcb\x6e\xdc\x3a\x0c\xdd\xe7\x2b\x08\xaf\x83\xfb\x01\x59\x27\x8b\x0b\xb4\xc5\xa0\x0d\xba\x09\x82\x80\xb6\x39\x33\x2c\xf4\x70\x25\x39\x0f\x14\xf9\xf7\x42\xf6\x78\x62\x8d\x2d\x5b\xb6\x51\xb4\xde\x0c\x6c\x91\x47\xd4\xe1\x21\xc5\x81\xde\x93\x39\x76\x82\xb2\x1b\xc8\x76\x68\x50\x92\x23\x03\xdf\xc8\x65\xd7\x57\xa1\xd5\x5b\xd5\x18\xe9\xfc\x07\x15\x83\x55\x2c\x4b\x76\xac\x15\x8a\x9d\xd1\x15\x19\xc7\x64\xb3\x1b\xd8\xa3\xb0\x74\x61\x5a\xf5\x0d\x7e\x05\x6b\xcd\xba\xa1\x9f\x35\x1b\x2a\x47\x57\x23\x01\x5b\xf8\xda\x7a\x49\x52\xce\xc2\xdd\x6b\x65\xc8\x5a\xd6\xca\x5e\x04\x7a\xc6\x28\xc9\x16\x86\x2b\x1f\xb3\x47\xba\xa5\x3d\x2b\x82\x97\x23\x3a\x28\xb4\xcc\x59\xa1\x5f\xb2\xa0\xf7\x50\x7d\xec\x82\x86\xa0\x8b\xef\xbf\x18\x74\xc7\x14\x1a\x83\x6f\x31\x23\x76\x24\xc7\x09\x58\x84\x93\x88\xb5\x08\x6f\x01\x66\x80\x6b\x9d\x61\x75\xc8\x26\x1d\xde\xa3\xab\xe3\x2b\xc3\xaf\xef\xc3\xc0\x33\x52\xce\xc4\xf4\x04\x81\x62\x3e\xb1\x75\x3e\xa7\x1f\xca\x49\x16\x88\x7f\xcd\x09\xdc\x91\x40\x9c\x50\xf0\x19\x59\x60\x2e\xa8\xa7\x91\x3f\x2f\x8b\x81\xfa\xa7\xb4\x11\x3b\x06\x82\x65\x75\xe8\x47\x3e\x85\x32\x59\xfc\x81\x65\x7a\x23\x08\xdc\x7a\x45\xff\x30\x2d\x4c\x85\x92\xe6\xc4\xdb\x3f\xf4\x8c\x69\x73\xb2\xa8\xc9\xe3\x44\xc8\x33\x7d\x6c\x18\x74\x5a\x31\x0d\x9b\xf1\x97\xf9\x13\xc3\x48\xaa\xbd\x9b\x17\xa9\x17\xec\x39\xc9\x31\x75\x86\x31\x2c\x29\xe8\x05\xa9\x58\x4b\xc0\x6d\x72\x3a\x47\xb6\xcc\x7a\xde\x7f\x9f\x8e\x13\xd6\x3a\x1e\xee\xbd\xf3\x72\x02\xee\x8f\x04\x7e\xdf\xe0\x2e\x5b\x73\xf2\x04\x0f\x52\xb5\x9c\xad\xe1\xb3\x75\x32\x6e\x63\xcd\xca\xd1\x61\xb2\x4f\x05\xe6\x7b\xa1\x71\xaa\x55\x05\xc6\xb9\xd6\x82\x30\x45\x5e\x70\x3e\x66\xa2\x6d\x59\x1b\x4c\x94\x2e\xb4\x89\x97\x13\x1d\xa9\x7b\x1e\x37\xc9\x50\xd6\xc2\x71\x25\xd6\x4b\xf1\x73\x0b\xc0\x05\xbb\xb9\x51\x02\xa2\xe3\x96\x05\xbe\xa8\x47\x28\x50\x41\x4e\x60\x49\x39\xe8\x82\x04\xcf\x48\xf4\x5e\x0d\x23\x3d\x09\xb6\x4b\xe7\x26\x92\x50\x08\xfd\x42\xe5\x53\x71\xd4\x5c\x24\x74\x79\x88\x70\xb5\xd3\xd6\xb2\x20\xf8\x8e\xa2\xa6\xd8\xbc\x11\x80\x5c\xb0\xf5\x7f\xcb\x52\x53\xc3\x6c\xc1\x8b\xef\xba\x99\x41\x2c\xa0\x10\x2d\x83\x7e\x0f\x3f\x88\x3c\x27\x6f\xb2\x64\x1c\x84\x65\x23\x21\x2c\x6d\x9b\x30\x39\x1a\x42\xd2\x3d\xb3\xc7\x5a\xb8\xa7\xe6\xfc\x1b\x6e\x9a\x06\xa5\x4d\xd5\x3a\x5d\x37\xfe\x4d\x14\x83\xdb\xc6\xcb\x5d\x4b\x76\x8e\xca\x05\x09\x7a\xe8\x32\xd4\xeb\x52\xbd\x66\x08\x99\xaa\x85\x68\x7f\x65\xde\x7e\xe9\xc6\xb4\x33\xf9\xdb\xba\x05\xbd\xa2\xac\x04\x6d\xe4\xf6\xae\x45\x59\xcd\x6d\xe7\x3f\xce\xed\xbf\x45\xe8\xf6\x7f\x39\x57\xe1\xdb\xef\x00\x00\x00\xff\xff\x76\x36\xe8\x20\xb1\x0f\x00\x00")

func regoParamInBytes() ([]byte, error) {
	return bindataRead(
		_regoParamIn,
		"rego-param.in",
	)
}

func regoParamIn() (*asset, error) {
	bytes, err := regoParamInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-param.in", size: 4017, mode: os.FileMode(420), modTime: time.Unix(1533070885, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x31\x6f\xc2\x30\x10\x85\x77\x7e\xc5\xc9\x74\xaa\x0a\xee\xd4\x81\x8d\x81\xb1\x12\xa2\xec\x91\xb1\x9f\x6b\xa3\x60\x5b\xe7\x5b\x50\x95\xff\x5e\x39\x29\x69\xd3\x2d\x79\xf7\xbd\x7b\xe7\xf7\xb5\x22\x22\x52\x4f\xd5\x06\xdc\x8c\xda\x91\x0a\x22\x65\xa7\xf5\xb5\xe6\xb4\x99\xd4\x6d\xe6\x4f\xed\xd8\x78\xd9\xbc\xbe\xe9\x49\x5b\xab\x97\xc9\x29\x51\x7a\x34\xdf\x47\x30\x0c\x47\x47\xc3\xe6\x06\x01\xd7\x07\xe1\x50\x2d\xc7\x22\x31\xa7\xc6\x9d\x03\xa8\xcc\x10\x39\xf8\x98\xe0\x28\x80\x41\xd6\x24\xba\x80\x18\x1e\x0c\x8b\x64\xe1\xe8\x72\xa7\x2c\x01\x4c\xb5\xc0\x46\x1f\xad\x69\x9b\xea\x76\x3e\xe0\x5e\xc6\xfc\x7c\xb9\xc2\xca\x43\x35\xce\xc5\xc6\x99\xfe\xc8\xb9\x80\x25\xa2\xaa\x1d\x79\xd3\x57\xfc\x20\xc5\x88\x80\xd3\x62\x3e\xd5\x31\x8e\xb7\xcf\x8b\xff\xa9\x26\x86\x6f\x59\x6b\x3d\x9e\x3d\x26\x54\xfd\xfb\x1a\x35\xe3\xc3\xf8\x35\xcc\x15\xcc\xf4\x32\xe4\x8f\xb5\xe9\x5d\x77\xdc\x9f\xf6\xef\x87\xf3\xe1\xd4\x75\xff\x77\xad\x86\xd5\x77\x00\x00\x00\xff\xff\xc9\x23\xe7\x9b\xae\x01\x00\x00")

func regoSharedParamsInBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsIn,
		"rego-shared-params.in",
	)
}

func regoSharedParamsIn() (*asset, error) {
	bytes, err := regoSharedParamsInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.in", size: 430, mode: os.FileMode(420), modTime: time.Unix(1533070711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSharedParamsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x6f\xdc\x38\x0c\xbd\xcf\xaf\x20\x9c\x3d\x2d\x92\x99\x3d\xed\x21\xe7\xe4\x50\xa0\x2d\x82\x26\xe8\x25\x08\x02\xda\xa6\xc7\x0a\x64\xc9\x95\x38\xf9\x40\x31\xff\xbd\x90\x34\x76\xec\xf8\x7b\x06\x45\xdb\x4b\x63\xe9\x91\x22\x1f\x9f\x28\xce\xcf\x15\x00\x40\xf4\x8f\x4d\x72\x2a\x30\xba\x84\x28\x67\x2e\x2f\x37\x9b\x27\xab\xd5\x45\x58\x5d\x6b\xb3\xdd\xa4\x06\x33\xbe\xf8\xef\xff\x4d\x58\x3b\x8b\xce\x83\x25\x0b\x96\xe4\xec\x6e\x73\x34\x94\xc2\x0d\x1a\x2c\x88\xc9\xd8\x0a\x91\x92\x4d\x8c\x28\x59\x68\xe5\x70\x77\x39\x41\x59\x83\x20\xa5\x4c\x28\x4a\x21\x27\x43\x90\xa0\x82\x98\xc0\x50\x46\x86\x12\x52\x09\xa5\x10\xbf\x81\xe6\x9c\x0c\xd8\x92\x12\x91\x89\x04\x9d\x27\xbb\xae\x03\x78\x2b\xfd\xf9\x3a\x7e\xa2\x84\xab\x55\x4c\x53\xe1\x70\x28\x6f\x8c\x2e\xc9\xb0\x20\x1b\x5d\x42\x86\xd2\xd2\x01\x52\x22\x33\x19\xd5\xda\x0f\x74\xf8\xed\xf5\xbf\xad\xef\x40\x93\xa1\xcc\x9d\x75\xb6\xf1\x61\xfb\x13\xec\xe6\x3d\x9b\xa8\x86\xef\xfd\x5f\xfb\x9a\x82\x1a\xdd\x3e\xa4\x61\xda\x39\xac\x66\xb6\xa6\x14\x6e\xa9\x4a\xf0\x1d\xd5\x97\x7e\xbd\x3b\x4d\xc3\x7b\x28\xfd\x3c\xd4\xfb\x86\x7e\xec\x84\xa1\xb4\x77\x77\x20\x60\x0b\xdf\x82\x55\x41\x8a\x2d\x5c\xbf\x96\x86\xac\xf5\x34\x9c\xf7\xfb\xf8\x20\x96\x2b\xaf\x0e\x78\xc9\x91\x21\xd1\x45\x2c\x54\xa8\x3e\xe8\xac\x29\x22\x34\x4e\x34\x21\xbe\xf5\x90\xeb\x8a\x29\x34\x06\xdf\x86\x40\x82\xa9\xe8\x27\x60\x91\x9f\x99\xbe\x16\xf9\x5b\xe0\xb3\xe5\xd7\xb2\x11\x6a\x1b\x8d\x1a\xec\x07\x77\xfb\x77\xba\xab\xfb\x6e\xe0\x11\x29\x36\x43\x7a\x82\x96\x62\x3e\x0b\xcb\xae\xa6\x9d\xee\xd1\x31\xe9\x08\xc4\x7d\xc6\x04\x9c\x13\xc8\x83\x17\x7c\x46\x21\x31\x96\xcd\x46\xf3\xfb\x65\xd1\x51\xff\x98\x36\x86\xd2\x40\xb0\x42\x6d\x9b\x91\x8f\x79\x19\xbd\xfc\x2d\xe4\xfc\x46\xd0\x32\x6b\x5c\xfa\xfb\x71\x61\x2a\x2c\x68\x4a\xbc\xcd\xa4\x27\xa0\x3e\xb3\x41\xc8\xc3\x48\xc8\x13\x7d\xac\x1b\xf4\xbc\xcb\xd4\x6d\xc6\x5f\xa7\x33\x86\x9e\x52\x3b\x33\x27\x52\x6e\xbe\x83\x43\xea\x6c\xc7\xb0\xe4\x42\x2f\x28\xc5\xb1\x04\x5c\xcd\x2e\x67\xcf\x91\x51\xc3\xfa\xcf\xd3\x71\xf0\x75\x1c\x0f\x77\xce\x78\x39\x01\x6e\x10\x72\xe7\xb6\xde\xb2\x63\x32\x9f\x61\x41\x6a\x57\x4c\xde\xe1\x1a\x3d\xdb\xaf\x47\x0b\xc5\xb4\x1d\xed\x53\x2d\x78\x26\x35\x8e\xb5\xaa\x16\x38\xd6\x5a\x12\xce\x91\x17\xd4\x69\xce\xc4\xa6\x3b\x83\x33\xa5\x0b\xa1\xf0\xc5\x48\x47\xaa\xfe\x3d\x9c\x24\xc3\x62\x27\x59\x94\xf2\x78\x29\x7e\x09\x0e\x44\x22\x78\x6a\x94\x80\xc1\x71\xcb\x82\xf8\x70\x1f\xab\xc1\xdc\x92\x62\xa8\x82\x04\xc7\xc8\xe0\xbb\xda\x8e\xf4\x20\xd8\xaa\x9c\x27\x91\x84\x52\xea\x17\x4a\x1f\x93\x5c\x8b\x64\x46\x97\x87\x01\xae\x6e\xb4\xb5\x42\x12\x7c\x47\xb9\xa3\xa1\x79\xa3\xe5\xe4\x03\x5b\x9f\x02\x4b\xfe\x0e\x0b\x0b\x4e\x7c\xe7\x7e\x06\xb1\x80\x52\x06\x06\xdd\x19\x6e\x10\x79\x9e\x7d\xc8\x92\x71\x10\x96\x8d\x84\xb0\xb4\x6d\xc2\xe8\x68\x08\xb3\xde\x99\x0c\x77\x92\x1f\x7d\xfe\x27\xbc\x34\xde\x4b\x28\xd5\x71\xba\xf6\xf6\x3e\x8a\xce\x6b\xe3\xe4\xae\x0b\xc1\x4c\xe9\x82\x02\xdd\x57\x15\x6a\x74\xa9\x46\x33\x84\x48\xed\xa4\x0c\xff\x17\x71\x58\xa9\xc6\xb4\x9a\xfc\xd3\xba\x05\xbd\x62\x51\x4a\x3a\x91\xdb\xeb\xe0\xe5\x68\x6e\x2b\xfb\x7e\x6e\xff\x2e\x42\x4f\xff\x95\xb3\xea\xff\x3a\xfc\xdc\x5f\xed\x57\xbf\x02\x00\x00\xff\xff\xa9\xb8\x42\xf1\x51\x11\x00\x00")

func regoSharedParamsJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSharedParamsJson,
		"rego-shared-params.json",
	)
}

func regoSharedParamsJson() (*asset, error) {
	bytes, err := regoSharedParamsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-shared-params.json", size: 4433, mode: os.FileMode(420), modTime: time.Unix(1533144450, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecIn = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\xcd\x8e\x1b\x37\x0c\xbe\xef\x53\x10\x93\x1e\x77\xe3\x9e\x7a\xf0\xcd\x6d\x16\x6d\x81\x06\x58\xb8\xee\xa9\x08\x06\xb4\xc4\xb1\x95\xc8\xd2\x44\xd2\xc4\x5d\x04\x7e\xf7\x42\xf3\xa3\xf9\x1f\xcf\xa0\xbb\x6e\x9b\x4b\x90\xa5\x48\x8a\xfc\xc8\x8f\xe2\xf8\xeb\x1d\x00\x40\xf4\x9d\x65\x47\x3a\x61\xb4\x86\xe8\xe8\x5c\xba\x5e\xad\x3e\x5a\xad\x1e\x0a\xe9\x5b\x6d\x0e\x2b\x6e\x30\x71\x0f\xdf\xff\xb0\x2a\x64\x6f\xa2\xfb\xc2\xd2\x09\x27\xc9\xdb\xfd\x9e\x12\x13\x89\x60\xe8\x84\x56\xd5\x29\x27\xcb\x8c\x48\x73\xd1\x1a\xa2\x2d\xa5\x86\x2c\x29\x67\x01\x15\xe8\xfd\x47\x62\x0e\xce\xc2\x1d\x01\xa5\x04\xe1\xc5\xce\x19\xb1\xcf\x1c\x79\x0d\x0e\x86\x64\xee\xcf\x86\xeb\x9e\xd3\xfc\xb6\xc2\xb6\x92\x22\xe7\xc2\xab\xa1\x7c\x32\x3a\x25\xe3\x04\xd9\x68\x0d\x09\x4a\x4b\xa5\x8a\xa1\xcf\x99\x30\xc4\xa3\x35\xfc\x99\x4b\x72\xe9\x49\x73\x92\x51\xfe\xf7\x87\x52\x31\x6d\x7a\xf8\x5a\xab\xd6\x91\xb5\xe4\x05\x7c\x86\x12\x1f\xd5\x9b\x15\xa7\x44\xa8\x3c\x16\xbb\x6a\x58\x04\xf5\xcb\x7d\xed\xb1\x4e\xae\xe7\xb0\x4a\x13\x8d\xc1\xe7\xe8\xbe\x7d\xd8\x01\xf5\x37\x61\x1d\xe8\xa4\xc6\x0a\xf6\xe4\xce\x44\x0a\xdc\x91\xc0\x54\x90\x13\xaf\x00\xf7\xc0\x6a\x77\x24\x03\x5a\x91\x7d\xdb\x75\x2f\x1c\x9d\xfa\x21\x4d\xe4\x59\x5d\x1c\xb5\x0c\x2e\x83\x39\x17\x80\xcf\x04\xb0\x51\x9d\xda\xe3\x25\xb4\x56\x50\x6c\x17\x6a\xe4\x8a\xd0\xa8\xef\xf3\xf3\x69\x4c\x7f\xd1\x92\x5b\xd8\xa3\x15\x0c\x84\x4a\xb4\x39\xe5\x19\x7a\x98\x87\x41\xed\xa1\x38\xd8\xa8\xe1\xf4\x7a\xc3\x36\xba\x64\xa0\x71\xc3\x69\x8a\xec\x13\x1e\xa8\xe3\xbf\x34\xb4\x2e\x56\x78\x1a\x3b\xd4\x99\x61\x34\xaa\x40\xca\x09\xf7\x3c\x7a\xdc\xc4\xab\x75\xfa\xe1\xfe\xae\x1d\xff\x08\x9f\x6a\x28\xa4\x40\x3b\x72\xd8\xbb\xaa\xd1\xee\xa5\x1d\x38\x5d\x97\x03\x10\x6c\x73\x0c\x75\xab\x12\x7c\x4e\xf1\x2b\x28\x8d\x13\xa1\xe7\xc7\x3a\x23\xd4\x21\x1a\x54\xbc\xf4\xa4\x97\x01\x40\xb3\x94\xa3\xa3\x71\x14\xa6\xa9\x87\xac\x5f\x89\xb1\x9b\x38\x49\xba\xd5\x4d\xcd\xca\xcd\x2b\xef\xee\x48\xd0\x10\xcd\x67\x5c\x70\x78\xad\x26\x43\x91\x36\xbb\x7d\x6e\xa4\x3f\xe1\x89\xe4\x03\x43\x4b\x1c\xbe\x90\xb1\xad\x68\x4b\xea\xbd\x6c\x90\x7f\x39\x52\x7c\x39\x53\xf6\x68\xa9\xcd\x0b\x70\x47\x61\x3b\xa2\xd2\x3b\xfc\xaf\x58\x73\x20\x77\x8b\x46\xae\xa6\xec\x92\x26\xf6\xe5\xaf\xfa\xa1\xb4\xbf\x51\x33\xa7\x46\x7c\x99\x9c\x25\x03\xd1\x0e\xac\x09\xc2\x42\xe9\xe9\x6a\x74\x7b\xad\x25\xe1\x4c\x30\xdb\x4f\xcf\x92\x20\x53\x99\x19\x94\xb7\x21\x5b\xfd\x7a\x2e\x89\x30\x53\xe2\x73\x56\xd6\x3e\x40\x2a\xd4\x21\x0f\xf4\x15\x4a\x6d\xb4\x9e\x20\xc0\xbc\x3a\x23\xf3\x7b\xb7\x2d\xb0\xd4\xda\x2d\x7c\x42\xc7\x6b\x3f\x63\x1d\x4c\xd1\xe0\x89\x1c\x99\x62\x62\xc4\xf1\xd3\x66\xbb\x79\xff\xb8\x7b\xdc\xc6\xf1\xa0\x41\x67\x0b\x8f\xe3\xcd\x6e\xb7\xfd\xf5\xc7\x3f\x76\x8f\x23\x06\x61\x39\x1d\x5f\x08\xb7\x95\xca\xf4\x4e\xb8\x91\x52\x9f\xf3\x7d\x83\x13\x93\x68\x08\x30\xec\xdc\xf5\xca\x7d\xd6\x6d\xfc\xfa\xfb\xf5\x8d\x36\xc3\xba\x81\xff\xd9\x7e\xb6\x9c\x08\xc1\x02\x32\xff\x36\xa2\x05\x04\x29\xd4\x27\x0f\x5d\x41\x58\x89\x75\xff\xbd\x24\x1d\x98\xa1\x6f\x6e\x89\xba\xd1\x13\xf7\x4a\xfb\xe7\x8c\x19\xd0\xf1\x71\x9d\xa7\xb0\x61\x33\xe8\xda\xfa\x3d\x22\xff\x60\x80\xe2\x86\xe2\xff\xd5\xad\xff\x16\x3d\xa7\x3e\xa0\x5a\x8a\xd7\xf8\x39\x6b\xc9\xee\x63\xf8\xae\x61\x36\xc2\xc0\x0e\xa0\xef\x86\xb6\xf2\x61\x10\x7b\x60\x2e\x21\x31\xf7\x4f\x14\xf3\x13\x62\x59\x3e\xde\x4a\x0c\x0d\xf2\xb1\x84\x76\x24\xa5\x05\xd1\x4e\xc5\xaf\x3d\x8d\x08\x5e\x72\xf1\x39\x48\xbd\x47\x19\x77\xde\xbc\xe9\xfc\x7e\xce\x6d\xe0\x29\xd8\xc0\x96\x12\x32\xa4\x18\xd9\x99\x69\x06\x03\x3f\x7f\x8b\x18\xa0\x8e\x01\x72\x3a\x13\x07\x51\xfc\x5e\xd4\x08\x0f\x12\x21\x87\x3e\xfe\xe1\xbf\xf9\x2d\x30\x07\xd7\xe1\x29\xd6\xb0\x9c\x3f\xc1\xee\x8a\x7f\x2f\x77\x7f\x07\x00\x00\xff\xff\x0a\x03\xa0\xa0\x43\x15\x00\x00")

func regoSpecInBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecIn,
		"rego-spec.in",
	)
}

func regoSpecIn() (*asset, error) {
	bytes, err := regoSpecInBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.in", size: 5443, mode: os.FileMode(420), modTime: time.Unix(1533144415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoSpecJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x5b\x6f\x23\xb7\x15\x7e\xdf\x5f\x71\xa0\x2c\x10\xa0\xb5\xd7\x29\x50\x04\x88\xdf\x16\xdd\x45\x6b\xa0\x09\x8c\x4d\xd0\x87\x18\x8e\xc1\x99\x39\x23\x31\xe6\x90\x13\x92\x23\xcb\x0d\xfc\xdf\x0b\x92\x73\xd5\xdc\x48\x69\x24\x3b\x45\xf4\x90\xec\x0e\x0f\x0f\x79\xae\xfc\x0e\x2f\xfb\xfb\x3b\x00\x80\xd5\x7b\x15\x6f\x30\x23\xab\x6b\x58\x6d\xb4\xce\xaf\xaf\xae\x7e\x55\x82\x5f\xba\xaf\x1f\x84\x5c\x5f\x25\x92\xa4\xfa\xf2\x9b\x6f\xaf\xdc\xb7\xaf\x56\x17\xae\xa7\xa6\x9a\xa1\xe9\xf7\x63\x8e\x31\x4d\x69\x4c\x34\x15\xbc\x6a\x4d\x50\xc5\x92\xe6\xf6\xd3\x35\xac\xbe\x60\x2e\x51\x21\xd7\x0a\x08\x07\x11\xfd\x8a\xb1\x86\x27\xaa\x37\x40\x18\x03\x6a\x3e\x6b\x2d\x69\x54\x68\x34\x14\x09\x48\x64\x96\x9f\xaa\x87\x7b\xce\xed\x68\xae\x6f\xf5\x95\x24\x09\x35\x64\x84\xdd\x4a\x91\xa3\xd4\x14\xd5\xea\x1a\x52\xc2\x14\x96\x24\x12\x7f\x2b\xa8\xc4\x64\x75\x0d\x77\xf6\x8b\xfd\x9a\x89\x04\xd9\xca\xfe\xfd\xbe\x24\xcc\xdb\x1c\x7e\x6f\x48\x9b\x99\x75\xbe\x3b\xf5\x49\x4c\xcd\xac\xbe\xba\x4a\x30\xa5\xdc\xce\x45\x5d\xb5\x7a\xd4\xe4\x2f\x17\x0d\xc7\x46\xb8\x1e\xc3\x4a\x4c\x22\x25\x79\x5e\x5d\x74\x1b\xf7\x94\xfa\x6f\xaa\x34\x88\xb4\xd1\x15\x44\xa8\x9f\x10\x39\xe8\x0d\x82\xac\x54\x8e\x49\xa5\x70\xa3\x58\xa1\x37\x28\x41\x70\x54\x1f\xf6\xd9\x53\x8d\x59\x7f\x4a\x13\x72\x56\x03\xaf\x3a\x1d\x5e\x06\x65\x76\x0a\xf7\x54\x60\xcb\x3a\x0d\xc7\x97\xda\xb5\x6a\xc2\xae\xa1\x46\x86\xa8\x1d\xf5\x7b\xdb\x3e\xad\xd3\x7f\x09\x96\x28\x88\x88\xa2\x31\x50\x9e\x0a\x99\x59\x09\x8d\x9a\x87\x95\xda\xd3\xe2\xa0\xa3\xd6\xad\xf3\x0e\xdb\xf2\x92\x01\xc7\xad\x5b\x73\x12\x3f\x92\x35\xee\xf1\x2f\x3b\x2a\xfd\xc0\x49\x36\xd6\x28\x0a\x19\xe3\x28\x01\x72\x4d\xf5\xf3\x68\x73\x5b\x5f\x9d\xd6\xfb\x8b\x77\xdd\xf9\x8f\xc4\x53\xa3\x0a\x46\x89\x1a\x69\xec\x0d\xd5\x72\xf7\xb2\x1f\x68\xd1\x98\x03\x08\xa8\x76\x1a\xda\xb7\x4a\xcd\x73\x2a\xbe\x6a\xa2\xf1\x40\xe8\xf1\x51\x5a\x52\xbe\x5e\x0d\x12\xbe\xf4\xbe\xbe\x0c\x28\xb4\xc8\x13\xa2\x71\x5c\x0b\xd3\xa1\x47\xe2\xbe\x25\xc6\x46\x4a\x90\xe1\xb9\x46\x6a\x5b\xce\xcf\xbc\x3f\x6d\x10\x5a\x9f\xfc\x23\xae\x66\x38\x67\x93\xa1\x99\xb6\xbd\xdd\x77\xa6\xff\x20\x19\xb2\xcb\x98\x28\x4c\x60\x8b\x52\x75\x66\x5b\x86\xde\xb2\x93\xdc\x69\xe4\x49\x78\xa4\x44\x44\x61\x37\x2e\x40\x6f\xa8\xda\xfb\x54\x72\x87\x3f\x54\xd4\xac\x51\x9f\xc3\x91\xab\x2c\x1b\xe2\xc4\xc6\xfc\x95\x3f\x94\xfd\xcf\xe4\xcc\xb9\xa4\xdb\xc9\x5c\x32\x30\xdb\x01\x98\x40\x15\x94\x9c\x66\x67\x17\x09\xc1\x90\x78\x2a\xb3\xbb\xf4\x84\x4c\x32\x67\x85\x24\xec\x3c\xc1\xd6\xac\x9e\x21\x33\x2c\x38\xfd\xad\x28\x6d\x5f\xab\x94\xf2\xb5\x9d\xe8\x09\x4c\x2d\x85\x98\x08\x00\x3f\x3b\x93\xd8\xe0\x6e\xe5\x74\x29\x84\x0e\x5c\x42\xc7\x6d\xef\x01\x07\x73\x22\x49\x86\x1a\xe5\x10\x06\xae\x00\xdb\x6d\x45\x04\x3f\x62\x0f\x49\x2d\x86\xb3\xe6\x70\x4a\x0b\x87\x8d\xa8\xbb\x3f\x61\x05\x5f\x5c\xaf\xcc\xd6\x3c\x9f\x77\x46\xf9\xaa\x55\xcf\xf4\x78\xec\x99\xec\x93\x49\x5c\x08\x4f\x1b\xa2\x21\x16\x59\x44\x79\x09\xf1\x45\x0a\x8d\xee\x80\x48\x63\x59\x37\xbf\xb3\x65\xef\x29\x3e\x9e\xbc\x82\xf8\x05\xf0\x04\xdf\x55\xa6\xfa\xf5\x57\x9b\xe9\x16\xbf\xd5\x09\xb9\x96\x63\xfe\x04\x1d\x8f\xa9\x96\xea\xc6\x73\xbc\x1d\xc4\xfc\x35\x42\x1b\xbd\xac\x82\xc6\x5b\x42\x19\x89\x18\xb6\x7c\xe4\xf4\x6e\xd1\xf3\xfe\x29\xdf\x18\x13\x83\x80\xa2\x7c\xdd\x9e\xf9\x14\x97\xc9\xe0\xef\x50\xfa\x27\x82\x4e\xb7\xc9\xe2\xab\x43\x39\x52\x28\x8d\x0a\x3d\x43\x6a\x25\x1b\x25\xb9\x9f\x98\xf2\x4c\x1e\xeb\x4f\xda\x2f\x98\xfa\xc9\xf8\x87\x79\x89\x61\xc0\xd4\x3f\x74\x70\x51\xc9\x6c\xcc\x3b\xbb\x73\x08\x09\xe8\x00\x53\x1c\xaa\x80\x4f\xde\xe6\x1c\x18\x72\xf5\xa9\x5f\xe4\xbc\x9e\x3a\x4a\x5e\x87\xe9\xe1\x27\xd3\x39\x5c\x01\x06\x8e\x98\x71\x3b\x6b\xd9\x21\x92\x7b\xf4\x40\x5e\x64\xb3\x31\x5c\x53\x7b\xf3\xb5\xd4\x94\x6b\x5c\x4f\xe6\xa9\x0e\x79\xca\x04\x99\x4a\x55\x1d\xe2\x0a\x5c\x79\x92\x5b\x31\x3d\x69\x93\x42\x12\x4f\xd7\x05\x67\xf8\x6c\x22\x23\x55\xbf\xfb\xa3\xdc\x30\x2b\x98\xa6\x39\x3b\xdc\x15\xbf\x77\x0c\x68\x4c\xf5\x1c\x94\x80\x51\xb8\xa5\x80\xee\xc5\x23\xc4\x84\x43\x84\x60\xf7\x98\xaa\x49\x82\xd1\xc8\xe8\xba\xda\x9d\xe9\x1c\x56\x6e\xff\xe6\x94\x44\x18\x13\x4f\x98\x3c\xc4\x1b\x41\x63\x8f\x2c\x0f\x23\xba\xba\x15\x4a\x51\x86\xf0\x1f\xc2\x0a\x1c\xc3\x1b\x1d\x26\x7b\xda\xba\x71\x5a\xb2\x31\x4c\x15\x18\xe7\xbb\xb0\x18\x44\xd9\xed\x7c\xab\x41\x33\x86\x01\x22\x5b\xef\x41\x42\xe0\x20\x84\x41\x42\x08\x4d\x9b\x30\x09\x0d\xc1\x6b\x9d\x49\x49\xc1\xf4\x83\x95\xff\x88\x95\xc6\x72\x71\xa6\x3a\xcc\xaf\x6d\x7f\x3b\x8b\xde\x6a\x63\xdc\x5d\x64\x54\x6b\x4c\x02\x0c\x74\x57\x59\xa8\x95\xa5\x5a\xc9\x10\x56\xbc\x60\xcc\xfd\x3f\x8b\xdc\x97\x0a\xa6\xd5\xca\x3f\x2e\x5b\xe0\x8e\x64\x39\xc3\x23\x75\xfb\xd9\x71\x39\x58\xb7\x55\xff\x61\xdd\xbe\x2d\x85\x1e\x5f\xe5\x78\xd4\xf4\x53\x07\x65\xd3\xd5\xfa\xc8\xfe\x65\xb9\xdf\x83\x49\xeb\x74\xb0\x77\xde\x12\x52\xe9\x13\xad\x51\xf2\xdb\x99\x82\xff\x97\xed\xdd\x37\x97\xdf\xdd\xff\xf5\xfd\x44\xfd\xe6\x53\x3b\x8d\x9d\x5f\x34\x27\x9d\x94\x03\x31\x2e\xa3\x69\x5c\x30\x22\x2b\x81\x3f\xc0\x8d\x86\x27\xca\x18\x14\x0a\x6d\x4a\x6d\xf5\x49\xa5\xc8\x9c\xab\x49\xdc\x52\x51\xa8\xaa\x97\x3b\x38\x25\x49\x02\x42\x82\xd8\xa2\x7c\x92\x54\xbb\xfa\x50\x98\xb5\x2d\xc1\x98\x91\xa9\x7d\x82\x80\x2d\x80\xf9\xba\x6b\xf2\x00\xb8\x16\x27\x7c\x63\x14\x96\xaf\xce\xf4\x3c\x8c\x1d\x3f\xf6\x6a\xff\xa6\xaa\xb3\x03\xeb\xd0\x90\xa2\xae\xc1\x07\x64\x60\x5b\x6d\x56\x2c\x6b\xa5\x35\xee\x72\xd0\x1b\x62\x4f\xd4\x6c\x6a\x69\x19\x2b\x2b\x94\x86\x8d\xe0\x42\x82\x16\x06\x16\x6d\x09\xa3\x21\x4b\xc7\x22\x25\xcb\x41\x30\x68\x4f\xd0\x8f\x8e\x47\x89\x4e\x20\x15\xb2\xef\x96\x06\xdd\x7c\xf6\xc3\xd5\xe7\xc6\x2e\x9e\xc8\xbd\xcc\x77\xa6\xe3\x2f\x77\x1f\x2f\x7f\xfe\xdb\xe5\x77\xf7\x77\xe4\xf2\xbf\x1f\x2f\x7f\x36\x09\xee\x2f\xef\x4f\x0d\x82\x48\xa1\xc5\x1a\x39\x4a\xa2\x27\xf6\x4f\x3b\x5d\x06\x6a\xc5\xc6\x2c\x54\x41\x87\x25\x44\xcf\x36\x7d\x44\x24\x7e\x44\x1e\xe4\x89\x8b\x20\xf2\x58\xa2\x2d\xa5\x1e\x04\x67\xcf\x0b\xc8\x67\xaa\x0d\xc3\xca\x95\x1c\x1a\x92\xc2\x46\xa0\x1d\x06\xc1\x64\x02\xdf\xca\x6d\x59\x39\x2b\x30\x2b\x64\x82\xf2\x60\x39\x3b\x40\xa9\x63\xd4\x42\x99\x35\xde\x2c\x51\x0e\xae\xda\x71\x8c\xe4\x8f\xe8\x15\x4d\x27\x11\x36\x00\x5d\x0e\x1e\x65\x0f\x20\xef\x5a\xe8\xb7\x85\x0e\x67\x15\x92\x4b\x8c\x97\x0b\xe1\x16\xbf\xf3\xdb\x36\x70\xf7\xcf\xef\x92\xc2\x21\x76\x5d\x64\x2d\x3c\xa0\x12\x9a\xac\x62\xcc\x42\xf8\xc7\x75\x54\xdc\xe5\x42\x2d\xe5\xa5\x79\x11\x31\x1a\xb3\x67\xa8\xb8\x1e\xe0\xab\x5e\x45\xa5\xcd\x13\xa6\x97\x96\xc5\xcc\x46\xdb\x9c\x02\x52\xca\x34\x4a\x12\xf9\x6e\xa4\xcd\x2e\x46\x11\xba\xdc\x6c\xfc\xc2\x31\x37\x59\x39\x2f\xa4\x51\x49\xd0\xae\xce\x22\xe1\x9b\x0a\x89\x74\xcd\x1f\xcc\xb2\xb0\x0c\x9a\x80\x92\xe5\xab\xac\x34\xee\x7a\xe1\xc1\x92\xb8\xee\x07\xe5\xa0\xb0\x6d\xf1\x54\xa2\x0f\x57\xc7\x39\x23\x74\xff\x92\xe5\x28\x71\xbe\x11\xdc\x9b\xf3\xcd\xed\xf6\xef\x01\xb4\xdf\xfa\xd2\xc6\x34\xf1\xde\xc3\xb7\x57\xf5\x4e\xbc\x17\xbe\x46\x83\xda\x17\xf0\x6f\xbb\x83\xb0\x21\x5b\x04\x02\x0d\x64\x2e\xd9\x9f\xdb\xd7\x69\x82\x5c\xd3\x94\x2e\x22\x59\x0b\x32\x12\xc8\x08\xe5\xd0\x62\x7f\x9a\x3c\xed\x2e\xf8\xdc\x94\x65\x9b\x49\xd5\xc7\xa9\x83\x27\xb8\x5b\x58\x13\x1c\x1c\xd7\x73\x9b\x36\x23\xbb\x07\x86\x7c\xad\x37\x07\x0b\x94\x91\x1d\xcd\x8a\x0c\x1c\x9b\x7e\x8d\x50\xd5\xe3\xfe\x07\x7f\x95\x84\x15\xfe\x38\x5a\xc2\xe3\xca\x81\x4a\xc0\x91\x1a\xa8\x92\xcf\xff\x48\x71\x61\x01\x29\x3f\xda\x84\x94\xbf\x69\x13\x52\x7e\xac\x09\x4b\x01\xdf\xa8\x09\xfd\xaf\x74\xcc\xdc\x59\x7d\xb5\x62\x46\x64\x54\x3f\x60\x96\xeb\xc3\xc0\xdd\x4d\x6a\xd3\xf2\xc5\x9e\x5d\x4a\x18\x9b\x48\x91\xe7\x98\x00\x4d\xc1\x0e\x01\x42\x82\x2b\x48\xce\x9c\x2d\xed\xde\xc6\x89\x20\x7a\xbd\x6f\xf2\x6a\x08\x3d\x97\x34\x23\xf2\x79\x39\x84\xee\x56\x37\x28\xf9\xbe\x0a\x4c\x97\x48\x92\xa5\x76\xf8\xa8\x02\xc3\xce\xee\xf2\xbd\x82\x20\x33\x37\x59\x03\xe5\x28\xb9\x9d\x5b\x0c\x85\xb1\x9c\xb8\xfe\x1f\x24\x84\xe3\x65\x4f\xce\xd4\x46\x14\x2c\xb1\xb9\x02\x09\x2b\x9f\x27\xc6\x44\x06\xe5\xc1\x85\x04\x3c\x69\x05\xa0\x5e\xa7\x02\x50\x5a\x2c\xe6\x7b\x25\xaf\x53\x6f\xc9\x1c\x0d\xf3\x55\x11\xf9\xdf\xb0\x9b\x58\x97\x33\x92\xe7\xf6\x35\x81\x80\x9c\xc6\x8f\x36\xd9\x3f\x6d\xca\x97\x9e\xd5\x3d\x1c\x85\xda\x10\x7c\x8d\x3b\x8d\x92\x13\xf6\xf5\xd9\x2f\x13\x4a\xc2\x15\x45\xbe\x50\x6c\x36\xec\xce\xed\xaa\x47\xd9\xac\xba\xda\x78\x0c\x8e\xfa\xf3\x66\x63\x45\x1e\x72\xb3\x91\x51\xe5\x3d\x8d\xd9\x1b\x0c\x1d\x6a\x7b\x07\xd2\x77\xc6\x65\xf8\x1d\xbd\x4f\x34\xda\xba\xe4\xa5\x9d\xfa\x0d\xf7\xf8\x33\x9c\x2f\x15\xc9\xf4\xad\x1d\x7b\xa6\x6e\x9f\xe5\x96\x37\x4d\x80\xd4\x4f\xd3\x9b\x97\xe9\x4f\xa2\xfb\xcc\xa8\x7f\xa1\xe7\x4c\x0f\xa8\x9b\x77\x5e\x9d\xb6\xe0\x67\xcc\xe1\xef\xc5\xea\x1e\xad\x4d\x2c\x46\xf9\xa3\x51\x9d\xbb\x0c\xc3\x48\x73\x11\x66\xc9\x57\x63\xee\x20\xf9\xff\xeb\xad\xf1\x99\x5e\x82\x9e\xe8\x99\x76\x40\x84\x96\x3c\xe6\xe3\x14\x3e\xc6\x1e\xe1\xda\xf9\x67\x3b\xec\x7a\x05\x6e\x04\xf7\xe7\x6a\xd4\xd7\x0a\xcf\xa9\x7f\x67\xa0\x43\x38\x17\x9f\x5e\x6f\xd1\xfb\x3a\x9c\x7f\xe3\xe1\xf1\xae\x63\x4c\x89\x3d\x65\x86\x04\xb1\xc7\x71\xfc\xa0\x3c\xa6\x17\x9d\xba\x3f\xd2\x03\x33\xc8\x58\x7d\x25\xbe\xce\xe4\x3e\x07\xf8\x87\xbd\x0f\x5e\x33\x11\x11\xf6\x30\xf1\x34\xb4\x2f\xdf\x3f\x6d\x1f\xe8\x3c\xbc\x4c\x51\x22\x8f\x47\x37\x3f\xfa\x97\xde\xca\x0e\x26\xff\xba\x39\xb4\x9f\x58\xda\x70\xc6\x04\xa8\x03\xdb\xad\xe9\x41\x4a\xd9\x18\x2a\x78\x83\x4f\xe6\x7d\xf4\x3a\x9c\xc5\x5a\x3d\xfd\x33\xd8\x3b\xf7\xdf\x97\x77\xff\x0b\x00\x00\xff\xff\xcc\x76\x11\xc6\x6a\x48\x00\x00")

func regoSpecJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoSpecJson,
		"rego-spec.json",
	)
}

func regoSpecJson() (*asset, error) {
	bytes, err := regoSpecJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-spec.json", size: 18538, mode: os.FileMode(420), modTime: time.Unix(1533144450, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _regoTypeMappingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xc1\x8e\xd3\x30\x10\x86\xef\x7d\x8a\x51\x16\x09\x09\xb1\x0d\x27\x0e\xbd\x23\x71\x41\xe2\xc0\x0d\x71\x98\xc6\x93\x74\x76\x1d\xdb\x8c\x27\x5d\x0a\xea\xbb\x23\x3b\x6d\xba\x49\xb3\xed\x82\xd4\x9e\x62\xcf\x8c\xe7\xf7\xf7\x4f\xfd\x67\x01\x00\x50\xbc\x89\xd5\x86\x5a\x2c\x56\x50\x6c\x54\xc3\xaa\x2c\x1f\xa2\x77\xf7\xfd\xee\xd2\x4b\x53\x1a\xc1\x5a\xef\x3f\x7c\x2c\xfb\xbd\xbb\xe2\x7d\x5f\xa9\xac\x96\x52\xdd\xb7\x5d\x20\xf8\x82\x21\xb0\x6b\xe2\x31\x6a\x28\x56\xc2\x41\xd9\xbb\x9c\xb3\xe1\x08\x35\x5b\x02\x8e\xd0\x45\x32\xa0\x1e\x5a\x0c\x40\xbf\x94\xc4\xa1\x05\xdd\x05\x8a\x69\xd7\xa2\x6b\x3a\x6c\x08\x62\xa0\x8a\x6b\xae\xe2\x72\x68\xb9\x0b\xb9\xa3\x5f\x3f\x50\xa5\xc7\x5d\x34\x86\x53\x1f\xb4\x5f\xc5\x07\x12\x65\x8a\xc5\x0a\x6a\xb4\x91\x0e\x29\x01\x35\xb5\x19\xc5\x7b\x00\x39\xbc\x7c\x37\x5a\xf7\x60\x84\xea\xd4\xeb\xae\x34\x54\xb3\xcb\x1d\x62\x99\x15\x0c\x89\xfb\xfc\xb5\x1f\xae\x3c\xe4\x8d\x8f\x3f\xc8\x9e\x34\x18\xf1\x3b\xdc\x65\x08\xce\xe1\x7b\xa4\xdd\x73\x7a\x2a\xe8\xa2\xc5\x94\x02\xe8\xc6\x20\xdf\x46\x88\xdd\x3a\x7d\x41\x2d\xbe\x05\x1c\x60\xe6\xfc\xe5\xb4\xdd\x2c\xd8\x21\x7a\x1d\xf0\x90\x7a\x19\xf4\x25\xe0\x57\xc0\xb7\xfd\x7c\x15\x67\x35\xfb\xc5\xfc\x6a\x7f\x52\x56\x1c\x8b\x5f\xf6\xe0\x30\xbe\x57\x6d\x20\xa8\x50\xa9\xf1\x72\xb2\x62\xbd\x83\x86\x1c\x09\xaa\x97\x08\xec\xc0\x8b\x21\x79\xee\x10\x4d\xa7\x9c\x5d\x8a\x6e\x88\x05\xfc\x93\x03\x6e\x83\xa5\x96\x9c\xde\xd8\x1c\xa1\x9f\x1d\x0b\x99\x62\x05\xdf\xcf\x3d\x19\x8f\x76\xfa\xfd\x98\x9a\x7b\xc5\xd5\xd9\x39\xbf\xc4\x72\x00\x64\x32\x98\xe9\xcd\xcf\x08\x44\x95\xf9\x19\x38\xaf\x2b\xd2\xe4\xbc\x5a\xcc\x67\xff\x94\x0c\xcb\xd3\x86\x96\x7f\x53\x72\xe7\x06\x9a\xda\xe0\xe5\xf5\xaa\x3e\x6d\xc9\x69\x87\x16\x4e\x1e\x43\x7f\x04\x78\x81\x80\xd5\x63\x7a\x26\x75\x83\x0a\x41\xfc\x96\x4d\x7a\x40\x6f\xa1\x7b\x8b\x96\x0d\x1e\x64\xfd\xa3\x76\x87\x2d\x81\xaf\x01\xa1\xea\xa2\xfa\x16\x4e\x87\x41\xdd\xb9\x2a\x17\xfc\xaf\xd6\x97\xfe\xfb\xfd\xbb\xbc\xd8\x2f\xfe\x06\x00\x00\xff\xff\x74\x2b\x12\xf9\xe6\x06\x00\x00")

func regoTypeMappingJsonBytes() ([]byte, error) {
	return bindataRead(
		_regoTypeMappingJson,
		"rego-type-mapping.json",
	)
}

func regoTypeMappingJson() (*asset, error) {
	bytes, err := regoTypeMappingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rego-type-mapping.json", size: 1766, mode: os.FileMode(420), modTime: time.Unix(1529622242, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gen.sh": genSh,
	"rego-abstract.in": regoAbstractIn,
	"rego-abstract.json": regoAbstractJson,
	"rego-attribute.in": regoAttributeIn,
	"rego-info.json": regoInfoJson,
	"rego-param.in": regoParamIn,
	"rego-shared-params.in": regoSharedParamsIn,
	"rego-shared-params.json": regoSharedParamsJson,
	"rego-spec.in": regoSpecIn,
	"rego-spec.json": regoSpecJson,
	"rego-type-mapping.json": regoTypeMappingJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gen.sh": &bintree{genSh, map[string]*bintree{}},
	"rego-abstract.in": &bintree{regoAbstractIn, map[string]*bintree{}},
	"rego-abstract.json": &bintree{regoAbstractJson, map[string]*bintree{}},
	"rego-attribute.in": &bintree{regoAttributeIn, map[string]*bintree{}},
	"rego-info.json": &bintree{regoInfoJson, map[string]*bintree{}},
	"rego-param.in": &bintree{regoParamIn, map[string]*bintree{}},
	"rego-shared-params.in": &bintree{regoSharedParamsIn, map[string]*bintree{}},
	"rego-shared-params.json": &bintree{regoSharedParamsJson, map[string]*bintree{}},
	"rego-spec.in": &bintree{regoSpecIn, map[string]*bintree{}},
	"rego-spec.json": &bintree{regoSpecJson, map[string]*bintree{}},
	"rego-type-mapping.json": &bintree{regoTypeMappingJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

